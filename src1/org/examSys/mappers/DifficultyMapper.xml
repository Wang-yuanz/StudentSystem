<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.examSys.dao.DifficultyDao">
	<insert id="add" parameterType="Difficulty" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into difficulty(name) values(#{name})
	</insert>
	
	<delete id="deleteById" parameterType="int">
		delete from difficulty where id = #{id}
	</delete> 
	
	<delete id="deleteByIds" parameterType="java.lang.reflect.Array">
		delete from difficulty where id in
		<foreach collection="array" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="Difficulty">
		update difficulty set name = #{name} where id = #{id}
	</update>
	
	<select id="getById" parameterType="int" resultType="Difficulty">
		select id,name from difficulty where id = #{id}
	</select>
	
	
	<select id="getAll" resultType="org.examSys.pojo.Difficulty">
		select id, name from difficulty 
	</select>
	
	<select id="getList" resultType="Difficulty">
		select top (#{limit}) id,name from difficulty where id not in (select top (#{start}) id from difficulty)
	</select>
	
	<select id="getCount" resultType="int">
		select count(1) from difficulty
	</select>
	
	<!-- 构造条件 -->
	<sql id="conditionSql">
		<if test="condition != null">
			<if test="condition.name != null and condition.name != ''">
				and name like concat('%',#{condition.name},'%')
			</if>
		</if>
	</sql>
	
	<select id="getListByCondition" resultType="Difficulty">
		select top (#{limit}) id,name from difficulty where id not in (select top (#{start}) id from difficulty <where><include refid="conditionSql"></include></where>)
		<!-- 此处添加查询条件 -->
		<include refid="conditionSql"></include>
	</select>
	
	<select id="getCountByCondition" resultType="int">
		select count(1) from difficulty
		<!-- 此处添加查询条件 -->
		<where><include refid="conditionSql"></include></where>
	</select>
	
</mapper>










