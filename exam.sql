/*
 Navicat Premium Data Transfer

 Source Server         : mysql_text
 Source Server Type    : MySQL
 Source Server Version : 80018
 Source Host           : localhost:3306
 Source Schema         : exam

 Target Server Type    : MySQL
 Target Server Version : 80018
 File Encoding         : 65001

 Date: 18/06/2020 09:42:46
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for t_capter
-- ----------------------------
DROP TABLE IF EXISTS `t_capter`;
CREATE TABLE `t_capter`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `chapter_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '章节名称',
  `chapter` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '第几章节',
  `chapter_hours` int(11) NULL DEFAULT NULL COMMENT '学时',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `deleted` bit(1) NULL DEFAULT b'0' COMMENT '是否删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_capter
-- ----------------------------
INSERT INTO `t_capter` VALUES (1, '绪论', '第1章', 4, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (2, 'Java编程基础 数据类型', '第2章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (3, 'Java程序基本结构', '第3章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (4, '类与对象', '第4章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (5, '继承、多态和接口', '第5章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (6, '常用工具类与算法', '第6章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (7, '用户图形界面设计', '第7章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (8, 'Java异常处理', '第8章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (9, 'Java输入输出', '第9章', 2, '2020-02-11 21:55:29', '2020-02-11 21:55:33', b'0');
INSERT INTO `t_capter` VALUES (10, '结尾', '第十章', 2, NULL, NULL, b'1');
INSERT INTO `t_capter` VALUES (11, '章节10', '章节10', 10, NULL, NULL, b'0');

-- ----------------------------
-- Table structure for t_capter_question
-- ----------------------------
DROP TABLE IF EXISTS `t_capter_question`;
CREATE TABLE `t_capter_question`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `capter_id` int(11) NULL DEFAULT NULL COMMENT '章节id',
  `question_id` int(11) NULL DEFAULT NULL COMMENT '题目id',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 392 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_capter_question
-- ----------------------------
INSERT INTO `t_capter_question` VALUES (1, 1, 1, '2020-02-19 19:56:18', '2020-02-19 19:56:23');
INSERT INTO `t_capter_question` VALUES (2, 2, 2, '2020-02-19 21:05:52', '2020-02-19 21:05:52');
INSERT INTO `t_capter_question` VALUES (4, 4, 4, '2020-02-19 19:56:55', '2020-02-19 19:56:58');
INSERT INTO `t_capter_question` VALUES (5, 3, 3, '2020-02-19 20:55:03', '2020-02-19 20:55:03');
INSERT INTO `t_capter_question` VALUES (6, 2, 3, '2020-02-19 20:55:03', '2020-02-19 20:55:03');
INSERT INTO `t_capter_question` VALUES (7, 4, 3, '2020-02-19 20:55:03', '2020-02-19 20:55:03');
INSERT INTO `t_capter_question` VALUES (8, 1, 5, '2020-02-22 16:16:12', '2020-02-22 16:16:12');
INSERT INTO `t_capter_question` VALUES (9, 1, 6, '2020-03-03 14:58:56', '2020-03-03 14:58:56');
INSERT INTO `t_capter_question` VALUES (10, 1, 8, '2020-03-03 15:01:21', '2020-03-03 15:01:21');
INSERT INTO `t_capter_question` VALUES (11, 1, 9, '2020-03-03 15:02:53', '2020-03-03 15:02:53');
INSERT INTO `t_capter_question` VALUES (12, 1, 10, '2020-03-03 15:45:53', '2020-03-03 15:45:53');
INSERT INTO `t_capter_question` VALUES (13, 1, 11, '2020-03-03 15:47:43', '2020-03-03 15:47:43');
INSERT INTO `t_capter_question` VALUES (14, 1, 12, '2020-03-03 15:49:15', '2020-03-03 15:49:15');
INSERT INTO `t_capter_question` VALUES (15, 1, 13, '2020-03-03 15:51:23', '2020-03-03 15:51:23');
INSERT INTO `t_capter_question` VALUES (16, 1, 14, '2020-03-03 15:53:09', '2020-03-03 15:53:09');
INSERT INTO `t_capter_question` VALUES (17, 1, 15, '2020-03-03 15:54:33', '2020-03-03 15:54:33');
INSERT INTO `t_capter_question` VALUES (18, 1, 16, '2020-03-03 15:56:15', '2020-03-03 15:56:15');
INSERT INTO `t_capter_question` VALUES (19, 1, 17, '2020-03-03 15:57:49', '2020-03-03 15:57:49');
INSERT INTO `t_capter_question` VALUES (20, 1, 18, '2020-03-03 15:59:33', '2020-03-03 15:59:33');
INSERT INTO `t_capter_question` VALUES (21, 1, 19, '2020-03-03 16:26:28', '2020-03-03 16:26:28');
INSERT INTO `t_capter_question` VALUES (22, 1, 20, '2020-03-03 16:36:46', '2020-03-03 16:36:46');
INSERT INTO `t_capter_question` VALUES (23, 1, 21, '2020-03-03 16:50:20', '2020-03-03 16:50:20');
INSERT INTO `t_capter_question` VALUES (24, 1, 22, '2020-03-03 17:04:04', '2020-03-03 17:04:04');
INSERT INTO `t_capter_question` VALUES (25, 1, 23, '2020-03-03 17:09:17', '2020-03-03 17:09:17');
INSERT INTO `t_capter_question` VALUES (26, 2, 24, '2020-03-03 17:13:56', '2020-03-03 17:13:56');
INSERT INTO `t_capter_question` VALUES (27, 3, 24, '2020-03-03 17:13:56', '2020-03-03 17:13:56');
INSERT INTO `t_capter_question` VALUES (28, 4, 24, '2020-03-03 17:13:56', '2020-03-03 17:13:56');
INSERT INTO `t_capter_question` VALUES (29, 1, 25, '2020-03-03 17:23:21', '2020-03-03 17:23:21');
INSERT INTO `t_capter_question` VALUES (30, 1, 26, '2020-03-03 17:26:55', '2020-03-03 17:26:55');
INSERT INTO `t_capter_question` VALUES (31, 1, 27, '2020-03-03 17:29:13', '2020-03-03 17:29:13');
INSERT INTO `t_capter_question` VALUES (32, 1, 28, '2020-03-03 17:31:02', '2020-03-03 17:31:02');
INSERT INTO `t_capter_question` VALUES (33, 1, 29, '2020-03-03 17:32:58', '2020-03-03 17:32:58');
INSERT INTO `t_capter_question` VALUES (34, 1, 30, '2020-03-03 17:34:48', '2020-03-03 17:34:48');
INSERT INTO `t_capter_question` VALUES (35, 1, 31, '2020-03-03 17:38:19', '2020-03-03 17:38:19');
INSERT INTO `t_capter_question` VALUES (36, 1, 32, '2020-03-03 17:40:12', '2020-03-03 17:40:12');
INSERT INTO `t_capter_question` VALUES (37, 2, 33, '2020-03-03 17:41:45', '2020-03-03 17:41:45');
INSERT INTO `t_capter_question` VALUES (38, 2, 35, '2020-03-03 17:47:19', '2020-03-03 17:47:19');
INSERT INTO `t_capter_question` VALUES (39, 2, 38, '2020-03-03 17:55:28', '2020-03-03 17:55:28');
INSERT INTO `t_capter_question` VALUES (40, 2, 39, '2020-03-03 18:01:22', '2020-03-03 18:01:22');
INSERT INTO `t_capter_question` VALUES (41, 2, 40, '2020-03-03 18:02:50', '2020-03-03 18:02:50');
INSERT INTO `t_capter_question` VALUES (42, 2, 41, '2020-03-03 18:04:32', '2020-03-03 18:04:32');
INSERT INTO `t_capter_question` VALUES (43, 2, 43, '2020-03-03 18:10:24', '2020-03-03 18:10:24');
INSERT INTO `t_capter_question` VALUES (44, 2, 44, '2020-03-03 18:15:20', '2020-03-03 18:15:20');
INSERT INTO `t_capter_question` VALUES (45, 2, 45, '2020-03-03 18:16:54', '2020-03-03 18:16:54');
INSERT INTO `t_capter_question` VALUES (46, 2, 46, '2020-03-03 18:18:31', '2020-03-03 18:18:31');
INSERT INTO `t_capter_question` VALUES (47, 2, 47, '2020-03-03 18:20:02', '2020-03-03 18:20:02');
INSERT INTO `t_capter_question` VALUES (48, 2, 48, '2020-03-03 18:21:31', '2020-03-03 18:21:31');
INSERT INTO `t_capter_question` VALUES (49, 2, 49, '2020-03-03 18:22:48', '2020-03-03 18:22:48');
INSERT INTO `t_capter_question` VALUES (50, 2, 50, '2020-03-03 18:24:14', '2020-03-03 18:24:14');
INSERT INTO `t_capter_question` VALUES (51, 2, 51, '2020-03-03 18:26:22', '2020-03-03 18:26:22');
INSERT INTO `t_capter_question` VALUES (52, 2, 52, '2020-03-03 18:28:18', '2020-03-03 18:28:18');
INSERT INTO `t_capter_question` VALUES (53, 2, 53, '2020-03-03 18:29:47', '2020-03-03 18:29:47');
INSERT INTO `t_capter_question` VALUES (54, 2, 54, '2020-03-03 18:31:10', '2020-03-03 18:31:10');
INSERT INTO `t_capter_question` VALUES (55, 2, 55, '2020-03-03 18:32:26', '2020-03-03 18:32:26');
INSERT INTO `t_capter_question` VALUES (56, 2, 56, '2020-03-03 18:33:54', '2020-03-03 18:33:54');
INSERT INTO `t_capter_question` VALUES (57, 2, 57, '2020-03-03 18:35:41', '2020-03-03 18:35:41');
INSERT INTO `t_capter_question` VALUES (58, 2, 59, '2020-03-03 18:38:03', '2020-03-03 18:38:03');
INSERT INTO `t_capter_question` VALUES (59, 2, 60, '2020-03-03 18:40:20', '2020-03-03 18:40:20');
INSERT INTO `t_capter_question` VALUES (60, 2, 61, '2020-03-03 18:53:11', '2020-03-03 18:53:11');
INSERT INTO `t_capter_question` VALUES (61, 2, 62, '2020-03-03 18:57:02', '2020-03-03 18:57:02');
INSERT INTO `t_capter_question` VALUES (62, 2, 63, '2020-03-03 18:58:43', '2020-03-03 18:58:43');
INSERT INTO `t_capter_question` VALUES (63, 2, 64, '2020-03-03 18:59:58', '2020-03-03 18:59:58');
INSERT INTO `t_capter_question` VALUES (64, 2, 65, '2020-03-03 19:02:17', '2020-03-03 19:02:17');
INSERT INTO `t_capter_question` VALUES (65, 2, 66, '2020-03-03 19:04:00', '2020-03-03 19:04:00');
INSERT INTO `t_capter_question` VALUES (66, 2, 67, '2020-03-03 19:17:00', '2020-03-03 19:17:00');
INSERT INTO `t_capter_question` VALUES (67, 2, 68, '2020-03-03 19:18:48', '2020-03-03 19:18:48');
INSERT INTO `t_capter_question` VALUES (68, 2, 69, '2020-03-03 19:20:15', '2020-03-03 19:20:15');
INSERT INTO `t_capter_question` VALUES (69, 3, 70, '2020-03-03 19:23:12', '2020-03-03 19:23:12');
INSERT INTO `t_capter_question` VALUES (70, 3, 71, '2020-03-03 19:24:54', '2020-03-03 19:24:54');
INSERT INTO `t_capter_question` VALUES (71, 3, 72, '2020-03-03 19:26:09', '2020-03-03 19:26:09');
INSERT INTO `t_capter_question` VALUES (72, 3, 73, '2020-03-03 19:27:17', '2020-03-03 19:27:17');
INSERT INTO `t_capter_question` VALUES (73, 3, 74, '2020-03-03 19:31:38', '2020-03-03 19:31:38');
INSERT INTO `t_capter_question` VALUES (74, 3, 75, '2020-03-03 19:32:46', '2020-03-03 19:32:46');
INSERT INTO `t_capter_question` VALUES (75, 3, 76, '2020-03-03 19:34:22', '2020-03-03 19:34:22');
INSERT INTO `t_capter_question` VALUES (76, 3, 77, '2020-03-03 19:36:05', '2020-03-03 19:36:05');
INSERT INTO `t_capter_question` VALUES (77, 3, 78, '2020-03-03 19:37:16', '2020-03-03 19:37:16');
INSERT INTO `t_capter_question` VALUES (78, 3, 79, '2020-03-03 19:39:17', '2020-03-03 19:39:17');
INSERT INTO `t_capter_question` VALUES (79, 3, 80, '2020-03-03 19:40:16', '2020-03-03 19:40:16');
INSERT INTO `t_capter_question` VALUES (80, 3, 81, '2020-03-03 19:41:58', '2020-03-03 19:41:58');
INSERT INTO `t_capter_question` VALUES (81, 3, 82, '2020-03-03 19:43:15', '2020-03-03 19:43:15');
INSERT INTO `t_capter_question` VALUES (82, 3, 83, '2020-03-03 19:44:48', '2020-03-03 19:44:48');
INSERT INTO `t_capter_question` VALUES (83, 3, 84, '2020-03-03 19:46:04', '2020-03-03 19:46:04');
INSERT INTO `t_capter_question` VALUES (84, 3, 85, '2020-03-03 19:47:47', '2020-03-03 19:47:47');
INSERT INTO `t_capter_question` VALUES (85, 3, 86, '2020-03-03 19:49:20', '2020-03-03 19:49:20');
INSERT INTO `t_capter_question` VALUES (86, 3, 87, '2020-03-03 19:50:43', '2020-03-03 19:50:43');
INSERT INTO `t_capter_question` VALUES (87, 3, 88, '2020-03-03 19:51:52', '2020-03-03 19:51:52');
INSERT INTO `t_capter_question` VALUES (88, 3, 89, '2020-03-03 19:53:10', '2020-03-03 19:53:10');
INSERT INTO `t_capter_question` VALUES (89, 3, 90, '2020-03-03 19:54:32', '2020-03-03 19:54:32');
INSERT INTO `t_capter_question` VALUES (90, 3, 91, '2020-03-03 19:56:21', '2020-03-03 19:56:21');
INSERT INTO `t_capter_question` VALUES (91, 3, 92, '2020-03-03 19:57:25', '2020-03-03 19:57:25');
INSERT INTO `t_capter_question` VALUES (92, 4, 93, '2020-03-03 19:59:16', '2020-03-03 19:59:16');
INSERT INTO `t_capter_question` VALUES (93, 4, 94, '2020-03-03 20:00:52', '2020-03-03 20:00:52');
INSERT INTO `t_capter_question` VALUES (94, 4, 95, '2020-03-03 20:02:25', '2020-03-03 20:02:25');
INSERT INTO `t_capter_question` VALUES (95, 4, 96, '2020-03-03 20:03:37', '2020-03-03 20:03:37');
INSERT INTO `t_capter_question` VALUES (96, 4, 97, '2020-03-03 20:04:44', '2020-03-03 20:04:44');
INSERT INTO `t_capter_question` VALUES (97, 4, 98, '2020-03-03 20:06:15', '2020-03-03 20:06:15');
INSERT INTO `t_capter_question` VALUES (98, 4, 99, '2020-03-03 20:07:26', '2020-03-03 20:07:26');
INSERT INTO `t_capter_question` VALUES (99, 4, 100, '2020-03-03 20:10:09', '2020-03-03 20:10:09');
INSERT INTO `t_capter_question` VALUES (100, 4, 101, '2020-03-03 20:11:36', '2020-03-03 20:11:36');
INSERT INTO `t_capter_question` VALUES (101, 4, 102, '2020-03-03 20:13:29', '2020-03-03 20:13:29');
INSERT INTO `t_capter_question` VALUES (102, 4, 103, '2020-03-03 20:15:59', '2020-03-03 20:15:59');
INSERT INTO `t_capter_question` VALUES (103, 4, 104, '2020-03-03 20:17:47', '2020-03-03 20:17:47');
INSERT INTO `t_capter_question` VALUES (104, 4, 105, '2020-03-03 20:24:06', '2020-03-03 20:24:06');
INSERT INTO `t_capter_question` VALUES (105, 4, 106, '2020-03-03 20:25:56', '2020-03-03 20:25:56');
INSERT INTO `t_capter_question` VALUES (106, 4, 107, '2020-03-03 20:27:26', '2020-03-03 20:27:26');
INSERT INTO `t_capter_question` VALUES (107, 4, 108, '2020-03-03 20:28:41', '2020-03-03 20:28:41');
INSERT INTO `t_capter_question` VALUES (108, 4, 109, '2020-03-03 20:32:39', '2020-03-03 20:32:39');
INSERT INTO `t_capter_question` VALUES (109, 4, 110, '2020-03-03 20:34:21', '2020-03-03 20:34:21');
INSERT INTO `t_capter_question` VALUES (110, 4, 111, '2020-03-03 20:36:16', '2020-03-03 20:36:16');
INSERT INTO `t_capter_question` VALUES (111, 4, 112, '2020-03-03 20:57:49', '2020-03-03 20:57:49');
INSERT INTO `t_capter_question` VALUES (112, 4, 113, '2020-03-03 20:59:07', '2020-03-03 20:59:07');
INSERT INTO `t_capter_question` VALUES (113, 4, 114, '2020-03-03 21:00:43', '2020-03-03 21:00:43');
INSERT INTO `t_capter_question` VALUES (114, 5, 115, '2020-03-03 21:02:39', '2020-03-03 21:02:39');
INSERT INTO `t_capter_question` VALUES (115, 5, 116, '2020-03-03 21:03:53', '2020-03-03 21:03:53');
INSERT INTO `t_capter_question` VALUES (116, 5, 117, '2020-03-03 21:05:15', '2020-03-03 21:05:15');
INSERT INTO `t_capter_question` VALUES (117, 5, 118, '2020-03-03 21:06:33', '2020-03-03 21:06:33');
INSERT INTO `t_capter_question` VALUES (118, 5, 119, '2020-03-03 21:07:46', '2020-03-03 21:07:46');
INSERT INTO `t_capter_question` VALUES (119, 5, 120, '2020-03-03 21:09:02', '2020-03-03 21:09:02');
INSERT INTO `t_capter_question` VALUES (120, 5, 121, '2020-03-03 21:10:06', '2020-03-03 21:10:06');
INSERT INTO `t_capter_question` VALUES (121, 5, 122, '2020-03-03 21:11:24', '2020-03-03 21:11:24');
INSERT INTO `t_capter_question` VALUES (122, 5, 123, '2020-03-03 21:12:20', '2020-03-03 21:12:20');
INSERT INTO `t_capter_question` VALUES (123, 5, 124, '2020-03-03 21:13:50', '2020-03-03 21:13:50');
INSERT INTO `t_capter_question` VALUES (124, 5, 125, '2020-03-03 21:15:01', '2020-03-03 21:15:01');
INSERT INTO `t_capter_question` VALUES (125, 5, 126, '2020-03-03 21:16:37', '2020-03-03 21:16:37');
INSERT INTO `t_capter_question` VALUES (126, 5, 127, '2020-03-03 21:17:55', '2020-03-03 21:17:55');
INSERT INTO `t_capter_question` VALUES (127, 5, 128, '2020-03-03 21:19:43', '2020-03-03 21:19:43');
INSERT INTO `t_capter_question` VALUES (128, 5, 129, '2020-03-03 21:21:48', '2020-03-03 21:21:48');
INSERT INTO `t_capter_question` VALUES (129, 5, 130, '2020-03-03 21:23:24', '2020-03-03 21:23:24');
INSERT INTO `t_capter_question` VALUES (130, 5, 131, '2020-03-03 21:24:43', '2020-03-03 21:24:43');
INSERT INTO `t_capter_question` VALUES (131, 5, 132, '2020-03-03 21:26:36', '2020-03-03 21:26:36');
INSERT INTO `t_capter_question` VALUES (132, 5, 133, '2020-03-03 21:28:09', '2020-03-03 21:28:09');
INSERT INTO `t_capter_question` VALUES (133, 5, 134, '2020-03-03 21:29:36', '2020-03-03 21:29:36');
INSERT INTO `t_capter_question` VALUES (134, 5, 135, '2020-03-03 21:30:47', '2020-03-03 21:30:47');
INSERT INTO `t_capter_question` VALUES (135, 5, 136, '2020-03-03 21:32:28', '2020-03-03 21:32:28');
INSERT INTO `t_capter_question` VALUES (136, 5, 137, '2020-03-03 21:33:59', '2020-03-03 21:33:59');
INSERT INTO `t_capter_question` VALUES (137, 5, 138, '2020-03-03 21:35:01', '2020-03-03 21:35:01');
INSERT INTO `t_capter_question` VALUES (138, 6, 139, '2020-03-03 21:36:14', '2020-03-03 21:36:14');
INSERT INTO `t_capter_question` VALUES (139, 6, 140, '2020-03-03 21:37:16', '2020-03-03 21:37:16');
INSERT INTO `t_capter_question` VALUES (140, 6, 141, '2020-03-03 21:38:23', '2020-03-03 21:38:23');
INSERT INTO `t_capter_question` VALUES (141, 6, 142, '2020-03-03 21:39:32', '2020-03-03 21:39:32');
INSERT INTO `t_capter_question` VALUES (142, 6, 143, '2020-03-03 21:40:49', '2020-03-03 21:40:49');
INSERT INTO `t_capter_question` VALUES (143, 6, 144, '2020-03-03 21:41:51', '2020-03-03 21:41:51');
INSERT INTO `t_capter_question` VALUES (144, 6, 145, '2020-03-03 21:42:59', '2020-03-03 21:42:59');
INSERT INTO `t_capter_question` VALUES (145, 6, 146, '2020-03-03 21:44:01', '2020-03-03 21:44:01');
INSERT INTO `t_capter_question` VALUES (146, 6, 147, '2020-03-03 21:45:06', '2020-03-03 21:45:06');
INSERT INTO `t_capter_question` VALUES (147, 6, 148, '2020-03-03 21:46:42', '2020-03-03 21:46:42');
INSERT INTO `t_capter_question` VALUES (148, 6, 149, '2020-03-03 21:48:00', '2020-03-03 21:48:00');
INSERT INTO `t_capter_question` VALUES (149, 6, 150, '2020-03-03 21:49:05', '2020-03-03 21:49:05');
INSERT INTO `t_capter_question` VALUES (150, 6, 151, '2020-03-03 21:50:16', '2020-03-03 21:50:16');
INSERT INTO `t_capter_question` VALUES (151, 7, 152, '2020-03-03 22:03:17', '2020-03-03 22:03:17');
INSERT INTO `t_capter_question` VALUES (152, 7, 153, '2020-03-03 22:04:33', '2020-03-03 22:04:33');
INSERT INTO `t_capter_question` VALUES (153, 7, 154, '2020-03-03 22:06:09', '2020-03-03 22:06:09');
INSERT INTO `t_capter_question` VALUES (154, 7, 155, '2020-03-03 22:07:28', '2020-03-03 22:07:28');
INSERT INTO `t_capter_question` VALUES (155, 7, 156, '2020-03-03 22:08:44', '2020-03-03 22:08:44');
INSERT INTO `t_capter_question` VALUES (156, 7, 157, '2020-03-03 22:09:50', '2020-03-03 22:09:50');
INSERT INTO `t_capter_question` VALUES (157, 7, 158, '2020-03-03 22:10:54', '2020-03-03 22:10:54');
INSERT INTO `t_capter_question` VALUES (158, 7, 159, '2020-03-03 22:12:34', '2020-03-03 22:12:34');
INSERT INTO `t_capter_question` VALUES (159, 7, 160, '2020-03-03 22:14:01', '2020-03-03 22:14:01');
INSERT INTO `t_capter_question` VALUES (160, 7, 161, '2020-03-03 22:15:24', '2020-03-03 22:15:24');
INSERT INTO `t_capter_question` VALUES (161, 7, 162, '2020-03-03 22:16:31', '2020-03-03 22:16:31');
INSERT INTO `t_capter_question` VALUES (162, 7, 163, '2020-03-03 22:17:38', '2020-03-03 22:17:38');
INSERT INTO `t_capter_question` VALUES (163, 7, 164, '2020-03-03 22:18:37', '2020-03-03 22:18:37');
INSERT INTO `t_capter_question` VALUES (164, 7, 165, '2020-03-03 22:19:46', '2020-03-03 22:19:46');
INSERT INTO `t_capter_question` VALUES (165, 7, 166, '2020-03-03 22:20:53', '2020-03-03 22:20:53');
INSERT INTO `t_capter_question` VALUES (166, 7, 167, '2020-03-03 22:21:54', '2020-03-03 22:21:54');
INSERT INTO `t_capter_question` VALUES (167, 7, 168, '2020-03-03 22:23:13', '2020-03-03 22:23:13');
INSERT INTO `t_capter_question` VALUES (168, 7, 169, '2020-03-03 22:24:17', '2020-03-03 22:24:17');
INSERT INTO `t_capter_question` VALUES (169, 7, 170, '2020-03-03 22:25:20', '2020-03-03 22:25:20');
INSERT INTO `t_capter_question` VALUES (170, 7, 171, '2020-03-03 22:26:34', '2020-03-03 22:26:34');
INSERT INTO `t_capter_question` VALUES (171, 7, 172, '2020-03-03 22:27:47', '2020-03-03 22:27:47');
INSERT INTO `t_capter_question` VALUES (172, 7, 173, '2020-03-03 22:29:09', '2020-03-03 22:29:09');
INSERT INTO `t_capter_question` VALUES (173, 7, 174, '2020-03-03 22:30:31', '2020-03-03 22:30:31');
INSERT INTO `t_capter_question` VALUES (174, 7, 175, '2020-03-03 22:31:48', '2020-03-03 22:31:48');
INSERT INTO `t_capter_question` VALUES (175, 7, 176, '2020-03-03 22:32:56', '2020-03-03 22:32:56');
INSERT INTO `t_capter_question` VALUES (176, 8, 177, '2020-03-03 22:34:34', '2020-03-03 22:34:34');
INSERT INTO `t_capter_question` VALUES (177, 8, 178, '2020-03-03 22:35:56', '2020-03-03 22:35:56');
INSERT INTO `t_capter_question` VALUES (178, 8, 179, '2020-03-03 22:37:13', '2020-03-03 22:37:13');
INSERT INTO `t_capter_question` VALUES (179, 8, 180, '2020-03-03 22:38:35', '2020-03-03 22:38:35');
INSERT INTO `t_capter_question` VALUES (180, 8, 181, '2020-03-03 22:39:42', '2020-03-03 22:39:42');
INSERT INTO `t_capter_question` VALUES (181, 8, 182, '2020-03-03 22:41:32', '2020-03-03 22:41:32');
INSERT INTO `t_capter_question` VALUES (182, 8, 183, '2020-03-03 22:42:42', '2020-03-03 22:42:42');
INSERT INTO `t_capter_question` VALUES (183, 8, 184, '2020-03-03 22:43:50', '2020-03-03 22:43:50');
INSERT INTO `t_capter_question` VALUES (184, 8, 185, '2020-03-03 22:44:55', '2020-03-03 22:44:55');
INSERT INTO `t_capter_question` VALUES (185, 8, 186, '2020-03-03 22:46:44', '2020-03-03 22:46:44');
INSERT INTO `t_capter_question` VALUES (186, 8, 187, '2020-03-03 22:48:08', '2020-03-03 22:48:08');
INSERT INTO `t_capter_question` VALUES (187, 8, 188, '2020-03-03 22:49:33', '2020-03-03 22:49:33');
INSERT INTO `t_capter_question` VALUES (188, 8, 189, '2020-03-03 22:50:55', '2020-03-03 22:50:55');
INSERT INTO `t_capter_question` VALUES (189, 8, 190, '2020-03-03 22:51:57', '2020-03-03 22:51:57');
INSERT INTO `t_capter_question` VALUES (190, 8, 191, '2020-03-03 22:53:06', '2020-03-03 22:53:06');
INSERT INTO `t_capter_question` VALUES (191, 8, 192, '2020-03-04 09:14:42', '2020-03-04 09:14:42');
INSERT INTO `t_capter_question` VALUES (192, 8, 193, '2020-03-04 09:16:13', '2020-03-04 09:16:13');
INSERT INTO `t_capter_question` VALUES (193, 8, 194, '2020-03-04 09:17:46', '2020-03-04 09:17:46');
INSERT INTO `t_capter_question` VALUES (194, 8, 195, '2020-03-04 09:19:24', '2020-03-04 09:19:24');
INSERT INTO `t_capter_question` VALUES (195, 8, 196, '2020-03-04 09:20:25', '2020-03-04 09:20:25');
INSERT INTO `t_capter_question` VALUES (196, 8, 197, '2020-03-04 09:21:28', '2020-03-04 09:21:28');
INSERT INTO `t_capter_question` VALUES (197, 8, 198, '2020-03-04 09:22:49', '2020-03-04 09:22:49');
INSERT INTO `t_capter_question` VALUES (198, 8, 199, '2020-03-04 09:23:51', '2020-03-04 09:23:51');
INSERT INTO `t_capter_question` VALUES (199, 8, 200, '2020-03-04 09:25:04', '2020-03-04 09:25:04');
INSERT INTO `t_capter_question` VALUES (200, 8, 201, '2020-03-04 09:26:02', '2020-03-04 09:26:02');
INSERT INTO `t_capter_question` VALUES (201, 8, 202, '2020-03-04 09:27:20', '2020-03-04 09:27:20');
INSERT INTO `t_capter_question` VALUES (202, 9, 203, '2020-03-04 09:28:18', '2020-03-04 09:28:18');
INSERT INTO `t_capter_question` VALUES (203, 9, 204, '2020-03-04 09:29:36', '2020-03-04 09:29:36');
INSERT INTO `t_capter_question` VALUES (204, 9, 205, '2020-03-04 09:30:38', '2020-03-04 09:30:38');
INSERT INTO `t_capter_question` VALUES (205, 9, 206, '2020-03-04 09:31:42', '2020-03-04 09:31:42');
INSERT INTO `t_capter_question` VALUES (206, 9, 207, '2020-03-04 09:33:05', '2020-03-04 09:33:05');
INSERT INTO `t_capter_question` VALUES (207, 9, 208, '2020-03-04 09:34:15', '2020-03-04 09:34:15');
INSERT INTO `t_capter_question` VALUES (208, 9, 209, '2020-03-04 09:35:17', '2020-03-04 09:35:17');
INSERT INTO `t_capter_question` VALUES (209, 9, 210, '2020-03-04 09:36:26', '2020-03-04 09:36:26');
INSERT INTO `t_capter_question` VALUES (210, 9, 211, '2020-03-04 09:37:47', '2020-03-04 09:37:47');
INSERT INTO `t_capter_question` VALUES (211, 9, 212, '2020-03-04 09:39:14', '2020-03-04 09:39:14');
INSERT INTO `t_capter_question` VALUES (212, 9, 213, '2020-03-04 09:40:09', '2020-03-04 09:40:09');
INSERT INTO `t_capter_question` VALUES (213, 9, 214, '2020-03-04 09:41:17', '2020-03-04 09:41:17');
INSERT INTO `t_capter_question` VALUES (214, 9, 215, '2020-03-04 09:42:28', '2020-03-04 09:42:28');
INSERT INTO `t_capter_question` VALUES (215, 9, 216, '2020-03-04 09:43:30', '2020-03-04 09:43:30');
INSERT INTO `t_capter_question` VALUES (217, 9, 218, '2020-03-04 09:48:44', '2020-03-04 09:48:44');
INSERT INTO `t_capter_question` VALUES (218, 9, 219, '2020-03-04 09:50:12', '2020-03-04 09:50:12');
INSERT INTO `t_capter_question` VALUES (219, 9, 220, '2020-03-04 09:51:33', '2020-03-04 09:51:33');
INSERT INTO `t_capter_question` VALUES (220, 9, 221, '2020-03-04 09:52:45', '2020-03-04 09:52:45');
INSERT INTO `t_capter_question` VALUES (221, 1, 222, '2020-03-04 09:58:17', '2020-03-04 09:58:17');
INSERT INTO `t_capter_question` VALUES (222, 2, 223, '2020-03-04 09:59:19', '2020-03-04 09:59:19');
INSERT INTO `t_capter_question` VALUES (223, 2, 224, '2020-03-04 09:59:56', '2020-03-04 09:59:56');
INSERT INTO `t_capter_question` VALUES (224, 3, 225, '2020-03-04 10:00:40', '2020-03-04 10:00:40');
INSERT INTO `t_capter_question` VALUES (226, 4, 227, '2020-03-04 10:02:04', '2020-03-04 10:02:04');
INSERT INTO `t_capter_question` VALUES (227, 4, 228, '2020-03-04 10:02:38', '2020-03-04 10:02:38');
INSERT INTO `t_capter_question` VALUES (228, 5, 229, '2020-03-04 10:03:54', '2020-03-04 10:03:54');
INSERT INTO `t_capter_question` VALUES (229, 5, 230, '2020-03-04 10:04:30', '2020-03-04 10:04:30');
INSERT INTO `t_capter_question` VALUES (230, 5, 231, '2020-03-04 10:05:10', '2020-03-04 10:05:10');
INSERT INTO `t_capter_question` VALUES (231, 7, 232, '2020-03-04 10:06:46', '2020-03-04 10:06:46');
INSERT INTO `t_capter_question` VALUES (235, 4, 236, '2020-03-04 10:11:41', '2020-03-04 10:11:41');
INSERT INTO `t_capter_question` VALUES (236, 5, 236, '2020-03-04 10:11:41', '2020-03-04 10:11:41');
INSERT INTO `t_capter_question` VALUES (237, 2, 237, '2020-03-04 10:12:28', '2020-03-04 10:12:28');
INSERT INTO `t_capter_question` VALUES (238, 3, 237, '2020-03-04 10:12:28', '2020-03-04 10:12:28');
INSERT INTO `t_capter_question` VALUES (239, 4, 237, '2020-03-04 10:12:28', '2020-03-04 10:12:28');
INSERT INTO `t_capter_question` VALUES (240, 3, 238, '2020-03-04 10:13:20', '2020-03-04 10:13:20');
INSERT INTO `t_capter_question` VALUES (241, 2, 238, '2020-03-04 10:13:20', '2020-03-04 10:13:20');
INSERT INTO `t_capter_question` VALUES (242, 4, 238, '2020-03-04 10:13:20', '2020-03-04 10:13:20');
INSERT INTO `t_capter_question` VALUES (243, 5, 238, '2020-03-04 10:13:20', '2020-03-04 10:13:20');
INSERT INTO `t_capter_question` VALUES (244, 2, 239, '2020-03-04 10:14:30', '2020-03-04 10:14:30');
INSERT INTO `t_capter_question` VALUES (245, 3, 239, '2020-03-04 10:14:30', '2020-03-04 10:14:30');
INSERT INTO `t_capter_question` VALUES (246, 4, 239, '2020-03-04 10:14:30', '2020-03-04 10:14:30');
INSERT INTO `t_capter_question` VALUES (247, 5, 239, '2020-03-04 10:14:30', '2020-03-04 10:14:30');
INSERT INTO `t_capter_question` VALUES (248, 1, 240, '2020-03-04 10:24:50', '2020-03-04 10:24:50');
INSERT INTO `t_capter_question` VALUES (249, 1, 241, '2020-03-04 10:25:59', '2020-03-04 10:25:59');
INSERT INTO `t_capter_question` VALUES (250, 1, 242, '2020-03-04 10:26:51', '2020-03-04 10:26:51');
INSERT INTO `t_capter_question` VALUES (251, 1, 243, '2020-03-04 10:27:59', '2020-03-04 10:27:59');
INSERT INTO `t_capter_question` VALUES (252, 1, 244, '2020-03-04 10:29:24', '2020-03-04 10:29:24');
INSERT INTO `t_capter_question` VALUES (253, 1, 245, '2020-03-04 10:30:25', '2020-03-04 10:30:25');
INSERT INTO `t_capter_question` VALUES (254, 1, 246, '2020-03-04 10:31:04', '2020-03-04 10:31:04');
INSERT INTO `t_capter_question` VALUES (255, 1, 247, '2020-03-04 10:41:35', '2020-03-04 10:41:35');
INSERT INTO `t_capter_question` VALUES (256, 1, 248, '2020-03-04 10:42:23', '2020-03-04 10:42:23');
INSERT INTO `t_capter_question` VALUES (257, 2, 249, '2020-03-04 10:43:27', '2020-03-04 10:43:27');
INSERT INTO `t_capter_question` VALUES (258, 2, 250, '2020-03-04 10:44:19', '2020-03-04 10:44:19');
INSERT INTO `t_capter_question` VALUES (259, 2, 251, '2020-03-04 10:45:16', '2020-03-04 10:45:16');
INSERT INTO `t_capter_question` VALUES (260, 2, 252, '2020-03-04 10:46:23', '2020-03-04 10:46:23');
INSERT INTO `t_capter_question` VALUES (261, 2, 253, '2020-03-04 10:47:17', '2020-03-04 10:47:17');
INSERT INTO `t_capter_question` VALUES (262, 2, 254, '2020-03-04 10:48:14', '2020-03-04 10:48:14');
INSERT INTO `t_capter_question` VALUES (263, 2, 255, '2020-03-04 10:48:49', '2020-03-04 10:48:49');
INSERT INTO `t_capter_question` VALUES (264, 2, 256, '2020-03-04 10:49:29', '2020-03-04 10:49:29');
INSERT INTO `t_capter_question` VALUES (265, 2, 257, '2020-03-04 10:50:05', '2020-03-04 10:50:05');
INSERT INTO `t_capter_question` VALUES (266, 3, 258, '2020-03-04 10:50:52', '2020-03-04 10:50:52');
INSERT INTO `t_capter_question` VALUES (267, 3, 259, '2020-03-04 10:51:22', '2020-03-04 10:51:22');
INSERT INTO `t_capter_question` VALUES (268, 3, 260, '2020-03-04 10:52:20', '2020-03-04 10:52:20');
INSERT INTO `t_capter_question` VALUES (269, 3, 261, '2020-03-04 10:52:55', '2020-03-04 10:52:55');
INSERT INTO `t_capter_question` VALUES (270, 3, 262, '2020-03-04 10:54:02', '2020-03-04 10:54:02');
INSERT INTO `t_capter_question` VALUES (271, 3, 263, '2020-03-04 10:54:44', '2020-03-04 10:54:44');
INSERT INTO `t_capter_question` VALUES (272, 3, 264, '2020-03-04 10:55:19', '2020-03-04 10:55:19');
INSERT INTO `t_capter_question` VALUES (273, 3, 265, '2020-03-04 10:55:56', '2020-03-04 10:55:56');
INSERT INTO `t_capter_question` VALUES (274, 3, 266, '2020-03-04 10:56:32', '2020-03-04 10:56:32');
INSERT INTO `t_capter_question` VALUES (275, 3, 267, '2020-03-04 10:57:09', '2020-03-04 10:57:09');
INSERT INTO `t_capter_question` VALUES (276, 4, 268, '2020-03-04 10:58:03', '2020-03-04 10:58:03');
INSERT INTO `t_capter_question` VALUES (277, 4, 269, '2020-03-04 10:58:44', '2020-03-04 10:58:44');
INSERT INTO `t_capter_question` VALUES (278, 4, 270, '2020-03-04 11:00:45', '2020-03-04 11:00:45');
INSERT INTO `t_capter_question` VALUES (279, 4, 271, '2020-03-04 11:01:26', '2020-03-04 11:01:26');
INSERT INTO `t_capter_question` VALUES (280, 4, 272, '2020-03-04 11:02:09', '2020-03-04 11:02:09');
INSERT INTO `t_capter_question` VALUES (281, 4, 273, '2020-03-04 11:02:52', '2020-03-04 11:02:52');
INSERT INTO `t_capter_question` VALUES (282, 4, 274, '2020-03-04 11:03:31', '2020-03-04 11:03:31');
INSERT INTO `t_capter_question` VALUES (283, 4, 275, '2020-03-04 11:04:14', '2020-03-04 11:04:14');
INSERT INTO `t_capter_question` VALUES (284, 4, 276, '2020-03-04 11:04:53', '2020-03-04 11:04:53');
INSERT INTO `t_capter_question` VALUES (285, 4, 277, '2020-03-04 11:05:31', '2020-03-04 11:05:31');
INSERT INTO `t_capter_question` VALUES (286, 4, 278, '2020-03-04 11:06:13', '2020-03-04 11:06:13');
INSERT INTO `t_capter_question` VALUES (287, 5, 279, '2020-03-04 11:06:55', '2020-03-04 11:06:55');
INSERT INTO `t_capter_question` VALUES (288, 5, 280, '2020-03-04 11:07:47', '2020-03-04 11:07:47');
INSERT INTO `t_capter_question` VALUES (289, 5, 281, '2020-03-04 11:08:32', '2020-03-04 11:08:32');
INSERT INTO `t_capter_question` VALUES (290, 5, 282, '2020-03-04 12:56:06', '2020-03-04 12:56:06');
INSERT INTO `t_capter_question` VALUES (291, 5, 283, '2020-03-04 12:56:46', '2020-03-04 12:56:46');
INSERT INTO `t_capter_question` VALUES (292, 5, 284, '2020-03-04 12:57:29', '2020-03-04 12:57:29');
INSERT INTO `t_capter_question` VALUES (293, 5, 285, '2020-03-04 12:58:06', '2020-03-04 12:58:06');
INSERT INTO `t_capter_question` VALUES (294, 5, 286, '2020-03-04 12:58:39', '2020-03-04 12:58:39');
INSERT INTO `t_capter_question` VALUES (295, 5, 287, '2020-03-04 12:59:16', '2020-03-04 12:59:16');
INSERT INTO `t_capter_question` VALUES (296, 5, 288, '2020-03-04 12:59:49', '2020-03-04 12:59:49');
INSERT INTO `t_capter_question` VALUES (297, 6, 289, '2020-03-04 13:00:52', '2020-03-04 13:00:52');
INSERT INTO `t_capter_question` VALUES (298, 6, 290, '2020-03-04 13:01:40', '2020-03-04 13:01:40');
INSERT INTO `t_capter_question` VALUES (299, 6, 291, '2020-03-04 13:02:22', '2020-03-04 13:02:22');
INSERT INTO `t_capter_question` VALUES (300, 6, 292, '2020-03-04 13:03:00', '2020-03-04 13:03:00');
INSERT INTO `t_capter_question` VALUES (301, 6, 293, '2020-03-04 13:03:41', '2020-03-04 13:03:41');
INSERT INTO `t_capter_question` VALUES (302, 6, 294, '2020-03-04 13:05:31', '2020-03-04 13:05:31');
INSERT INTO `t_capter_question` VALUES (304, 6, 296, '2020-03-04 13:06:52', '2020-03-04 13:06:52');
INSERT INTO `t_capter_question` VALUES (305, 7, 297, '2020-03-04 13:09:08', '2020-03-04 13:09:08');
INSERT INTO `t_capter_question` VALUES (306, 7, 298, '2020-03-04 13:10:12', '2020-03-04 13:10:12');
INSERT INTO `t_capter_question` VALUES (307, 7, 299, '2020-03-04 13:11:05', '2020-03-04 13:11:05');
INSERT INTO `t_capter_question` VALUES (308, 7, 300, '2020-03-04 13:11:48', '2020-03-04 13:11:48');
INSERT INTO `t_capter_question` VALUES (309, 7, 301, '2020-03-04 13:12:40', '2020-03-04 13:12:40');
INSERT INTO `t_capter_question` VALUES (310, 7, 302, '2020-03-04 13:13:47', '2020-03-04 13:13:47');
INSERT INTO `t_capter_question` VALUES (311, 7, 303, '2020-03-04 13:14:32', '2020-03-04 13:14:32');
INSERT INTO `t_capter_question` VALUES (312, 7, 304, '2020-03-04 13:15:33', '2020-03-04 13:15:33');
INSERT INTO `t_capter_question` VALUES (313, 7, 305, '2020-03-04 13:16:28', '2020-03-04 13:16:28');
INSERT INTO `t_capter_question` VALUES (314, 7, 306, '2020-03-04 13:17:16', '2020-03-04 13:17:16');
INSERT INTO `t_capter_question` VALUES (315, 8, 307, '2020-03-04 13:18:12', '2020-03-04 13:18:12');
INSERT INTO `t_capter_question` VALUES (316, 8, 308, '2020-03-04 13:18:52', '2020-03-04 13:18:52');
INSERT INTO `t_capter_question` VALUES (317, 8, 309, '2020-03-04 13:19:27', '2020-03-04 13:19:27');
INSERT INTO `t_capter_question` VALUES (318, 8, 310, '2020-03-04 13:20:17', '2020-03-04 13:20:17');
INSERT INTO `t_capter_question` VALUES (319, 8, 311, '2020-03-04 13:20:51', '2020-03-04 13:20:51');
INSERT INTO `t_capter_question` VALUES (320, 8, 312, '2020-03-04 13:21:38', '2020-03-04 13:21:38');
INSERT INTO `t_capter_question` VALUES (321, 8, 313, '2020-03-04 13:22:17', '2020-03-04 13:22:17');
INSERT INTO `t_capter_question` VALUES (322, 8, 314, '2020-03-04 13:22:51', '2020-03-04 13:22:51');
INSERT INTO `t_capter_question` VALUES (323, 8, 315, '2020-03-04 13:23:27', '2020-03-04 13:23:27');
INSERT INTO `t_capter_question` VALUES (324, 8, 316, '2020-03-04 13:24:14', '2020-03-04 13:24:14');
INSERT INTO `t_capter_question` VALUES (325, 9, 317, '2020-03-04 13:25:36', '2020-03-04 13:25:36');
INSERT INTO `t_capter_question` VALUES (328, 9, 320, '2020-03-04 13:29:43', '2020-03-04 13:29:43');
INSERT INTO `t_capter_question` VALUES (329, 9, 321, '2020-03-04 13:30:21', '2020-03-04 13:30:21');
INSERT INTO `t_capter_question` VALUES (330, 9, 322, '2020-03-04 13:30:54', '2020-03-04 13:30:54');
INSERT INTO `t_capter_question` VALUES (331, 9, 323, '2020-03-04 13:31:26', '2020-03-04 13:31:26');
INSERT INTO `t_capter_question` VALUES (332, 9, 324, '2020-03-04 13:32:38', '2020-03-04 13:32:38');
INSERT INTO `t_capter_question` VALUES (333, 9, 325, '2020-03-04 13:33:17', '2020-03-04 13:33:17');
INSERT INTO `t_capter_question` VALUES (334, 9, 326, '2020-03-04 13:33:49', '2020-03-04 13:33:49');
INSERT INTO `t_capter_question` VALUES (335, 9, 319, '2020-03-05 13:30:32', '2020-03-05 13:30:32');
INSERT INTO `t_capter_question` VALUES (336, 9, 318, '2020-03-05 13:31:12', '2020-03-05 13:31:12');
INSERT INTO `t_capter_question` VALUES (337, 6, 295, '2020-03-05 14:24:57', '2020-03-05 14:24:57');
INSERT INTO `t_capter_question` VALUES (340, 9, 217, '2020-03-14 12:54:58', '2020-03-14 12:54:58');
INSERT INTO `t_capter_question` VALUES (341, 1, 327, '2020-03-15 09:55:38', '2020-03-15 09:55:38');
INSERT INTO `t_capter_question` VALUES (342, 1, 328, '2020-03-15 09:58:59', '2020-03-15 09:58:59');
INSERT INTO `t_capter_question` VALUES (344, 1, 329, '2020-03-17 18:15:11', '2020-03-17 18:15:11');
INSERT INTO `t_capter_question` VALUES (345, 1, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (346, 7, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (347, 2, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (348, 8, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (349, 3, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (350, 9, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (351, 4, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (352, 5, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (353, 6, 330, '2020-03-17 18:24:37', '2020-03-17 18:24:37');
INSERT INTO `t_capter_question` VALUES (354, 1, 331, '2020-03-18 12:30:49', '2020-03-18 12:30:49');
INSERT INTO `t_capter_question` VALUES (355, 9, 235, '2020-03-20 18:12:18', '2020-03-20 18:12:18');
INSERT INTO `t_capter_question` VALUES (356, 8, 234, '2020-03-20 18:13:00', '2020-03-20 18:13:00');
INSERT INTO `t_capter_question` VALUES (357, 7, 233, '2020-03-20 18:13:19', '2020-03-20 18:13:19');
INSERT INTO `t_capter_question` VALUES (358, 3, 226, '2020-03-20 18:13:40', '2020-03-20 18:13:40');
INSERT INTO `t_capter_question` VALUES (359, 1, 332, '2020-03-31 14:20:21', '2020-03-31 14:20:21');
INSERT INTO `t_capter_question` VALUES (361, 1, 333, '2020-03-31 14:22:52', '2020-03-31 14:22:52');
INSERT INTO `t_capter_question` VALUES (362, 1, 334, '2020-04-11 12:16:08', '2020-04-11 12:16:08');
INSERT INTO `t_capter_question` VALUES (365, 2, 335, '2020-04-11 16:02:56', '2020-04-11 16:02:56');
INSERT INTO `t_capter_question` VALUES (381, 1, 344, '2020-04-25 17:55:14', '2020-04-25 17:55:14');
INSERT INTO `t_capter_question` VALUES (382, 2, 344, '2020-04-25 17:55:14', '2020-04-25 17:55:14');
INSERT INTO `t_capter_question` VALUES (383, 1, 345, '2020-04-28 15:14:59', '2020-04-28 15:14:59');
INSERT INTO `t_capter_question` VALUES (384, 1, 346, '2020-04-28 15:15:19', '2020-04-28 15:15:19');
INSERT INTO `t_capter_question` VALUES (385, 2, 346, '2020-04-28 15:15:19', '2020-04-28 15:15:19');
INSERT INTO `t_capter_question` VALUES (386, 1, 347, '2020-04-28 15:15:19', '2020-04-28 15:15:19');
INSERT INTO `t_capter_question` VALUES (387, 2, 347, '2020-04-28 15:15:19', '2020-04-28 15:15:19');
INSERT INTO `t_capter_question` VALUES (388, 1, 348, '2020-04-28 15:27:24', '2020-04-28 15:27:24');
INSERT INTO `t_capter_question` VALUES (389, 1, 349, '2020-04-28 15:27:50', '2020-04-28 15:27:50');
INSERT INTO `t_capter_question` VALUES (390, 2, 350, '2020-04-28 15:28:13', '2020-04-28 15:28:13');
INSERT INTO `t_capter_question` VALUES (391, 1, 351, '2020-04-28 15:28:37', '2020-04-28 15:28:37');
INSERT INTO `t_capter_question` VALUES (392, 7, 351, '2020-04-28 15:28:37', '2020-04-28 15:28:37');

-- ----------------------------
-- Table structure for t_exam_paper
-- ----------------------------
DROP TABLE IF EXISTS `t_exam_paper`;
CREATE TABLE `t_exam_paper`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '试卷名称',
  `paper_type` int(11) NULL DEFAULT NULL COMMENT '试卷类型( 1手动组卷  2自动组卷 )',
  `score` int(11) NULL DEFAULT NULL COMMENT '试卷总分(千分制)',
  `question_count` int(11) NULL DEFAULT NULL COMMENT '题目数量',
  `suggest_time` int(11) NULL DEFAULT NULL COMMENT '建议时长(分钟)',
  `limit_start_time` datetime(0) NULL DEFAULT NULL COMMENT '时段试卷 开始时间',
  `limit_end_time` datetime(0) NULL DEFAULT NULL COMMENT '时段试卷 结束时间',
  `frame_text_content_id` int(11) NULL DEFAULT NULL COMMENT '试卷框架 内容为JSON',
  `create_user` int(11) NULL DEFAULT NULL COMMENT '创建人',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `deleted` bit(1) NULL DEFAULT NULL COMMENT '是否删除',
  `task_exam_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 20 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_exam_paper
-- ----------------------------
INSERT INTO `t_exam_paper` VALUES (1, '(2017)电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷', 1, 8, 3, 100, NULL, NULL, 3, 2, '2019-09-07 06:59:14', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (2, '(2018)电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷', 1, 8, 3, 100, NULL, NULL, 11, 2, '2020-02-18 16:35:30', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (3, '(2019)电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷', 1, 8, 3, 100, NULL, NULL, 12, 2, '2020-02-18 16:44:15', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (4, '测试', 1, 4, 2, 100, NULL, NULL, 13, 2, '2020-02-21 00:05:09', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (5, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷', 1, 2, 1, 120, NULL, NULL, 14, 2, '2020-02-22 16:08:56', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (6, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷', 1, 95, 45, 100, NULL, NULL, 337, 2, '2020-03-04 13:50:15', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (7, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷', 1, 100, 46, 100, NULL, NULL, 338, 2, '2020-03-04 13:57:05', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (8, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（B）卷', 1, 100, 46, 100, NULL, NULL, 339, 2, '2020-03-04 14:08:51', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (9, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷 2019—2020学年第 一 学期　　　', 1, 77, 41, 100, NULL, NULL, 340, 2, '2020-03-04 14:12:09', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (10, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷 2019—2020学年第 一 学期　　　', 1, 100, 46, 100, NULL, NULL, 341, 2, '2020-03-04 14:14:43', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (11, '教师创建', 1, 100, 46, 100, NULL, NULL, 344, 6, '2020-03-15 11:26:04', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (12, '手动添加', 1, 40, 20, 100, NULL, NULL, 346, 2, '2020-03-17 18:16:23', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (13, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（C）卷', 1, 100, 46, 100, NULL, NULL, 347, 2, '2020-03-17 18:17:10', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (14, '手动添加', 1, 20, 20, 100, NULL, NULL, 349, 2, '2020-03-17 18:25:52', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (15, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（C）卷', 1, 100, 46, 100, NULL, NULL, 350, 2, '2020-03-17 18:26:42', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (16, '手动添加', 1, 40, 30, 100, NULL, NULL, 352, 2, '2020-03-18 12:32:06', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (17, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（A）卷', 1, 100, 46, 100, NULL, NULL, 353, 2, '2020-03-18 12:32:51', b'0', NULL);
INSERT INTO `t_exam_paper` VALUES (18, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（B）卷', 1, 101, 46, 120, NULL, NULL, 356, 2, '2020-04-04 20:27:41', b'1', NULL);
INSERT INTO `t_exam_paper` VALUES (19, '手动组卷', 1, 46, 8, 100, NULL, NULL, 371, 2, '2020-04-28 15:16:19', b'0', NULL);
INSERT INTO `t_exam_paper` VALUES (20, '电子信息科学学院《Java程序设计基础》课程 期末考试试卷（B）卷', 1, 100, 46, 100, NULL, NULL, 372, 2, '2020-04-28 15:17:11', b'0', NULL);

-- ----------------------------
-- Table structure for t_exam_paper_answer
-- ----------------------------
DROP TABLE IF EXISTS `t_exam_paper_answer`;
CREATE TABLE `t_exam_paper_answer`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `exam_paper_id` int(11) NULL DEFAULT NULL,
  `paper_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '试卷名称',
  `paper_type` int(11) NULL DEFAULT NULL COMMENT '试卷类型( 1固定试卷  2临时试卷 3班级试卷 4.时段试卷 )',
  `subject_id` int(11) NULL DEFAULT NULL COMMENT '学科',
  `system_score` int(11) NULL DEFAULT NULL COMMENT '系统判定得分',
  `user_score` int(11) NULL DEFAULT NULL COMMENT '最终得分(千分制)',
  `paper_score` int(11) NULL DEFAULT NULL COMMENT '试卷总分',
  `question_correct` int(11) NULL DEFAULT NULL COMMENT '做对题目数量',
  `question_count` int(11) NULL DEFAULT NULL COMMENT '题目总数量',
  `do_time` int(11) NULL DEFAULT NULL COMMENT '做题时间(秒)',
  `status` int(11) NULL DEFAULT NULL COMMENT '试卷状态(1待判分 2完成)',
  `create_user` int(11) NULL DEFAULT NULL COMMENT '学生',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '提交时间',
  `task_exam_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_exam_paper_answer
-- ----------------------------
INSERT INTO `t_exam_paper_answer` VALUES (4, 1, '电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷', NULL, NULL, 2, 2, 6, 1, 2, 11, 1, 1, '2020-02-14 21:37:07', NULL);
INSERT INTO `t_exam_paper_answer` VALUES (5, 1, '电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷', NULL, NULL, 0, 0, 8, 0, 3, 6, 1, 1, '2020-02-17 23:09:17', NULL);

-- ----------------------------
-- Table structure for t_exam_paper_question_customer_answer
-- ----------------------------
DROP TABLE IF EXISTS `t_exam_paper_question_customer_answer`;
CREATE TABLE `t_exam_paper_question_customer_answer`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) NULL DEFAULT NULL COMMENT '题目Id',
  `exam_paper_id` int(11) NULL DEFAULT NULL COMMENT '答案Id',
  `exam_paper_answer_id` int(11) NULL DEFAULT NULL,
  `question_type` int(11) NULL DEFAULT NULL COMMENT '题型',
  `subject_id` int(11) NULL DEFAULT NULL COMMENT '学科',
  `customer_score` int(11) NULL DEFAULT NULL COMMENT '得分',
  `question_score` int(11) NULL DEFAULT NULL COMMENT '题目原始分数',
  `question_text_content_id` int(11) NULL DEFAULT NULL COMMENT '问题内容',
  `answer` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '做题答案',
  `text_content_id` int(11) NULL DEFAULT NULL COMMENT '做题内容',
  `do_right` bit(1) NULL DEFAULT NULL COMMENT '是否正确',
  `create_user` int(11) NULL DEFAULT NULL COMMENT '做题人',
  `create_time` datetime(0) NULL DEFAULT NULL,
  `item_order` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_exam_paper_question_customer_answer
-- ----------------------------
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (1, 1, 1, 1, 1, 59, 30, 30, 1, 'B', NULL, b'1', 1, '2019-09-07 07:07:09', 1);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (2, 2, 1, 1, 4, 59, 30, 40, 2, NULL, 4, b'0', 1, '2019-09-07 07:07:09', 2);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (3, 3, 1, 2, 1, NULL, 2, 2, 5, 'B', NULL, b'1', 1, '2020-02-14 21:25:12', 1);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (4, 2, 1, 2, 4, NULL, 0, 4, 2, NULL, 6, NULL, 1, '2020-02-14 21:25:12', 2);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (5, 3, 1, 3, 1, NULL, 2, 2, 5, 'B', NULL, b'1', 1, '2020-02-14 21:30:08', 1);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (6, 2, 1, 3, 4, NULL, 0, 4, 2, NULL, 7, NULL, 1, '2020-02-14 21:30:08', 2);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (7, 3, 1, 4, 1, NULL, 2, 2, 5, 'B', NULL, b'1', 1, '2020-02-14 21:37:07', 1);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (8, 2, 1, 4, 4, NULL, 0, 4, 2, NULL, 8, NULL, 1, '2020-02-14 21:37:07', 2);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (9, 3, 1, 5, 1, NULL, 0, 2, 5, 'D', NULL, b'0', 1, '2020-02-17 23:09:17', 1);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (10, 2, 1, 5, 4, NULL, 0, 4, 2, NULL, 10, NULL, 1, '2020-02-17 23:09:17', 2);
INSERT INTO `t_exam_paper_question_customer_answer` VALUES (11, 4, 1, 5, 2, NULL, 0, 2, 9, 'B', NULL, b'0', 1, '2020-02-17 23:09:17', 3);

-- ----------------------------
-- Table structure for t_paper_question
-- ----------------------------
DROP TABLE IF EXISTS `t_paper_question`;
CREATE TABLE `t_paper_question`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `paper_id` int(11) NULL DEFAULT NULL COMMENT '试卷id',
  `question_id` int(11) NULL DEFAULT NULL COMMENT '试题id',
  `create_time` datetime(0) NULL DEFAULT NULL,
  `updateTime` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 597 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_paper_question
-- ----------------------------
INSERT INTO `t_paper_question` VALUES (4, 1, 3, '2020-02-18 16:31:54', NULL);
INSERT INTO `t_paper_question` VALUES (5, 1, 2, '2020-02-18 16:31:54', NULL);
INSERT INTO `t_paper_question` VALUES (6, 1, 4, '2020-02-18 16:31:54', NULL);
INSERT INTO `t_paper_question` VALUES (7, 2, 3, '2020-02-18 16:35:31', NULL);
INSERT INTO `t_paper_question` VALUES (8, 2, 4, '2020-02-18 16:35:31', NULL);
INSERT INTO `t_paper_question` VALUES (9, 2, 2, '2020-02-18 16:35:31', NULL);
INSERT INTO `t_paper_question` VALUES (10, 3, 3, '2020-02-18 16:44:21', NULL);
INSERT INTO `t_paper_question` VALUES (11, 3, 4, '2020-02-18 16:44:21', NULL);
INSERT INTO `t_paper_question` VALUES (12, 3, 2, '2020-02-18 16:44:21', NULL);
INSERT INTO `t_paper_question` VALUES (13, 5, 4, '2020-02-22 16:08:55', NULL);
INSERT INTO `t_paper_question` VALUES (60, 8, 207, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (61, 8, 206, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (62, 8, 205, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (63, 8, 204, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (64, 8, 202, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (65, 8, 203, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (66, 8, 191, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (67, 8, 190, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (68, 8, 189, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (69, 8, 188, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (70, 8, 175, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (71, 8, 177, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (72, 8, 165, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (73, 8, 166, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (74, 8, 167, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (75, 8, 164, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (76, 8, 162, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (77, 8, 161, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (78, 8, 163, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (79, 8, 160, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (80, 8, 220, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (81, 8, 221, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (82, 8, 219, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (83, 8, 218, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (84, 8, 200, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (85, 8, 201, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (86, 8, 199, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (87, 8, 198, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (88, 8, 197, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (89, 8, 196, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (90, 8, 325, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (91, 8, 326, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (92, 8, 323, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (93, 8, 321, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (94, 8, 322, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (95, 8, 324, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (96, 8, 320, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (97, 8, 319, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (98, 8, 318, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (99, 8, 317, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (100, 8, 234, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (101, 8, 235, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (102, 8, 232, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (103, 8, 231, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (104, 8, 233, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (105, 8, 239, '2020-03-04 14:10:52', NULL);
INSERT INTO `t_paper_question` VALUES (106, 10, 166, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (107, 10, 178, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (108, 10, 143, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (109, 10, 101, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (110, 10, 103, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (111, 10, 97, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (112, 10, 167, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (113, 10, 59, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (114, 10, 128, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (115, 10, 106, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (116, 10, 212, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (117, 10, 121, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (118, 10, 48, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (119, 10, 79, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (120, 10, 202, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (121, 10, 186, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (122, 10, 149, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (123, 10, 73, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (124, 10, 208, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (125, 10, 78, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (126, 10, 197, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (127, 10, 168, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (128, 10, 218, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (129, 10, 25, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (130, 10, 114, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (131, 10, 196, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (132, 10, 26, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (133, 10, 170, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (134, 10, 90, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (135, 10, 91, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (136, 10, 288, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (137, 10, 323, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (138, 10, 262, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (139, 10, 269, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (140, 10, 284, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (141, 10, 246, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (142, 10, 307, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (143, 10, 295, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (144, 10, 261, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (145, 10, 289, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (146, 10, 230, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (147, 10, 229, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (148, 10, 228, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (149, 10, 232, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (150, 10, 222, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (151, 10, 236, '2020-03-04 16:09:38', NULL);
INSERT INTO `t_paper_question` VALUES (152, 7, 213, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (153, 7, 107, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (154, 7, 118, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (155, 7, 139, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (156, 7, 6, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (157, 7, 165, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (158, 7, 178, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (159, 7, 184, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (160, 7, 78, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (161, 7, 204, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (162, 7, 15, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (163, 7, 158, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (164, 7, 8, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (165, 7, 121, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (166, 7, 72, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (167, 7, 122, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (168, 7, 156, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (169, 7, 157, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (170, 7, 183, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (171, 7, 115, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (172, 7, 133, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (173, 7, 219, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (174, 7, 137, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (175, 7, 68, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (176, 7, 29, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (177, 7, 67, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (178, 7, 172, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (179, 7, 35, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (180, 7, 201, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (181, 7, 129, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (182, 7, 278, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (183, 7, 293, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (184, 7, 295, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (185, 7, 290, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (186, 7, 262, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (187, 7, 244, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (188, 7, 279, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (189, 7, 249, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (190, 7, 294, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (191, 7, 303, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (192, 7, 231, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (193, 7, 224, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (194, 7, 230, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (195, 7, 23, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (196, 7, 223, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (197, 7, 24, '2020-03-04 16:09:54', NULL);
INSERT INTO `t_paper_question` VALUES (198, 11, 13, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (199, 11, 40, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (200, 11, 191, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (201, 11, 184, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (202, 11, 152, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (203, 11, 122, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (204, 11, 165, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (205, 11, 148, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (206, 11, 115, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (207, 11, 161, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (208, 11, 52, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (209, 11, 157, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (210, 11, 123, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (211, 11, 73, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (212, 11, 206, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (213, 11, 185, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (214, 11, 74, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (215, 11, 150, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (216, 11, 51, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (217, 11, 80, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (218, 11, 135, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (219, 11, 136, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (220, 11, 108, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (221, 11, 91, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (222, 11, 92, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (223, 11, 89, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (224, 11, 109, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (225, 11, 192, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (226, 11, 194, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (227, 11, 28, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (228, 11, 294, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (229, 11, 270, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (230, 11, 297, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (231, 11, 281, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (232, 11, 267, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (233, 11, 260, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (234, 11, 242, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (235, 11, 324, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (236, 11, 243, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (237, 11, 301, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (238, 11, 225, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (239, 11, 227, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (240, 11, 234, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (241, 11, 235, '2020-03-15 11:26:03', NULL);
INSERT INTO `t_paper_question` VALUES (242, 11, 224, '2020-03-15 11:26:04', NULL);
INSERT INTO `t_paper_question` VALUES (243, 11, 237, '2020-03-15 11:26:04', NULL);
INSERT INTO `t_paper_question` VALUES (244, 12, 325, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (245, 12, 326, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (246, 12, 322, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (247, 12, 323, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (248, 12, 324, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (249, 12, 321, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (250, 12, 320, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (251, 12, 318, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (252, 12, 319, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (253, 12, 317, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (254, 12, 316, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (255, 12, 315, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (256, 12, 313, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (257, 12, 312, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (258, 12, 314, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (259, 12, 311, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (260, 12, 310, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (261, 12, 309, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (262, 12, 308, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (263, 12, 307, '2020-03-17 18:16:23', NULL);
INSERT INTO `t_paper_question` VALUES (264, 13, 10, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (265, 13, 189, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (266, 13, 71, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (267, 13, 82, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (268, 13, 181, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (269, 13, 46, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (270, 13, 158, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (271, 13, 98, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (272, 13, 101, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (273, 13, 102, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (274, 13, 118, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (275, 13, 215, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (276, 13, 105, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (277, 13, 151, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (278, 13, 191, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (279, 13, 44, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (280, 13, 190, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (281, 13, 47, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (282, 13, 124, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (283, 13, 213, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (284, 13, 198, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (285, 13, 174, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (286, 13, 66, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (287, 13, 68, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (288, 13, 138, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (289, 13, 90, '2020-03-17 18:17:09', NULL);
INSERT INTO `t_paper_question` VALUES (290, 13, 194, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (291, 13, 4, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (292, 13, 172, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (293, 13, 129, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (294, 13, 325, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (295, 13, 273, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (296, 13, 297, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (297, 13, 293, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (298, 13, 311, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (299, 13, 304, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (300, 13, 244, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (301, 13, 301, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (302, 13, 309, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (303, 13, 253, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (304, 13, 224, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (305, 13, 235, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (306, 13, 228, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (307, 13, 232, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (308, 13, 222, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (309, 13, 239, '2020-03-17 18:17:10', NULL);
INSERT INTO `t_paper_question` VALUES (310, 14, 73, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (311, 14, 72, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (312, 14, 59, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (313, 14, 70, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (314, 14, 57, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (315, 14, 71, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (316, 14, 56, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (317, 14, 55, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (318, 14, 50, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (319, 14, 54, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (320, 14, 53, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (321, 14, 52, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (322, 14, 51, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (323, 14, 49, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (324, 14, 48, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (325, 14, 46, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (326, 14, 47, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (327, 14, 45, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (328, 14, 44, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (329, 14, 43, '2020-03-17 18:25:51', NULL);
INSERT INTO `t_paper_question` VALUES (330, 15, 162, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (331, 15, 100, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (332, 15, 54, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (333, 15, 190, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (334, 15, 33, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (335, 15, 71, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (336, 15, 189, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (337, 15, 142, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (338, 15, 158, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (339, 15, 115, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (340, 15, 207, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (341, 15, 45, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (342, 15, 152, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (343, 15, 11, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (344, 15, 75, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (345, 15, 83, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (346, 15, 95, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (347, 15, 155, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (348, 15, 16, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (349, 15, 121, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (350, 15, 84, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (351, 15, 221, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (352, 15, 85, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (353, 15, 29, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (354, 15, 64, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (355, 15, 176, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (356, 15, 60, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (357, 15, 173, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (358, 15, 195, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (359, 15, 62, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (360, 15, 308, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (361, 15, 260, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (362, 15, 241, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (363, 15, 269, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (364, 15, 291, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (365, 15, 250, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (366, 15, 292, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (367, 15, 309, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (368, 15, 246, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (369, 15, 240, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (370, 15, 224, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (371, 15, 225, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (372, 15, 235, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (373, 15, 222, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (374, 15, 230, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (375, 15, 24, '2020-03-17 18:26:41', NULL);
INSERT INTO `t_paper_question` VALUES (376, 16, 331, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (377, 16, 214, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (378, 16, 216, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (379, 16, 217, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (380, 16, 215, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (381, 16, 213, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (382, 16, 212, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (383, 16, 211, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (384, 16, 208, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (385, 16, 210, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (386, 16, 207, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (387, 16, 209, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (388, 16, 206, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (389, 16, 202, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (390, 16, 205, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (391, 16, 191, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (392, 16, 203, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (393, 16, 204, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (394, 16, 190, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (395, 16, 189, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (396, 16, 221, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (397, 16, 219, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (398, 16, 201, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (399, 16, 200, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (400, 16, 220, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (401, 16, 218, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (402, 16, 199, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (403, 16, 197, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (404, 16, 198, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (405, 16, 196, '2020-03-18 12:32:06', NULL);
INSERT INTO `t_paper_question` VALUES (452, 17, 122, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (453, 17, 54, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (454, 17, 210, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (455, 17, 205, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (456, 17, 121, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (457, 17, 178, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (458, 17, 216, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (459, 17, 96, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (460, 17, 59, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (461, 17, 185, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (462, 17, 181, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (463, 17, 151, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (464, 17, 126, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (465, 17, 142, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (466, 17, 82, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (467, 17, 75, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (468, 17, 43, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (469, 17, 104, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (470, 17, 93, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (471, 17, 39, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (472, 17, 68, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (473, 17, 88, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (474, 17, 194, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (475, 17, 174, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (476, 17, 92, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (477, 17, 109, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (478, 17, 89, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (479, 17, 137, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (480, 17, 219, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (481, 17, 64, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (482, 17, 315, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (483, 17, 259, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (484, 17, 287, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (485, 17, 280, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (486, 17, 308, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (487, 17, 291, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (488, 17, 253, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (489, 17, 269, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (490, 17, 279, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (491, 17, 302, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (492, 17, 23, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (493, 17, 226, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (494, 17, 231, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (495, 17, 235, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (496, 17, 225, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (497, 17, 239, '2020-03-28 14:23:50', NULL);
INSERT INTO `t_paper_question` VALUES (498, 18, 117, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (499, 18, 177, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (500, 18, 155, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (501, 18, 115, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (502, 18, 6, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (503, 18, 100, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (504, 18, 190, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (505, 18, 328, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (506, 18, 333, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (507, 18, 160, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (508, 18, 76, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (509, 18, 327, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (510, 18, 209, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (511, 18, 329, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (512, 18, 204, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (513, 18, 128, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (514, 18, 15, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (515, 18, 46, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (516, 18, 116, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (517, 18, 140, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (518, 18, 135, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (519, 18, 219, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (520, 18, 168, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (521, 18, 60, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (522, 18, 66, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (523, 18, 197, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (524, 18, 170, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (525, 18, 69, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (526, 18, 26, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (527, 18, 131, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (528, 18, 325, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (529, 18, 317, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (530, 18, 259, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (531, 18, 262, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (532, 18, 254, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (533, 18, 267, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (534, 18, 311, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (535, 18, 287, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (536, 18, 297, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (537, 18, 281, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (538, 18, 225, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (539, 18, 235, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (540, 18, 234, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (541, 18, 224, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (542, 18, 226, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (543, 18, 239, '2020-04-04 20:27:41', NULL);
INSERT INTO `t_paper_question` VALUES (544, 19, 347, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (545, 19, 346, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (546, 19, 216, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (547, 19, 215, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (548, 19, 345, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (549, 19, 217, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (550, 19, 214, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (551, 19, 213, '2020-04-28 15:16:19', NULL);
INSERT INTO `t_paper_question` VALUES (552, 20, 142, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (553, 20, 118, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (554, 20, 115, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (555, 20, 214, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (556, 20, 216, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (557, 20, 10, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (558, 20, 150, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (559, 20, 43, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (560, 20, 157, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (561, 20, 75, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (562, 20, 55, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (563, 20, 48, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (564, 20, 120, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (565, 20, 40, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (566, 20, 213, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (567, 20, 80, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (568, 20, 59, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (569, 20, 151, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (570, 20, 41, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (571, 20, 44, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (572, 20, 221, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (573, 20, 35, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (574, 20, 87, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (575, 20, 132, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (576, 20, 84, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (577, 20, 169, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (578, 20, 114, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (579, 20, 201, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (580, 20, 113, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (581, 20, 85, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (582, 20, 294, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (583, 20, 245, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (584, 20, 248, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (585, 20, 280, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (586, 20, 300, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (587, 20, 299, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (588, 20, 272, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (589, 20, 277, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (590, 20, 241, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (591, 20, 242, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (592, 20, 228, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (593, 20, 223, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (594, 20, 230, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (595, 20, 234, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (596, 20, 231, '2020-04-28 15:17:11', NULL);
INSERT INTO `t_paper_question` VALUES (597, 20, 239, '2020-04-28 15:17:11', NULL);

-- ----------------------------
-- Table structure for t_question
-- ----------------------------
DROP TABLE IF EXISTS `t_question`;
CREATE TABLE `t_question`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type` int(11) NULL DEFAULT NULL COMMENT '1.单选题  2.多选题  4.填空题 5.简答题 3.编程题',
  `score` int(11) NULL DEFAULT NULL COMMENT '题目总分(百分制)',
  `difficult` int(11) NULL DEFAULT NULL COMMENT '题目难度',
  `correct` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '正确答案',
  `info_text_content_id` int(11) NULL DEFAULT NULL COMMENT '题目  填空、 题干、解析、答案等信息',
  `create_user` int(11) NULL DEFAULT NULL COMMENT '创建人',
  `status` int(11) NULL DEFAULT NULL COMMENT '1.正常',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `deleted` bit(1) NULL DEFAULT b'0',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 351 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_question
-- ----------------------------
INSERT INTO `t_question` VALUES (1, 1, 3, 4, 'B', 1, 2, 1, '2019-09-07 06:58:04', b'1');
INSERT INTO `t_question` VALUES (2, 4, 4, 4, '', 2, 2, 1, '2019-09-07 06:58:44', b'1');
INSERT INTO `t_question` VALUES (3, 1, 2, 2, 'B', 5, 2, 1, '2020-02-13 00:17:44', b'1');
INSERT INTO `t_question` VALUES (4, 2, 2, 3, 'A,B,C,D', 9, 2, 1, '2020-02-14 23:29:55', b'1');
INSERT INTO `t_question` VALUES (5, 1, 1, 1, 'C', 15, 2, 1, '2020-02-22 16:16:13', b'0');
INSERT INTO `t_question` VALUES (6, 1, 1, 2, 'C', 16, 2, 1, '2020-03-03 14:58:56', b'0');
INSERT INTO `t_question` VALUES (7, 1, 1, 2, 'D', 17, 2, 1, '2020-03-03 15:00:42', b'0');
INSERT INTO `t_question` VALUES (8, 1, 1, 2, 'B', 18, 2, 1, '2020-03-03 15:01:22', b'1');
INSERT INTO `t_question` VALUES (9, 1, 1, 2, 'D', 19, 2, 1, '2020-03-03 15:02:54', b'0');
INSERT INTO `t_question` VALUES (10, 1, 1, 3, 'B', 20, 2, 1, '2020-03-03 15:45:53', b'0');
INSERT INTO `t_question` VALUES (11, 1, 1, 3, 'A', 21, 2, 1, '2020-03-03 15:47:44', b'0');
INSERT INTO `t_question` VALUES (12, 1, 1, 1, 'B', 22, 2, 1, '2020-03-03 15:49:16', b'0');
INSERT INTO `t_question` VALUES (13, 1, 1, 1, 'B', 23, 2, 1, '2020-03-03 15:51:23', b'0');
INSERT INTO `t_question` VALUES (14, 1, 1, 3, 'B', 24, 2, 1, '2020-03-03 15:53:09', b'0');
INSERT INTO `t_question` VALUES (15, 1, 1, 1, 'B', 25, 2, 1, '2020-03-03 15:54:33', b'0');
INSERT INTO `t_question` VALUES (16, 1, 1, 2, 'B', 26, 2, 1, '2020-03-03 15:56:16', b'0');
INSERT INTO `t_question` VALUES (17, 1, 1, 3, 'D', 27, 2, 1, '2020-03-03 15:57:49', b'0');
INSERT INTO `t_question` VALUES (18, 1, 1, 1, 'B', 28, 2, 1, '2020-03-03 15:59:33', b'0');
INSERT INTO `t_question` VALUES (19, 1, 1, 1, 'A', 29, 2, 1, '2020-03-03 16:26:28', b'1');
INSERT INTO `t_question` VALUES (20, 4, 2, 2, '', 30, 2, 1, '2020-03-03 16:36:47', b'1');
INSERT INTO `t_question` VALUES (21, 2, 2, 1, 'A,B', 31, 2, 1, '2020-03-03 16:50:20', b'0');
INSERT INTO `t_question` VALUES (22, 4, 2, 1, '', 32, 2, 1, '2020-03-03 17:04:05', b'0');
INSERT INTO `t_question` VALUES (23, 5, 5, 2, '<span style=\"font-family: 宋体; font-size: 19px;\">（</span><span style=\"font-family: 宋体; font-size: 19px;\">1</span><span style=\"font-family: 宋体; font-size: 19px;\">）使用一个文字编辑器，编写源文件。（</span><span style=\"font-size: 19px; font-family: &quot;Times New Roman&quot;;\">1</span><span style=\"font-family: 宋体; font-size: 19px;\">分）<br/><br/></span><span style=\"font-family: 宋体; font-size: 19px;\">（2）</span><span style=\"font-family: 宋体; font-size: 19px;\">使用java编译器，编译源文件得到字节码文件。（<span style=\"font-family:Times New Roman\">2</span>分）<br/><br/></span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 19px;\">（3）</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 19px;\"><span style=\"font-family:宋体\">运行</span>java<span style=\"font-family:宋体\">程序，分两种</span>java<span style=\"font-family:宋体\">应用程序必须通过</span>java<span style=\"font-family:宋体\">解释器来解释执行，</span>java<span style=\"font-family:宋体\">小应用程序必须使用解释器和浏览器运行程序。（</span>2<span style=\"font-family:宋体\">分）</span></span>', 33, 2, 1, '2020-03-03 17:09:17', b'0');
INSERT INTO `t_question` VALUES (24, 3, 15, 1, '<p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public class sum{</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public static void main（String args</span><span style=\";font-family:宋体;font-size:16px\">[]</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span>{</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">int s=0；//初始值正确得5</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">for（i-1，i&lt;=1000；it=1）//循环正确得5</span></p><p style=\"text-indent: 32px; line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">System.out.pintin（&quot;sum is&quot;+s）</span><span style=\";font-family:宋体;font-size:16px\">;}}</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">/程序框架正确得5</span></p>', 34, 2, 1, '2020-03-03 17:13:56', b'0');
INSERT INTO `t_question` VALUES (25, 2, 2, 1, 'A,C,D', 35, 2, 1, '2020-03-03 17:23:22', b'0');
INSERT INTO `t_question` VALUES (26, 2, 2, 2, 'A,B,C,D', 36, 2, 1, '2020-03-03 17:26:55', b'0');
INSERT INTO `t_question` VALUES (27, 2, 2, 3, 'A,B,C,D', 37, 2, 1, '2020-03-03 17:29:14', b'0');
INSERT INTO `t_question` VALUES (28, 2, 2, 1, 'B,C,D', 38, 2, 1, '2020-03-03 17:31:02', b'0');
INSERT INTO `t_question` VALUES (29, 2, 2, 2, 'A,C,D', 39, 2, 1, '2020-03-03 17:32:59', b'0');
INSERT INTO `t_question` VALUES (30, 2, 2, 3, 'A,B', 40, 2, 1, '2020-03-03 17:34:48', b'0');
INSERT INTO `t_question` VALUES (31, 2, 2, 2, 'C,D', 41, 2, 1, '2020-03-03 17:38:19', b'0');
INSERT INTO `t_question` VALUES (32, 1, 1, 2, 'A', 42, 2, 1, '2020-03-03 17:40:13', b'0');
INSERT INTO `t_question` VALUES (33, 1, 1, 1, 'C', 43, 2, 1, '2020-03-03 17:41:45', b'0');
INSERT INTO `t_question` VALUES (34, 1, 1, 1, 'B', 44, 2, 1, '2020-03-03 17:45:49', b'0');
INSERT INTO `t_question` VALUES (35, 2, 2, 1, 'D', 45, 2, 1, '2020-03-03 17:47:19', b'0');
INSERT INTO `t_question` VALUES (36, 1, 1, 2, 'D', 46, 2, 1, '2020-03-03 17:51:11', b'0');
INSERT INTO `t_question` VALUES (37, 1, 1, 2, 'A', 47, 2, 1, '2020-03-03 17:53:03', b'0');
INSERT INTO `t_question` VALUES (38, 1, 1, 2, 'A', 48, 2, 1, '2020-03-03 17:55:28', b'0');
INSERT INTO `t_question` VALUES (39, 1, 1, 3, 'B', 49, 2, 1, '2020-03-03 18:01:22', b'0');
INSERT INTO `t_question` VALUES (40, 1, 1, 3, 'B', 50, 2, 1, '2020-03-03 18:02:50', b'0');
INSERT INTO `t_question` VALUES (41, 1, 1, 2, 'C', 51, 2, 1, '2020-03-03 18:04:33', b'0');
INSERT INTO `t_question` VALUES (42, 1, 1, 1, 'A', 52, 2, 1, '2020-03-03 18:08:29', b'0');
INSERT INTO `t_question` VALUES (43, 1, 1, 1, 'A', 53, 2, 1, '2020-03-03 18:10:24', b'0');
INSERT INTO `t_question` VALUES (44, 1, 1, 1, 'A', 54, 2, 1, '2020-03-03 18:15:21', b'0');
INSERT INTO `t_question` VALUES (45, 1, 1, 1, 'A', 55, 2, 1, '2020-03-03 18:16:55', b'0');
INSERT INTO `t_question` VALUES (46, 1, 1, 3, 'D', 56, 2, 1, '2020-03-03 18:18:32', b'0');
INSERT INTO `t_question` VALUES (47, 1, 1, 2, 'A', 57, 2, 1, '2020-03-03 18:20:03', b'0');
INSERT INTO `t_question` VALUES (48, 1, 1, 1, 'A', 58, 2, 1, '2020-03-03 18:21:32', b'0');
INSERT INTO `t_question` VALUES (49, 1, 1, 1, 'C', 59, 2, 1, '2020-03-03 18:22:48', b'0');
INSERT INTO `t_question` VALUES (50, 1, 1, 3, 'C', 60, 2, 1, '2020-03-03 18:24:15', b'0');
INSERT INTO `t_question` VALUES (51, 1, 1, 3, 'D', 61, 2, 1, '2020-03-03 18:26:23', b'0');
INSERT INTO `t_question` VALUES (52, 1, 1, 2, 'A', 62, 2, 1, '2020-03-03 18:28:19', b'0');
INSERT INTO `t_question` VALUES (53, 1, 1, 2, 'B', 63, 2, 1, '2020-03-03 18:29:48', b'0');
INSERT INTO `t_question` VALUES (54, 1, 1, 1, 'C', 64, 2, 1, '2020-03-03 18:31:11', b'0');
INSERT INTO `t_question` VALUES (55, 1, 1, 2, 'B', 65, 2, 1, '2020-03-03 18:32:27', b'0');
INSERT INTO `t_question` VALUES (56, 1, 1, 1, 'D', 66, 2, 1, '2020-03-03 18:33:55', b'0');
INSERT INTO `t_question` VALUES (57, 1, 1, 2, 'D', 67, 2, 1, '2020-03-03 18:35:41', b'0');
INSERT INTO `t_question` VALUES (58, 1, 1, 3, 'C', 68, 2, 1, '2020-03-03 18:36:38', b'0');
INSERT INTO `t_question` VALUES (59, 1, 1, 3, 'A', 69, 2, 1, '2020-03-03 18:38:04', b'0');
INSERT INTO `t_question` VALUES (60, 2, 2, 1, 'B,D', 70, 2, 1, '2020-03-03 18:40:21', b'0');
INSERT INTO `t_question` VALUES (61, 2, 2, 2, 'B,D', 71, 2, 1, '2020-03-03 18:53:12', b'0');
INSERT INTO `t_question` VALUES (62, 2, 2, 1, 'B,C,D', 72, 2, 1, '2020-03-03 18:57:02', b'0');
INSERT INTO `t_question` VALUES (63, 2, 2, 2, 'A,B', 73, 2, 1, '2020-03-03 18:58:44', b'0');
INSERT INTO `t_question` VALUES (64, 2, 2, 1, 'B,D', 74, 2, 1, '2020-03-03 18:59:58', b'0');
INSERT INTO `t_question` VALUES (65, 2, 2, 3, 'A,D', 75, 2, 1, '2020-03-03 19:02:17', b'0');
INSERT INTO `t_question` VALUES (66, 2, 2, 2, 'C,D', 76, 2, 1, '2020-03-03 19:04:01', b'0');
INSERT INTO `t_question` VALUES (67, 2, 2, 2, 'A,C', 77, 2, 1, '2020-03-03 19:17:01', b'0');
INSERT INTO `t_question` VALUES (68, 2, 2, 2, 'A,C,D', 78, 2, 1, '2020-03-03 19:18:49', b'0');
INSERT INTO `t_question` VALUES (69, 2, 2, 2, 'B,C,D', 79, 2, 1, '2020-03-03 19:20:16', b'0');
INSERT INTO `t_question` VALUES (70, 1, 1, 1, 'D', 80, 2, 1, '2020-03-03 19:23:12', b'0');
INSERT INTO `t_question` VALUES (71, 1, 1, 2, 'A', 81, 2, 1, '2020-03-03 19:24:54', b'0');
INSERT INTO `t_question` VALUES (72, 1, 1, 1, 'C', 82, 2, 1, '2020-03-03 19:26:09', b'0');
INSERT INTO `t_question` VALUES (73, 1, 1, 1, 'C', 83, 2, 1, '2020-03-03 19:27:17', b'0');
INSERT INTO `t_question` VALUES (74, 1, 1, 3, 'B', 84, 2, 1, '2020-03-03 19:31:38', b'0');
INSERT INTO `t_question` VALUES (75, 1, 1, 3, 'D', 85, 2, 1, '2020-03-03 19:32:47', b'0');
INSERT INTO `t_question` VALUES (76, 1, 1, 2, 'B', 86, 2, 1, '2020-03-03 19:34:22', b'0');
INSERT INTO `t_question` VALUES (77, 1, 1, 3, 'B', 87, 2, 1, '2020-03-03 19:36:05', b'0');
INSERT INTO `t_question` VALUES (78, 1, 1, 2, 'D', 88, 2, 1, '2020-03-03 19:37:16', b'0');
INSERT INTO `t_question` VALUES (79, 1, 1, 3, 'B', 89, 2, 1, '2020-03-03 19:39:17', b'0');
INSERT INTO `t_question` VALUES (80, 1, 1, 2, 'B', 90, 2, 1, '2020-03-03 19:40:16', b'0');
INSERT INTO `t_question` VALUES (81, 1, 1, 1, 'B', 91, 2, 1, '2020-03-03 19:41:59', b'0');
INSERT INTO `t_question` VALUES (82, 1, 1, 1, 'C', 92, 2, 1, '2020-03-03 19:43:16', b'0');
INSERT INTO `t_question` VALUES (83, 1, 1, 2, 'B', 93, 2, 1, '2020-03-03 19:44:48', b'0');
INSERT INTO `t_question` VALUES (84, 2, 2, 2, 'A,C', 94, 2, 1, '2020-03-03 19:46:04', b'0');
INSERT INTO `t_question` VALUES (85, 2, 2, 1, 'A,B,C,D', 95, 2, 1, '2020-03-03 19:47:48', b'0');
INSERT INTO `t_question` VALUES (86, 2, 2, 1, 'A,B', 96, 2, 1, '2020-03-03 19:49:20', b'0');
INSERT INTO `t_question` VALUES (87, 2, 2, 3, 'C,D', 97, 2, 1, '2020-03-03 19:50:44', b'0');
INSERT INTO `t_question` VALUES (88, 2, 2, 2, 'A,B', 98, 2, 1, '2020-03-03 19:51:53', b'0');
INSERT INTO `t_question` VALUES (89, 2, 2, 1, 'A,C,D', 99, 2, 1, '2020-03-03 19:53:10', b'0');
INSERT INTO `t_question` VALUES (90, 2, 2, 2, 'A,D', 100, 2, 1, '2020-03-03 19:54:32', b'0');
INSERT INTO `t_question` VALUES (91, 2, 2, 3, 'B,C', 101, 2, 1, '2020-03-03 19:56:21', b'0');
INSERT INTO `t_question` VALUES (92, 2, 2, 3, 'C,D', 102, 2, 1, '2020-03-03 19:57:26', b'0');
INSERT INTO `t_question` VALUES (93, 1, 1, 1, 'B', 103, 2, 1, '2020-03-03 19:59:17', b'0');
INSERT INTO `t_question` VALUES (94, 1, 1, 2, 'C', 104, 2, 1, '2020-03-03 20:00:52', b'0');
INSERT INTO `t_question` VALUES (95, 1, 1, 2, 'D', 105, 2, 1, '2020-03-03 20:02:26', b'0');
INSERT INTO `t_question` VALUES (96, 1, 1, 1, 'D', 106, 2, 1, '2020-03-03 20:03:37', b'0');
INSERT INTO `t_question` VALUES (97, 1, 1, 1, 'A', 107, 2, 1, '2020-03-03 20:04:45', b'0');
INSERT INTO `t_question` VALUES (98, 1, 1, 3, 'C', 108, 2, 1, '2020-03-03 20:06:16', b'0');
INSERT INTO `t_question` VALUES (99, 1, 1, 3, 'D', 109, 2, 1, '2020-03-03 20:07:27', b'0');
INSERT INTO `t_question` VALUES (100, 1, 1, 2, 'C', 110, 2, 1, '2020-03-03 20:10:10', b'0');
INSERT INTO `t_question` VALUES (101, 1, 1, 1, 'C', 111, 2, 1, '2020-03-03 20:11:37', b'0');
INSERT INTO `t_question` VALUES (102, 1, 1, 1, 'C', 112, 2, 1, '2020-03-03 20:13:29', b'0');
INSERT INTO `t_question` VALUES (103, 1, 1, 2, 'D', 113, 2, 1, '2020-03-03 20:15:59', b'0');
INSERT INTO `t_question` VALUES (104, 1, 1, 3, 'A', 114, 2, 1, '2020-03-03 20:17:47', b'0');
INSERT INTO `t_question` VALUES (105, 1, 1, 3, 'B', 115, 2, 1, '2020-03-03 20:24:06', b'0');
INSERT INTO `t_question` VALUES (106, 1, 1, 2, 'C', 116, 2, 1, '2020-03-03 20:25:56', b'0');
INSERT INTO `t_question` VALUES (107, 1, 1, 3, 'C', 117, 2, 1, '2020-03-03 20:27:26', b'0');
INSERT INTO `t_question` VALUES (108, 2, 2, 1, 'C,D', 118, 2, 1, '2020-03-03 20:28:42', b'0');
INSERT INTO `t_question` VALUES (109, 2, 2, 1, 'A,B,C', 119, 2, 1, '2020-03-03 20:32:40', b'0');
INSERT INTO `t_question` VALUES (110, 2, 2, 2, 'A,D', 120, 2, 1, '2020-03-03 20:34:22', b'0');
INSERT INTO `t_question` VALUES (111, 2, 2, 2, 'A,B,C', 121, 2, 1, '2020-03-03 20:36:17', b'0');
INSERT INTO `t_question` VALUES (112, 2, 2, 1, 'A,D', 122, 2, 1, '2020-03-03 20:57:50', b'0');
INSERT INTO `t_question` VALUES (113, 2, 2, 3, 'A,C', 123, 2, 1, '2020-03-03 20:59:08', b'0');
INSERT INTO `t_question` VALUES (114, 2, 2, 3, 'C,D', 124, 2, 1, '2020-03-03 21:00:43', b'0');
INSERT INTO `t_question` VALUES (115, 1, 1, 1, 'C', 125, 2, 1, '2020-03-03 21:02:40', b'0');
INSERT INTO `t_question` VALUES (116, 1, 1, 2, 'B', 126, 2, 1, '2020-03-03 21:03:54', b'0');
INSERT INTO `t_question` VALUES (117, 1, 1, 2, 'C', 127, 2, 1, '2020-03-03 21:05:15', b'0');
INSERT INTO `t_question` VALUES (118, 1, 1, 1, 'C', 128, 2, 1, '2020-03-03 21:06:34', b'0');
INSERT INTO `t_question` VALUES (119, 1, 1, 2, 'D', 129, 2, 1, '2020-03-03 21:07:47', b'0');
INSERT INTO `t_question` VALUES (120, 1, 1, 3, 'A', 130, 2, 1, '2020-03-03 21:09:02', b'0');
INSERT INTO `t_question` VALUES (121, 1, 1, 3, 'D', 131, 2, 1, '2020-03-03 21:10:06', b'0');
INSERT INTO `t_question` VALUES (122, 1, 1, 1, 'B', 132, 2, 1, '2020-03-03 21:11:25', b'0');
INSERT INTO `t_question` VALUES (123, 1, 1, 2, 'B', 133, 2, 1, '2020-03-03 21:12:21', b'0');
INSERT INTO `t_question` VALUES (124, 1, 1, 3, 'B', 134, 2, 1, '2020-03-03 21:13:50', b'0');
INSERT INTO `t_question` VALUES (125, 1, 1, 1, 'C', 135, 2, 1, '2020-03-03 21:15:01', b'0');
INSERT INTO `t_question` VALUES (126, 1, 1, 2, 'A', 136, 2, 1, '2020-03-03 21:16:38', b'0');
INSERT INTO `t_question` VALUES (127, 1, 1, 3, 'B', 137, 2, 1, '2020-03-03 21:17:56', b'0');
INSERT INTO `t_question` VALUES (128, 1, 1, 2, 'B', 138, 2, 1, '2020-03-03 21:19:43', b'0');
INSERT INTO `t_question` VALUES (129, 2, 2, 2, 'A,B,C,D', 139, 2, 1, '2020-03-03 21:21:48', b'0');
INSERT INTO `t_question` VALUES (130, 2, 2, 1, 'B,C,D', 140, 2, 1, '2020-03-03 21:23:24', b'0');
INSERT INTO `t_question` VALUES (131, 2, 2, 1, 'A,B,C', 141, 2, 1, '2020-03-03 21:24:43', b'0');
INSERT INTO `t_question` VALUES (132, 2, 2, 3, 'A,B,C,D', 142, 2, 1, '2020-03-03 21:26:36', b'0');
INSERT INTO `t_question` VALUES (133, 2, 2, 2, 'A,B,C,D', 143, 2, 1, '2020-03-03 21:28:10', b'0');
INSERT INTO `t_question` VALUES (134, 2, 2, 3, 'A,B,C,D', 144, 2, 1, '2020-03-03 21:29:36', b'0');
INSERT INTO `t_question` VALUES (135, 2, 2, 1, 'A,C', 145, 2, 1, '2020-03-03 21:30:47', b'0');
INSERT INTO `t_question` VALUES (136, 2, 2, 2, 'A,D', 146, 2, 1, '2020-03-03 21:32:28', b'0');
INSERT INTO `t_question` VALUES (137, 2, 2, 3, 'A,D', 147, 2, 1, '2020-03-03 21:34:00', b'0');
INSERT INTO `t_question` VALUES (138, 2, 2, 1, 'A,B', 148, 2, 1, '2020-03-03 21:35:01', b'0');
INSERT INTO `t_question` VALUES (139, 1, 1, 1, 'A', 149, 2, 1, '2020-03-03 21:36:14', b'0');
INSERT INTO `t_question` VALUES (140, 1, 1, 2, 'C', 150, 2, 1, '2020-03-03 21:37:17', b'0');
INSERT INTO `t_question` VALUES (141, 1, 1, 3, 'C', 151, 2, 1, '2020-03-03 21:38:24', b'0');
INSERT INTO `t_question` VALUES (142, 1, 1, 1, 'B', 152, 2, 1, '2020-03-03 21:39:33', b'0');
INSERT INTO `t_question` VALUES (143, 1, 1, 1, 'B', 153, 2, 1, '2020-03-03 21:40:49', b'0');
INSERT INTO `t_question` VALUES (144, 1, 1, 2, 'A', 154, 2, 1, '2020-03-03 21:41:51', b'0');
INSERT INTO `t_question` VALUES (145, 1, 1, 3, 'C', 155, 2, 1, '2020-03-03 21:43:00', b'0');
INSERT INTO `t_question` VALUES (146, 1, 1, 1, 'C', 156, 2, 1, '2020-03-03 21:44:01', b'0');
INSERT INTO `t_question` VALUES (147, 1, 1, 1, 'B', 157, 2, 1, '2020-03-03 21:45:07', b'0');
INSERT INTO `t_question` VALUES (148, 1, 1, 2, 'C', 158, 2, 1, '2020-03-03 21:46:42', b'0');
INSERT INTO `t_question` VALUES (149, 1, 1, 3, 'B', 159, 2, 1, '2020-03-03 21:48:00', b'0');
INSERT INTO `t_question` VALUES (150, 1, 1, 3, 'B', 160, 2, 1, '2020-03-03 21:49:05', b'0');
INSERT INTO `t_question` VALUES (151, 1, 1, 2, 'B', 161, 2, 1, '2020-03-03 21:50:16', b'0');
INSERT INTO `t_question` VALUES (152, 1, 1, 1, 'C', 162, 2, 1, '2020-03-03 22:03:18', b'0');
INSERT INTO `t_question` VALUES (153, 1, 1, 2, 'A', 163, 2, 1, '2020-03-03 22:04:33', b'0');
INSERT INTO `t_question` VALUES (154, 1, 1, 3, 'C', 164, 2, 1, '2020-03-03 22:06:10', b'0');
INSERT INTO `t_question` VALUES (155, 1, 1, 1, 'A', 165, 2, 1, '2020-03-03 22:07:29', b'0');
INSERT INTO `t_question` VALUES (156, 1, 1, 3, 'C', 166, 2, 1, '2020-03-03 22:08:44', b'0');
INSERT INTO `t_question` VALUES (157, 1, 1, 1, 'B', 167, 2, 1, '2020-03-03 22:09:51', b'0');
INSERT INTO `t_question` VALUES (158, 1, 1, 2, 'B', 168, 2, 1, '2020-03-03 22:10:54', b'0');
INSERT INTO `t_question` VALUES (159, 1, 1, 3, 'C', 169, 2, 1, '2020-03-03 22:12:35', b'0');
INSERT INTO `t_question` VALUES (160, 1, 1, 1, 'C', 170, 2, 1, '2020-03-03 22:14:02', b'0');
INSERT INTO `t_question` VALUES (161, 1, 1, 2, 'A', 171, 2, 1, '2020-03-03 22:15:25', b'0');
INSERT INTO `t_question` VALUES (162, 1, 1, 3, 'C', 172, 2, 1, '2020-03-03 22:16:32', b'0');
INSERT INTO `t_question` VALUES (163, 1, 1, 1, 'C', 173, 2, 1, '2020-03-03 22:17:38', b'0');
INSERT INTO `t_question` VALUES (164, 1, 1, 2, 'A', 174, 2, 1, '2020-03-03 22:18:37', b'0');
INSERT INTO `t_question` VALUES (165, 1, 1, 3, 'C', 175, 2, 1, '2020-03-03 22:19:46', b'0');
INSERT INTO `t_question` VALUES (166, 1, 1, 1, 'A', 176, 2, 1, '2020-03-03 22:20:54', b'0');
INSERT INTO `t_question` VALUES (167, 1, 1, 2, 'C', 177, 2, 1, '2020-03-03 22:21:55', b'0');
INSERT INTO `t_question` VALUES (168, 2, 2, 3, 'A,B,C,D', 178, 2, 1, '2020-03-03 22:23:13', b'0');
INSERT INTO `t_question` VALUES (169, 2, 2, 1, 'A,B', 179, 2, 1, '2020-03-03 22:24:18', b'0');
INSERT INTO `t_question` VALUES (170, 2, 2, 2, 'A,D', 180, 2, 1, '2020-03-03 22:25:20', b'0');
INSERT INTO `t_question` VALUES (171, 2, 2, 3, 'C,D', 181, 2, 1, '2020-03-03 22:26:34', b'0');
INSERT INTO `t_question` VALUES (172, 2, 2, 2, 'A,B,C', 182, 2, 1, '2020-03-03 22:27:47', b'0');
INSERT INTO `t_question` VALUES (173, 2, 2, 1, 'A,D', 183, 2, 1, '2020-03-03 22:29:09', b'0');
INSERT INTO `t_question` VALUES (174, 2, 2, 2, 'A,B,C', 184, 2, 1, '2020-03-03 22:30:31', b'0');
INSERT INTO `t_question` VALUES (175, 1, 1, 1, 'D', 185, 2, 1, '2020-03-03 22:31:48', b'0');
INSERT INTO `t_question` VALUES (176, 2, 2, 3, 'A,B,C', 186, 2, 1, '2020-03-03 22:32:56', b'0');
INSERT INTO `t_question` VALUES (177, 1, 1, 1, 'B', 187, 2, 1, '2020-03-03 22:34:35', b'0');
INSERT INTO `t_question` VALUES (178, 1, 1, 2, 'B', 188, 2, 1, '2020-03-03 22:35:57', b'0');
INSERT INTO `t_question` VALUES (179, 1, 1, 3, 'B', 189, 2, 1, '2020-03-03 22:37:13', b'0');
INSERT INTO `t_question` VALUES (180, 1, 1, 3, 'A', 190, 2, 1, '2020-03-03 22:38:35', b'0');
INSERT INTO `t_question` VALUES (181, 1, 1, 2, 'A', 191, 2, 1, '2020-03-03 22:39:43', b'0');
INSERT INTO `t_question` VALUES (182, 1, 1, 1, 'C', 192, 2, 1, '2020-03-03 22:41:32', b'0');
INSERT INTO `t_question` VALUES (183, 1, 1, 1, 'C', 193, 2, 1, '2020-03-03 22:42:42', b'0');
INSERT INTO `t_question` VALUES (184, 1, 1, 2, 'A', 194, 2, 1, '2020-03-03 22:43:51', b'0');
INSERT INTO `t_question` VALUES (185, 1, 1, 3, 'C', 195, 2, 1, '2020-03-03 22:44:56', b'0');
INSERT INTO `t_question` VALUES (186, 1, 1, 3, 'C', 196, 2, 1, '2020-03-03 22:46:44', b'0');
INSERT INTO `t_question` VALUES (187, 1, 1, 2, 'A', 197, 2, 1, '2020-03-03 22:48:09', b'0');
INSERT INTO `t_question` VALUES (188, 1, 1, 1, 'A', 198, 2, 1, '2020-03-03 22:49:34', b'0');
INSERT INTO `t_question` VALUES (189, 1, 1, 1, 'C', 199, 2, 1, '2020-03-03 22:50:56', b'0');
INSERT INTO `t_question` VALUES (190, 1, 1, 2, 'A', 200, 2, 1, '2020-03-03 22:51:58', b'0');
INSERT INTO `t_question` VALUES (191, 1, 1, 3, 'A', 201, 2, 1, '2020-03-03 22:53:07', b'0');
INSERT INTO `t_question` VALUES (192, 2, 2, 1, 'A,C', 202, 2, 1, '2020-03-04 09:14:43', b'0');
INSERT INTO `t_question` VALUES (193, 2, 2, 2, 'B,C', 203, 2, 1, '2020-03-04 09:16:14', b'0');
INSERT INTO `t_question` VALUES (194, 2, 2, 3, 'A,C,D', 204, 2, 1, '2020-03-04 09:17:47', b'0');
INSERT INTO `t_question` VALUES (195, 2, 2, 3, 'A,B,C', 205, 2, 1, '2020-03-04 09:19:24', b'0');
INSERT INTO `t_question` VALUES (196, 2, 2, 2, 'A,C', 206, 2, 1, '2020-03-04 09:20:25', b'0');
INSERT INTO `t_question` VALUES (197, 2, 2, 1, 'A,B,C', 207, 2, 1, '2020-03-04 09:21:29', b'0');
INSERT INTO `t_question` VALUES (198, 2, 2, 1, 'A,C,D', 208, 2, 1, '2020-03-04 09:22:49', b'0');
INSERT INTO `t_question` VALUES (199, 2, 2, 2, 'C,D', 209, 2, 1, '2020-03-04 09:23:52', b'0');
INSERT INTO `t_question` VALUES (200, 2, 2, 3, 'C,D', 210, 2, 1, '2020-03-04 09:25:04', b'0');
INSERT INTO `t_question` VALUES (201, 2, 2, 1, 'A,B,C,D', 211, 2, 1, '2020-03-04 09:26:02', b'0');
INSERT INTO `t_question` VALUES (202, 1, 1, 2, 'B', 212, 2, 1, '2020-03-04 09:27:20', b'0');
INSERT INTO `t_question` VALUES (203, 1, 1, 1, 'B', 213, 2, 1, '2020-03-04 09:28:19', b'0');
INSERT INTO `t_question` VALUES (204, 1, 1, 2, 'A', 214, 2, 1, '2020-03-04 09:29:37', b'0');
INSERT INTO `t_question` VALUES (205, 1, 1, 3, 'D', 215, 2, 1, '2020-03-04 09:30:38', b'0');
INSERT INTO `t_question` VALUES (206, 1, 1, 3, 'B', 216, 2, 1, '2020-03-04 09:31:43', b'0');
INSERT INTO `t_question` VALUES (207, 1, 1, 2, 'D', 217, 2, 1, '2020-03-04 09:33:05', b'0');
INSERT INTO `t_question` VALUES (208, 1, 1, 1, 'A', 218, 2, 1, '2020-03-04 09:34:16', b'0');
INSERT INTO `t_question` VALUES (209, 1, 1, 1, 'A', 219, 2, 1, '2020-03-04 09:35:17', b'0');
INSERT INTO `t_question` VALUES (210, 1, 1, 2, 'B', 220, 2, 1, '2020-03-04 09:36:27', b'0');
INSERT INTO `t_question` VALUES (211, 1, 1, 3, 'C', 221, 2, 1, '2020-03-04 09:37:48', b'0');
INSERT INTO `t_question` VALUES (212, 1, 1, 3, 'A', 222, 2, 1, '2020-03-04 09:39:14', b'0');
INSERT INTO `t_question` VALUES (213, 1, 1, 2, 'A', 223, 2, 1, '2020-03-04 09:40:09', b'0');
INSERT INTO `t_question` VALUES (214, 1, 1, 1, 'D', 224, 2, 1, '2020-03-04 09:41:17', b'0');
INSERT INTO `t_question` VALUES (215, 1, 1, 1, 'D', 225, 2, 1, '2020-03-04 09:42:28', b'0');
INSERT INTO `t_question` VALUES (216, 1, 1, 2, 'A', 226, 2, 1, '2020-03-04 09:43:31', b'0');
INSERT INTO `t_question` VALUES (217, 1, 1, 3, 'B', 227, 2, 1, '2020-03-04 09:44:36', b'0');
INSERT INTO `t_question` VALUES (218, 2, 2, 1, 'A,B,C,D', 228, 2, 1, '2020-03-04 09:48:44', b'0');
INSERT INTO `t_question` VALUES (219, 2, 2, 2, 'A,C,D', 229, 2, 1, '2020-03-04 09:50:13', b'0');
INSERT INTO `t_question` VALUES (220, 2, 2, 3, 'A,C,D', 230, 2, 1, '2020-03-04 09:51:33', b'0');
INSERT INTO `t_question` VALUES (221, 2, 2, 3, 'A,B,C', 231, 2, 1, '2020-03-04 09:52:46', b'0');
INSERT INTO `t_question` VALUES (222, 5, 5, 2, '<p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>1<span style=\"font-family:宋体\">）</span><span style=\"font-family:Times New Roman\">&nbsp;</span><span style=\"font-family:宋体\">简单的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>2<span style=\"font-family:宋体\">）</span><span style=\"font-family:Times New Roman\">&nbsp;</span><span style=\"font-family:宋体\">面向对象的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>3<span style=\"font-family:宋体\">）</span><span style=\"font-family:Times New Roman\">&nbsp;</span><span style=\"font-family:宋体\">分布式的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>4<span style=\"font-family:宋体\">）健壮性的</span><span style=\"font-family:Times New Roman\">&nbsp;</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>5<span style=\"font-family:宋体\">）安全的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>6<span style=\"font-family:宋体\">）体系结构中立的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>7<span style=\"font-family:宋体\">）可移植的</span></span><span style=\";font-family:宋体;font-size:19px\"><span style=\"font-family:宋体\">、</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\"><span style=\"font-family:宋体\">（</span>8<span style=\"font-family:宋体\">）解释型的</span></span><br/><br/>答对一个一分<br/></p>', 232, 2, 1, '2020-03-04 09:58:17', b'0');
INSERT INTO `t_question` VALUES (223, 5, 5, 1, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">当把一种数据类型变量的值赋给另一种数据类型时会用到数据转换。当把在内存中占字节数较少的变量的值赋给占字节较多的变量时，系统自动完成数据类型的转换（</span>2.5分）</span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">格式：（数据类型名）变量名或表达式（</span>2.5分）</span></p>', 233, 2, 1, '2020-03-04 09:59:19', b'0');
INSERT INTO `t_question` VALUES (224, 5, 5, 2, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">逻辑型用</span>boolean表示（1分）</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">字符型用</span>char表示（1分） </span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">整型共有</span>4种分别是byte，short，long，int（2 </span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">浮点型共两种</span>float和double（1分）</span></p>', 234, 2, 1, '2020-03-04 09:59:57', b'0');
INSERT INTO `t_question` VALUES (225, 5, 5, 1, '<p style=\"margin-right:0\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">在循环中使用</span>break<span style=\"font-family:宋体\">语句，将使循环终止，流程跳转到</span><span style=\"font-family:Calibri\">break</span><span style=\"font-family:宋体\">语句所在的循环外面的第一语句继续执行（</span><span style=\"font-family:Calibri\">2.5</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\"margin-right: 0px;\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">在循环中使用</span>continue<span style=\"font-family:宋体\">语句，将提前结束本次循环，流程跳转到</span><span style=\"font-family:Calibri\">continue</span><span style=\"font-family:宋体\">语句所在循环的第一个语句继续执行（</span><span style=\"font-family:Calibri\">2.5</span><span style=\"font-family:宋体\">分）</span></span></p>', 235, 2, 1, '2020-03-04 10:00:40', b'0');
INSERT INTO `t_question` VALUES (226, 5, 5, 1, '<p style=\"margin-right:0\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">结构化程序设计有顺序、分支、循坏三种基本流程（</span>2<span style=\"font-family:宋体\">分）</span></span></p><p style=\"margin-right:0\"><span style=\";font-family:宋体;font-size:16px\">java<span style=\"font-family:宋体\">中的分支语句包括</span><span style=\"font-family:Calibri\">if</span><span style=\"font-family:宋体\">语句、</span><span style=\"font-family:Calibri\">switch</span><span style=\"font-family:宋体\">语句；（</span><span style=\"font-family:Calibri\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\"margin-right:0\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">循环语句包括</span>while<span style=\"font-family:宋体\">语句、</span><span style=\"font-family:Calibri\">do-while</span><span style=\"font-family:宋体\">语句、</span><span style=\"font-family:Calibri\">for</span><span style=\"font-family:宋体\">语句；（</span><span style=\"font-family:Calibri\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\"margin-right: 0px;\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">其他如对象、变量定义语句、赋值语句、方法调用语句等都是顺序语句。（</span>1<span style=\"font-family:宋体\">分）</span></span></p>', 236, 2, 1, '2020-03-04 10:01:17', b'0');
INSERT INTO `t_question` VALUES (227, 5, 5, 2, '<p><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">方法重载是指，一个类中可以有多个方法具有相同的名字和类型（</span>2<span style=\"font-family:宋体\">分）</span></span></p><p><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">但这些方法的参数必须不同（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">或者是参数个数不同，或者是参数类型不同（</span>2<span style=\"font-family:宋体\">分）</span></span></p>', 237, 2, 1, '2020-03-04 10:02:05', b'0');
INSERT INTO `t_question` VALUES (228, 5, 5, 1, '<p><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">构造方法是一种特殊方法（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">它的名字必须与它所在的类的名字完全相同（</span>2<span style=\"font-family:宋体\">分）</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">并且不返回任何数据类型，即它是</span>void<span style=\"font-family:宋体\">型（</span><span style=\"font-family:Times New Roman\">2</span><span style=\"font-family:宋体\">分）</span></span></p>', 238, 2, 1, '2020-03-04 10:02:38', b'0');
INSERT INTO `t_question` VALUES (229, 5, 5, 1, '<p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">（</span>1<span style=\"font-family:宋体\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">抽象类中可以存在非抽象的方法，</span>&nbsp;<span style=\"font-family:宋体\">接口中的方法被默认的变成抽象方法；（</span><span style=\"font-family:Times New Roman\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;<span style=\"font-family:宋体\">（</span><span style=\"font-family:Times New Roman\">2</span><span style=\"font-family:宋体\">）</span><span style=\"font-family:Times New Roman\">&nbsp;</span><span style=\"font-family:宋体\">实现抽象类的方法时</span><span style=\"font-family:Times New Roman\">, </span><span style=\"font-family:宋体\">如果方法是抽象的</span><span style=\"font-family:Times New Roman\">,</span><span style=\"font-family:宋体\">子类必须重写抽象的方法</span><span style=\"font-family:Times New Roman\">. </span><span style=\"font-family:宋体\">如果方法不是抽象的</span><span style=\"font-family:Times New Roman\">, </span><span style=\"font-family:宋体\">子类可以选择继承，实现了接口就必须实现接口中的所有方法</span><span style=\"font-family:Times New Roman\">, </span><span style=\"font-family:宋体\">因为接口中的方法默认的全部都是抽象的方法 ；（</span><span style=\"font-family:Times New Roman\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">（</span>3<span style=\"font-family:宋体\">）抽象类可以有私有的成员变量和成员方法，接口中的方法全都被默认的修饰为</span><span style=\"font-family:Times New Roman\">: public &nbsp;abstract &nbsp; </span><span style=\"font-family:宋体\">类型的方法；（</span><span style=\"font-family:Times New Roman\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">（</span>4<span style=\"font-family:宋体\">）一个类只能继承一个抽象类，一个类可以实现多个接口 </span><span style=\"font-family:Times New Roman\">&nbsp;,</span><span style=\"font-family:宋体\">接口可以实现多继承（</span><span style=\"font-family:Times New Roman\">1</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">（</span>5<span style=\"font-family:宋体\">）抽象类中的非抽象的方法可以选择继承，接口中的方法必须全部被重写 </span><span style=\"font-family:Times New Roman\">,</span><span style=\"font-family:宋体\">并且全部是公有的</span><span style=\"font-family:Times New Roman\">public </span><span style=\"font-family:宋体\">方法</span><span style=\"font-family:Times New Roman\">.</span><span style=\"font-family:宋体\">（</span><span style=\"font-family:Times New Roman\">1</span><span style=\"font-family:宋体\">分）</span></span></p>', 239, 2, 1, '2020-03-04 10:03:54', b'0');
INSERT INTO `t_question` VALUES (230, 5, 5, 2, '<p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">继承是一种由已有的类创建新类的机制（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">利用继承可以创建一个共有属性的一般类，根据该一般类再创建具有特殊属性的新类（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">新类继承一般类的状态和行为，并根据需要增加它自己的新的状态和行为（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">由继承而得到的类称为子类（</span>1<span style=\"font-family:宋体\">分）</span></span></p><p style=\"text-indent: 32px; line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">被继承的类称为父类（</span>1<span style=\"font-family:宋体\">分）</span></span></p>', 240, 2, 1, '2020-03-04 10:04:31', b'0');
INSERT INTO `t_question` VALUES (231, 5, 5, 1, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">子类继承父类时可能会发生父类的成员变量被隐藏和父类中的成员方法被重写</span></span><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">（</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">1<span style=\"font-family:宋体\">分）</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">如果在子类中想使用被子类隐藏的父类的成员变量或方法就可以使用关键字</span>super<span style=\"font-family:宋体\">（</span><span style=\"font-family:Times New Roman\">2</span><span style=\"font-family:宋体\">分）</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">用</span>super<span style=\"font-family:宋体\">可以调用父类的构造方法和操作被隐藏的成员变量和方法（</span><span style=\"font-family:Times New Roman\">2</span><span style=\"font-family:宋体\">分）</span></span></p>', 241, 2, 1, '2020-03-04 10:05:11', b'0');
INSERT INTO `t_question` VALUES (232, 5, 5, 1, '<p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;1) <span style=\"font-family:宋体\">事件源（</span><span style=\"font-family:Times New Roman\">Event Source</span><span style=\"font-family:宋体\">）：即事件发生的场所，就是指各个组件，如按钮等，点击按钮其实就是组件上发生的一个事件；（</span><span style=\"font-family:Times New Roman\">2</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">分）</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">2) <span style=\"font-family:宋体\">事件（</span><span style=\"font-family:Times New Roman\">Event</span><span style=\"font-family:宋体\">）：事件封装了组件上发生的事情，比如按钮单击、按钮松开等等；（</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">1<span style=\"font-family:宋体\">分）</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:宋体;font-size:16px\">3) <span style=\"font-family:宋体\">事件监听器（</span><span style=\"font-family:Times New Roman\">Event Listener</span><span style=\"font-family:宋体\">）：负责监听事件源上发生的特定类型的事件，当事件到来时还必须负责处理相应的事件；（</span><span style=\"font-family:Times New Roman\">2</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">分）</span></span></p>', 242, 2, 1, '2020-03-04 10:06:47', b'0');
INSERT INTO `t_question` VALUES (233, 5, 5, 2, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">用</span>MenuBar创建一个对象，表示一个菜单条，使用Fram中的方法SetMenuBar（MenuBar），可在窗口中增加一个菜单条（1分）</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">用</span>Menu创建若干个对象，每一个对象表示菜单条上的一个菜单项（1分）</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">通过</span>MenuBar的对象add（Menu）将一个菜单加到菜单条上（1分）</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">用</span>MenuItem创建若干对象，每一个对象表示一个具体的菜单项（1分）</span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">通过</span>Menu对象调用方法add（MenuItem）可将一个菜单项加入到一个菜单中（1分）</span></p>', 243, 2, 1, '2020-03-04 10:07:40', b'0');
INSERT INTO `t_question` VALUES (234, 5, 5, 1, '<p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">异常即异常事件，指程序运行过程中出现的影响正常程序流程的事件。</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span></p><p style=\";text-indent:32px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">异常处理方法</span></span><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">一</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">是使用</span>try-catch-finally块结构在程序代码中捕获和处理异常。</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">2<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span></p><p style=\"text-indent: 32px; line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">二是把异常对象通过向调用层抛出，一层层向上直至交给</span>Java虚拟机处理，这种产生异常和转交异常的过程称为抛出异常。</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">2<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span></p>', 244, 2, 1, '2020-03-04 10:08:24', b'0');
INSERT INTO `t_question` VALUES (235, 5, 5, 1, '<p><span style=\";font-family:宋体;font-size:16px\">1</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">导入输入</span>/<span style=\"font-family:宋体\">输出包</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">：</span></span><span style=\";font-family:宋体;font-size:16px\">2</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">创建文件对象</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">；</span>3<span style=\"font-family:宋体\">创建读出</span><span style=\"font-family:Times New Roman\">/</span><span style=\"font-family:宋体\">写入操作的对象</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">：</span></span><span style=\";font-family:宋体;font-size:16px\">4</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">数据文件的读</span>/<span style=\"font-family:宋体\">写操作</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">：</span></span><span style=\";font-family:宋体;font-size:16px\">5</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">关闭文件</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">（</span></span><span style=\";font-family:宋体;font-size:16px\">1<span style=\"font-family:宋体\">分</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:Times New Roman\">）</span></span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">。</span></span></p>', 245, 2, 1, '2020-03-04 10:09:42', b'0');
INSERT INTO `t_question` VALUES (236, 3, 15, 2, '<p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public class Person</span><span style=\";font-family:宋体;font-size:16px\">{</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;protected String Name;</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;protected int Age; </span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public int getAge()</span><span style=\";font-family:宋体;font-size:16px\">{</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">return Age;</span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span><span style=\";font-family:宋体;font-size:16px\">} //person<span style=\"font-family:宋体\">类的成员变量、方法正确得</span><span style=\"font-family:Times New Roman\">10</span></span></p><p style=\";text-indent:40px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public class Student extends Person{</span></p><p style=\"text-indent: 40px; line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">private String stuno;</span><span style=\";font-family:宋体;font-size:16px\">} //<span style=\"font-family:宋体\">派生类正确得</span><span style=\"font-family:Times New Roman\">5</span></span></p>', 246, 2, 1, '2020-03-04 10:11:41', b'0');
INSERT INTO `t_question` VALUES (237, 3, 15, 3, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public class TestPrime {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public static void main(String[] args) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">Scanner input = new Scanner(System.in);</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">System.out.println(&quot;<span style=\"font-family:宋体\">请输入一个数：</span><span style=\"font-family:Times New Roman\">&quot;);</span></span><span style=\";font-family:宋体;font-size:16px\">&nbsp;//<span style=\"font-family:宋体\">输入一个数得</span><span style=\"font-family:Times New Roman\">2</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">int n = input.nextInt();</span><span style=\";font-family:宋体;font-size:16px\">&nbsp;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">boolean flag = true;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">if (n == 1)</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">flag = false;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">else {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">for (int i = 2; i &lt; n; i++) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">if (n % i== 0) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">flag = false;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">break;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">if (flag) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">System.out.println(n + &quot;<span style=\"font-family:宋体\">是素数</span><span style=\"font-family:Times New Roman\">&quot;);</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">} else {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">System.out.println(n + &quot;<span style=\"font-family:宋体\">不是素数</span><span style=\"font-family:Times New Roman\">&quot;);</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span><span style=\";font-family:宋体;font-size:16px\">//<span style=\"font-family:宋体\">判断是否为素数</span><span style=\"font-family:Times New Roman\">8</span><span style=\"font-family:宋体\">分</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">}</span><span style=\";font-family:宋体;font-size:16px\">//<span style=\"font-family:宋体\">程序结构正确得</span><span style=\"font-family:Times New Roman\">5</span></span></p>', 247, 2, 1, '2020-03-04 10:12:28', b'0');
INSERT INTO `t_question` VALUES (238, 3, 15, 3, '<p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">圆的类：</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">public&nbsp;class&nbsp;Circle {</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;double&nbsp;radius;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Circle(double&nbsp;dRadius){</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.radius = dRadius;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;double&nbsp;getLength(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;2*Math.PI*this.radius;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;double&nbsp;getArea()</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Math.PI*this.radius*this.radius;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">} //<span style=\"font-family:宋体\">圆的类编写正确得</span><span style=\"font-family:Times New Roman\">10</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\"><span style=\"font-family:宋体\">测试类：</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">package&nbsp;Test2;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">import&nbsp;java.util.Scanner;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">public&nbsp;class&nbsp;Test {</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[] args) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;iRadius;</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner sc =&nbsp;new&nbsp;Scanner(System.in);</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(&quot;<span style=\"font-family:宋体\">请输入圆的半径：</span><span style=\"font-family:Times New Roman\">&quot;);</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iRadius = sc.nextDouble();</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(iRadius &lt;&nbsp;0){</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">你输入的半径有误</span><span style=\"font-family:Times New Roman\">!&quot;);</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else{</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Circle oCir =&nbsp;new&nbsp;Circle(iRadius);</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">圆的周长为：</span><span style=\"font-family:Times New Roman\">&quot;+oCir.getLength());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">圆的面积为：</span><span style=\"font-family:Times New Roman\">&quot;+oCir.getArea());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:宋体;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"line-height: 27px;\"><span style=\";font-family:宋体;font-size:16px\">} //<span style=\"font-family:宋体\">测试类编写正确得</span><span style=\"font-family:Times New Roman\">5</span></span></p>', 248, 2, 1, '2020-03-04 10:13:20', b'0');
INSERT INTO `t_question` VALUES (239, 3, 15, 2, '<p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public&nbsp;class&nbsp;Computer {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;value;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Computer(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value =&nbsp;0;</span></p><p style=\";text-indent:16px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">} &nbsp;&nbsp;</span></p><p style=\";text-indent:16px;line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;increment(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value++;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;decrement(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value--;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;reset(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp; &nbsp;&nbsp;this.value =&nbsp;0;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;getValue(){</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.value;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">} &nbsp;&nbsp;&nbsp;//<span style=\"font-family:宋体\">计数器类</span><span style=\"font-family:Times New Roman\">Computer</span><span style=\"font-family:宋体\">且方法编写正确 </span></span><span style=\";font-family:宋体;font-size:16px\">10</span><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">分</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\"><span style=\"font-family:宋体\">测试类：</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">package&nbsp;Test8;</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">public&nbsp;class&nbsp;Test {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[] args) {</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computer oCount =&nbsp;new&nbsp;Computer();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">计数器的初始值为：</span><span style=\"font-family:Times New Roman\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">加三后的值为：</span><span style=\"font-family:Times New Roman\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.decrement();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">减一后的值为：</span><span style=\"font-family:Times New Roman\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.reset();</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\"font-family:宋体\">初始化后的值为：</span><span style=\"font-family:Times New Roman\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\";line-height:27px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<span style=\"font-family:宋体\">测试类编写正确 &nbsp;</span><span style=\"font-family:Times New Roman\">5</span><span style=\"font-family:宋体\">分</span></span></p><p style=\"line-height: 27px;\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:16px\">&nbsp;</span></p>', 249, 2, 1, '2020-03-04 10:14:31', b'0');
INSERT INTO `t_question` VALUES (240, 4, 2, 2, '', 250, 2, 1, '2020-03-04 10:24:50', b'0');
INSERT INTO `t_question` VALUES (241, 4, 2, 3, '', 251, 2, 1, '2020-03-04 10:26:00', b'0');
INSERT INTO `t_question` VALUES (242, 4, 2, 1, '', 252, 2, 1, '2020-03-04 10:26:51', b'0');
INSERT INTO `t_question` VALUES (243, 4, 2, 2, '', 253, 2, 1, '2020-03-04 10:28:00', b'0');
INSERT INTO `t_question` VALUES (244, 4, 2, 3, '', 254, 2, 1, '2020-03-04 10:29:24', b'0');
INSERT INTO `t_question` VALUES (245, 4, 2, 2, '', 255, 2, 1, '2020-03-04 10:30:26', b'0');
INSERT INTO `t_question` VALUES (246, 4, 2, 1, '', 256, 2, 1, '2020-03-04 10:31:04', b'0');
INSERT INTO `t_question` VALUES (247, 4, 2, 2, '', 257, 2, 1, '2020-03-04 10:41:35', b'0');
INSERT INTO `t_question` VALUES (248, 4, 2, 1, '', 258, 2, 1, '2020-03-04 10:42:24', b'0');
INSERT INTO `t_question` VALUES (249, 4, 2, 1, '', 259, 2, 1, '2020-03-04 10:43:28', b'0');
INSERT INTO `t_question` VALUES (250, 4, 2, 2, '', 260, 2, 1, '2020-03-04 10:44:19', b'0');
INSERT INTO `t_question` VALUES (251, 4, 2, 3, '', 261, 2, 1, '2020-03-04 10:45:17', b'0');
INSERT INTO `t_question` VALUES (252, 4, 2, 1, '', 262, 2, 1, '2020-03-04 10:46:24', b'0');
INSERT INTO `t_question` VALUES (253, 4, 2, 2, '', 263, 2, 1, '2020-03-04 10:47:18', b'0');
INSERT INTO `t_question` VALUES (254, 4, 2, 1, '', 264, 2, 1, '2020-03-04 10:48:15', b'0');
INSERT INTO `t_question` VALUES (255, 4, 2, 2, '', 265, 2, 1, '2020-03-04 10:48:49', b'0');
INSERT INTO `t_question` VALUES (256, 4, 2, 2, '', 266, 2, 1, '2020-03-04 10:49:29', b'0');
INSERT INTO `t_question` VALUES (257, 4, 2, 3, '', 267, 2, 1, '2020-03-04 10:50:06', b'0');
INSERT INTO `t_question` VALUES (258, 4, 2, 1, '', 268, 2, 1, '2020-03-04 10:50:53', b'0');
INSERT INTO `t_question` VALUES (259, 4, 2, 2, '', 269, 2, 1, '2020-03-04 10:51:22', b'0');
INSERT INTO `t_question` VALUES (260, 4, 2, 3, '', 270, 2, 1, '2020-03-04 10:52:21', b'0');
INSERT INTO `t_question` VALUES (261, 4, 2, 1, '', 271, 2, 1, '2020-03-04 10:52:55', b'0');
INSERT INTO `t_question` VALUES (262, 4, 2, 2, '', 272, 2, 1, '2020-03-04 10:54:03', b'0');
INSERT INTO `t_question` VALUES (263, 4, 2, 3, '', 273, 2, 1, '2020-03-04 10:54:45', b'0');
INSERT INTO `t_question` VALUES (264, 4, 2, 1, '', 274, 2, 1, '2020-03-04 10:55:20', b'0');
INSERT INTO `t_question` VALUES (265, 4, 2, 2, '', 275, 2, 1, '2020-03-04 10:55:57', b'0');
INSERT INTO `t_question` VALUES (266, 4, 2, 3, '', 276, 2, 1, '2020-03-04 10:56:33', b'0');
INSERT INTO `t_question` VALUES (267, 4, 2, 2, '', 277, 2, 1, '2020-03-04 10:57:10', b'0');
INSERT INTO `t_question` VALUES (268, 4, 2, 1, '', 278, 2, 1, '2020-03-04 10:58:04', b'0');
INSERT INTO `t_question` VALUES (269, 4, 2, 2, '', 279, 2, 1, '2020-03-04 10:58:44', b'0');
INSERT INTO `t_question` VALUES (270, 4, 2, 3, '', 280, 2, 1, '2020-03-04 11:00:45', b'0');
INSERT INTO `t_question` VALUES (271, 4, 2, 1, '', 281, 2, 1, '2020-03-04 11:01:27', b'0');
INSERT INTO `t_question` VALUES (272, 4, 2, 2, '', 282, 2, 1, '2020-03-04 11:02:10', b'0');
INSERT INTO `t_question` VALUES (273, 4, 2, 3, '', 283, 2, 1, '2020-03-04 11:02:53', b'0');
INSERT INTO `t_question` VALUES (274, 4, 2, 1, '', 284, 2, 1, '2020-03-04 11:03:32', b'0');
INSERT INTO `t_question` VALUES (275, 4, 2, 2, '', 285, 2, 1, '2020-03-04 11:04:15', b'0');
INSERT INTO `t_question` VALUES (276, 4, 2, 3, '', 286, 2, 1, '2020-03-04 11:04:54', b'0');
INSERT INTO `t_question` VALUES (277, 4, 2, 1, '', 287, 2, 1, '2020-03-04 11:05:31', b'0');
INSERT INTO `t_question` VALUES (278, 4, 2, 3, '', 288, 2, 1, '2020-03-04 11:06:14', b'0');
INSERT INTO `t_question` VALUES (279, 4, 2, 1, '', 289, 2, 1, '2020-03-04 11:06:56', b'0');
INSERT INTO `t_question` VALUES (280, 4, 2, 2, '', 290, 2, 1, '2020-03-04 11:07:48', b'0');
INSERT INTO `t_question` VALUES (281, 4, 2, 3, '', 291, 2, 1, '2020-03-04 11:08:33', b'0');
INSERT INTO `t_question` VALUES (282, 4, 2, 1, '', 292, 2, 1, '2020-03-04 12:56:07', b'0');
INSERT INTO `t_question` VALUES (283, 4, 2, 2, '', 293, 2, 1, '2020-03-04 12:56:46', b'0');
INSERT INTO `t_question` VALUES (284, 4, 2, 3, '', 294, 2, 1, '2020-03-04 12:57:30', b'0');
INSERT INTO `t_question` VALUES (285, 4, 2, 1, '', 295, 2, 1, '2020-03-04 12:58:07', b'0');
INSERT INTO `t_question` VALUES (286, 4, 2, 2, '', 296, 2, 1, '2020-03-04 12:58:40', b'0');
INSERT INTO `t_question` VALUES (287, 4, 2, 3, '', 297, 2, 1, '2020-03-04 12:59:16', b'0');
INSERT INTO `t_question` VALUES (288, 4, 2, 3, '', 298, 2, 1, '2020-03-04 12:59:49', b'0');
INSERT INTO `t_question` VALUES (289, 4, 2, 1, '', 299, 2, 1, '2020-03-04 13:00:53', b'0');
INSERT INTO `t_question` VALUES (290, 4, 2, 2, '', 300, 2, 1, '2020-03-04 13:01:41', b'0');
INSERT INTO `t_question` VALUES (291, 4, 2, 3, '', 301, 2, 1, '2020-03-04 13:02:22', b'0');
INSERT INTO `t_question` VALUES (292, 4, 2, 3, '', 302, 2, 1, '2020-03-04 13:03:01', b'0');
INSERT INTO `t_question` VALUES (293, 4, 2, 2, '', 303, 2, 1, '2020-03-04 13:03:41', b'0');
INSERT INTO `t_question` VALUES (294, 4, 2, 1, '', 304, 2, 1, '2020-03-04 13:05:32', b'0');
INSERT INTO `t_question` VALUES (295, 4, 2, 3, '', 305, 2, 1, '2020-03-04 13:06:11', b'0');
INSERT INTO `t_question` VALUES (296, 4, 2, 2, '', 306, 2, 1, '2020-03-04 13:06:53', b'0');
INSERT INTO `t_question` VALUES (297, 4, 2, 1, '', 307, 2, 1, '2020-03-04 13:09:09', b'0');
INSERT INTO `t_question` VALUES (298, 4, 2, 2, '', 308, 2, 1, '2020-03-04 13:10:13', b'0');
INSERT INTO `t_question` VALUES (299, 4, 2, 3, '', 309, 2, 1, '2020-03-04 13:11:05', b'0');
INSERT INTO `t_question` VALUES (300, 4, 2, 1, '', 310, 2, 1, '2020-03-04 13:11:49', b'0');
INSERT INTO `t_question` VALUES (301, 4, 2, 3, '', 311, 2, 1, '2020-03-04 13:12:41', b'0');
INSERT INTO `t_question` VALUES (302, 4, 2, 2, '', 312, 2, 1, '2020-03-04 13:13:48', b'0');
INSERT INTO `t_question` VALUES (303, 4, 2, 3, '', 313, 2, 1, '2020-03-04 13:14:33', b'0');
INSERT INTO `t_question` VALUES (304, 4, 2, 2, '', 314, 2, 1, '2020-03-04 13:15:34', b'0');
INSERT INTO `t_question` VALUES (305, 4, 2, 1, '', 315, 2, 1, '2020-03-04 13:16:28', b'0');
INSERT INTO `t_question` VALUES (306, 4, 2, 2, '', 316, 2, 1, '2020-03-04 13:17:17', b'0');
INSERT INTO `t_question` VALUES (307, 4, 2, 1, '', 317, 2, 1, '2020-03-04 13:18:12', b'0');
INSERT INTO `t_question` VALUES (308, 4, 2, 2, '', 318, 2, 1, '2020-03-04 13:18:53', b'0');
INSERT INTO `t_question` VALUES (309, 4, 2, 3, '', 319, 2, 1, '2020-03-04 13:19:28', b'0');
INSERT INTO `t_question` VALUES (310, 4, 2, 2, '', 320, 2, 1, '2020-03-04 13:20:18', b'0');
INSERT INTO `t_question` VALUES (311, 4, 2, 1, '', 321, 2, 1, '2020-03-04 13:20:52', b'0');
INSERT INTO `t_question` VALUES (312, 4, 2, 3, '', 322, 2, 1, '2020-03-04 13:21:39', b'0');
INSERT INTO `t_question` VALUES (313, 4, 2, 2, '', 323, 2, 1, '2020-03-04 13:22:18', b'0');
INSERT INTO `t_question` VALUES (314, 4, 2, 1, '', 324, 2, 1, '2020-03-04 13:22:52', b'0');
INSERT INTO `t_question` VALUES (315, 4, 2, 2, '', 325, 2, 1, '2020-03-04 13:23:28', b'0');
INSERT INTO `t_question` VALUES (316, 4, 2, 3, '', 326, 2, 1, '2020-03-04 13:24:14', b'0');
INSERT INTO `t_question` VALUES (317, 4, 2, 1, '', 327, 2, 1, '2020-03-04 13:25:36', b'0');
INSERT INTO `t_question` VALUES (318, 4, 2, 2, '', 328, 2, 1, '2020-03-04 13:26:51', b'0');
INSERT INTO `t_question` VALUES (319, 4, 2, 3, '', 329, 2, 1, '2020-03-04 13:28:58', b'0');
INSERT INTO `t_question` VALUES (320, 4, 2, 1, '', 330, 2, 1, '2020-03-04 13:29:43', b'0');
INSERT INTO `t_question` VALUES (321, 4, 2, 2, '', 331, 2, 1, '2020-03-04 13:30:21', b'0');
INSERT INTO `t_question` VALUES (322, 4, 2, 3, '', 332, 2, 1, '2020-03-04 13:30:55', b'0');
INSERT INTO `t_question` VALUES (323, 4, 2, 2, '', 333, 2, 1, '2020-03-04 13:31:27', b'0');
INSERT INTO `t_question` VALUES (324, 4, 2, 1, '', 334, 2, 1, '2020-03-04 13:32:38', b'0');
INSERT INTO `t_question` VALUES (325, 4, 2, 2, '', 335, 2, 1, '2020-03-04 13:33:17', b'0');
INSERT INTO `t_question` VALUES (326, 4, 2, 1, '', 336, 2, 1, '2020-03-04 13:33:49', b'0');
INSERT INTO `t_question` VALUES (327, 1, 1, 1, 'A', 342, 2, 1, '2020-03-15 09:55:39', b'1');
INSERT INTO `t_question` VALUES (328, 1, 1, 2, 'A', 343, 2, 1, '2020-03-15 09:59:00', b'1');
INSERT INTO `t_question` VALUES (329, 1, 1, 2, 'A', 345, 2, 1, '2020-03-17 18:14:48', b'1');
INSERT INTO `t_question` VALUES (330, 1, 1, 2, 'A', 348, 2, 1, '2020-03-17 18:24:37', b'1');
INSERT INTO `t_question` VALUES (331, 1, 1, 2, 'A', 351, 2, 1, '2020-03-18 12:30:50', b'1');
INSERT INTO `t_question` VALUES (332, 1, 1, 1, 'A', 354, 2, 1, '2020-03-31 14:20:22', b'1');
INSERT INTO `t_question` VALUES (333, 1, 2, 1, 'A', 355, 2, 1, '2020-03-31 14:20:45', b'1');
INSERT INTO `t_question` VALUES (334, 1, 1, 1, 'A', 357, 2, 1, '2020-04-11 12:16:08', b'1');
INSERT INTO `t_question` VALUES (335, 1, 1, 2, 'A', 358, 2, 1, '2020-04-11 14:06:45', b'1');
INSERT INTO `t_question` VALUES (344, 1, 20, 1, 'D', 367, 2, 1, '2020-04-25 17:55:14', b'1');
INSERT INTO `t_question` VALUES (345, 1, 1, 1, 'A', 368, 2, 1, '2020-04-28 15:14:59', b'0');
INSERT INTO `t_question` VALUES (346, 1, 20, 1, 'D', 369, 2, 1, '2020-04-28 15:15:19', b'0');
INSERT INTO `t_question` VALUES (347, 1, 20, 1, 'D', 370, 2, 1, '2020-04-28 15:15:19', b'0');
INSERT INTO `t_question` VALUES (348, 2, 2, 1, 'A,B', 373, 6, 1, '2020-04-28 15:27:24', b'0');
INSERT INTO `t_question` VALUES (349, 4, 2, 2, '', 374, 6, 1, '2020-04-28 15:27:51', b'1');
INSERT INTO `t_question` VALUES (350, 5, 5, 2, '1111', 375, 6, 1, '2020-04-28 15:28:14', b'1');
INSERT INTO `t_question` VALUES (351, 3, 15, 3, 'a&#39;a&#39;a', 376, 6, 1, '2020-04-28 15:28:37', b'1');

-- ----------------------------
-- Table structure for t_text_content
-- ----------------------------
DROP TABLE IF EXISTS `t_text_content`;
CREATE TABLE `t_text_content`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  `create_time` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 376 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_text_content
-- ----------------------------
INSERT INTO `t_text_content` VALUES (1, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">单选题单选题单选题单选题</p>\",\"analyze\":\"单选题\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"单选题\",\"score\":null},{\"prefix\":\"B\",\"content\":\"单选题\",\"score\":null},{\"prefix\":\"C\",\"content\":\"单选题\",\"score\":null}],\"correct\":\"B\"}', '2019-09-07 06:58:04');
INSERT INTO `t_text_content` VALUES (2, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\"><span style=\\\"color: #4D4D4D; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: #FFFFFF;\\\">一个Java源程序是由若干个类组成。如果源文件中有多个类时，则只能有一个类是</span><span style=\\\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; background-color: #FFFFFF; color: #F33B45;\\\"><span style=\\\"text-decoration:underline;\\\"><span class=\\\"gapfilling-span a4f05c30-d878-44b3-b36c-7ee71c38397f\\\">1</span></span></span><span style=\\\"color: #4D4D4D; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: #FFFFFF;\\\">类，并且这个类必须与源文件名同名。</span></p>\",\"analyze\":\"<p class=\\\"ueditor-p\\\"><span style=\\\"color: #4D4D4D; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: #FFFFFF;\\\">一个Java源程序是由若干个类组成。如果源文件中有多个类时，则只能有一个类是</span><span style=\\\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; background-color: #FFFFFF; color: #F33B45;\\\"><span style=\\\"text-decoration:underline;\\\">public</span></span><span style=\\\"color: #4D4D4D; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: #FFFFFF;\\\">类，并且这个类必须与源文件名同名。</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"public\",\"score\":4}],\"correct\":\"\"}', '2019-09-07 06:58:44');
INSERT INTO `t_text_content` VALUES (3, '[{\"name\":\"一、单项选择题（每小题2分，共20分）\",\"totalScore\":2,\"questionItems\":[{\"id\":3,\"itemOrder\":1}]},{\"name\":\"二．填空题（每空2分，共40分）\",\"totalScore\":4,\"questionItems\":[{\"id\":2,\"itemOrder\":2}]},{\"name\":\"三．多选题（每题10分，共30分）\",\"totalScore\":2,\"questionItems\":[{\"id\":4,\"itemOrder\":3}]}]', '2019-09-07 06:59:14');
INSERT INTO `t_text_content` VALUES (4, '[\"few\",\"greg\"]', '2019-09-07 07:07:09');
INSERT INTO `t_text_content` VALUES (5, '{\"titleContent\":\"在JDK环境下编译JAVA源程序使用的命令是（）\",\"analyze\":\"在JDK环境下编译JAVA源程序使用的命令javac\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java\",\"score\":null},{\"prefix\":\"B\",\"content\":\"javac\",\"score\":null},{\"prefix\":\"C\",\"content\":\"jvm\",\"score\":null},{\"prefix\":\"D\",\"content\":\"tomcat\",\"score\":null}],\"correct\":\"B\"}', '2020-02-13 00:17:44');
INSERT INTO `t_text_content` VALUES (6, '[\"public\"]', '2020-02-14 21:25:12');
INSERT INTO `t_text_content` VALUES (7, '[\"public\"]', '2020-02-14 21:30:08');
INSERT INTO `t_text_content` VALUES (8, '[\"public\"]', '2020-02-14 21:37:07');
INSERT INTO `t_text_content` VALUES (9, '{\"titleContent\":\"以下选项中，哪些属于JDK工具？\",\"analyze\":\"JDK工具\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java编译器\\n    \",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java运行工具\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java文档生成工具\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java打包工具\",\"score\":null}],\"correct\":\"\"}', '2020-02-14 23:29:55');
INSERT INTO `t_text_content` VALUES (10, '[]', '2020-02-17 23:09:17');
INSERT INTO `t_text_content` VALUES (11, '[{\"name\":\"一、单项选择题（每小题 1 分，共 20 分）\",\"totalScore\":2,\"questionItems\":[{\"id\":3,\"itemOrder\":1}]},{\"name\":\"二、多选题（每小题 1 分，共 20 分）\",\"totalScore\":2,\"questionItems\":[{\"id\":4,\"itemOrder\":2}]},{\"name\":\"三、填空题（每小题 1 分，共 20 分）\",\"totalScore\":4,\"questionItems\":[{\"id\":2,\"itemOrder\":3}]}]', '2020-02-18 16:35:30');
INSERT INTO `t_text_content` VALUES (12, '[{\"name\":\"一、单项选择题（每小题 1 分，共 20 分）\",\"totalScore\":2,\"questionItems\":[{\"id\":3,\"itemOrder\":1}]},{\"name\":\"二、多项选择题（每小题 1 分，共 20 分）\",\"totalScore\":2,\"questionItems\":[{\"id\":4,\"itemOrder\":2}]},{\"name\":\"三、填空题（每小题 1 分，共 20 分）\",\"totalScore\":4,\"questionItems\":[{\"id\":2,\"itemOrder\":3}]}]', '2020-02-18 16:44:15');
INSERT INTO `t_text_content` VALUES (13, '[{\"name\":\"一、单选题\",\"totalScore\":2,\"questionItems\":[{\"id\":3,\"itemOrder\":1}]},{\"name\":\"二、多选题\",\"totalScore\":2,\"questionItems\":[{\"id\":4,\"itemOrder\":1}]},{\"name\":\"三、填空题\",\"totalScore\":0,\"questionItems\":[]}]', '2020-02-21 00:05:09');
INSERT INTO `t_text_content` VALUES (14, '[{\"name\":\"一、单项选择题（每小题1分，共20分）\",\"totalScore\":2,\"questionItems\":[{\"id\":4,\"itemOrder\":1}]}]', '2020-02-22 16:08:56');
INSERT INTO `t_text_content` VALUES (15, '{\"titleContent\":\"在JDK环境下编译JAVA源程序使用的命令是（）\",\"analyze\":\"在JDK环境下编译JAVA源程序使用的命令是javac\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java\",\"score\":null},{\"prefix\":\"B\",\"content\":\"jvm\",\"score\":null},{\"prefix\":\"C\",\"content\":\"javac\",\"score\":null},{\"prefix\":\"D\",\"content\":\"tomcat\",\"score\":null}],\"correct\":\"C\"}', '2020-02-22 16:16:13');
INSERT INTO `t_text_content` VALUES (16, '{\"titleContent\":\"Java属于以下哪种语言？\",\"analyze\":\"Java属于高级语言\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"机器语言\",\"score\":null},{\"prefix\":\"B\",\"content\":\"汇编语言\",\"score\":null},{\"prefix\":\"C\",\"content\":\"高级语言\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上都不对\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 14:58:56');
INSERT INTO `t_text_content` VALUES (17, '{\"titleContent\":\"下面哪种类型的文件可以在Java虚拟机中运行？\",\"analyze\":\".class类型的文件可以在Java虚拟机中运行\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\".java\",\"score\":null},{\"prefix\":\"B\",\"content\":\".jre\",\"score\":null},{\"prefix\":\"C\",\"content\":\".exe\",\"score\":null},{\"prefix\":\"D\",\"content\":\".class\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 15:00:42');
INSERT INTO `t_text_content` VALUES (18, '{\"titleContent\":\"vv\",\"analyze\":\"nn\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp; nn\",\"score\":null},{\"prefix\":\"B\",\"content\":\"nnn\",\"score\":null},{\"prefix\":\"C\",\"content\":\"nn\",\"score\":null},{\"prefix\":\"D\",\"content\":\"nn\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:01:22');
INSERT INTO `t_text_content` VALUES (19, '{\"titleContent\":\"下面哪种类型的文件可以在Java虚拟机中运行？\",\"analyze\":\".class类型的文件可以在Java虚拟机中运行\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\".java\",\"score\":null},{\"prefix\":\"B\",\"content\":\".jre\",\"score\":null},{\"prefix\":\"C\",\"content\":\".exe\",\"score\":null},{\"prefix\":\"D\",\"content\":\".class\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 15:02:54');
INSERT INTO `t_text_content` VALUES (20, '{\"titleContent\":\"安装好JDK后，在其bin目录下有许多exe可执行文件，其中java.exe令的作用是以下哪一种？\",\"analyze\":\"安装好JDK后，在其bin目录下有许多exe可执行文件，其中java.exe令的作用是Java解释器\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java文档制作工具\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java解释器\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">Java编译器</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java启动器\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:45:53');
INSERT INTO `t_text_content` VALUES (21, '{\"titleContent\":\"如果jdk的安装路径为：d:\\\\jdk，若想在命令窗口中任何当前路径下，都可以直接使用javac和java命令，需要将环境变量path设置为以下哪个选项？\",\"analyze\":\"如果jdk的安装路径为：d:\\\\jdk，若想在命令窗口中任何当前路径下，都可以直接使用javac和java命令，需要将环境变量path设置d:\\\\jdk\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"d:\\\\jdk\",\"score\":null},{\"prefix\":\"B\",\"content\":\"d:\\\\jdk\\\\bin\",\"score\":null},{\"prefix\":\"C\",\"content\":\"d:\\\\jre\\\\bin\",\"score\":null},{\"prefix\":\"D\",\"content\":\"d:\\\\jre\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 15:47:44');
INSERT INTO `t_text_content` VALUES (22, '{\"titleContent\":\"编译Java Application源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为\",\"analyze\":\"编译Java Application源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为.class\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\".java\",\"score\":null},{\"prefix\":\"B\",\"content\":\".class\",\"score\":null},{\"prefix\":\"C\",\"content\":\".html\",\"score\":null},{\"prefix\":\"D\",\"content\":\".exe\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:49:16');
INSERT INTO `t_text_content` VALUES (23, '{\"titleContent\":\"在浏览器中执行applet程序，以下选项中的哪个方法将被最先执行\",\"analyze\":\"在浏览器中执行applet程序，start()方法将被最先执行\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"init（）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"start()\",\"score\":null},{\"prefix\":\"C\",\"content\":\"destroy()\",\"score\":null},{\"prefix\":\"D\",\"content\":\"stop()\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:51:23');
INSERT INTO `t_text_content` VALUES (24, '{\"titleContent\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\",\"analyze\":\"Java application中的主类需包含main方法，String args&nbsp;是main方法的正确形参？\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String args&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"String args&nbsp;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Char arg\",\"score\":null},{\"prefix\":\"D\",\"content\":\"StringBuffer args[]\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:53:09');
INSERT INTO `t_text_content` VALUES (25, '{\"titleContent\":\"定义一个类，必须使用的关键字是\",\"analyze\":\"定义一个类，必须使用的关键字是class\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"public\",\"score\":null},{\"prefix\":\"B\",\"content\":\"class\",\"score\":null},{\"prefix\":\"C\",\"content\":\"interface\",\"score\":null},{\"prefix\":\"D\",\"content\":\"static\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:54:33');
INSERT INTO `t_text_content` VALUES (26, '{\"titleContent\":\"下列有关Java语言的叙述中，正确的是()\",\"analyze\":\"Java语言的源文件名与public权限的类名必须相同\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java是不区分大小写的\",\"score\":null},{\"prefix\":\"B\",\"content\":\"源文件名与public权限的类名必须相同\",\"score\":null},{\"prefix\":\"C\",\"content\":\"源文件名其扩展名为.jar\",\"score\":null},{\"prefix\":\"D\",\"content\":\"源文件中public类的数目不限\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:56:16');
INSERT INTO `t_text_content` VALUES (27, '{\"titleContent\":\"在Java程序设计中，由Java编译器默认导入的包是()\",\"analyze\":\"在Java程序设计中，由Java编译器默认导入的包是java.lang\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.applet\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.awt\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.util输入语言\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.lang\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 15:57:49');
INSERT INTO `t_text_content` VALUES (28, '{\"titleContent\":\"在Java中，用package语句定义一个包时，该包的层次结构即是（）\",\"analyze\":\"在Java中，用package语句定义一个包时，该包的层次结构与文件目录的层次相同\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"与文件的结构相同\",\"score\":null},{\"prefix\":\"B\",\"content\":\"与文件目录的层次相同\",\"score\":null},{\"prefix\":\"C\",\"content\":\"与文件类型相同\",\"score\":null},{\"prefix\":\"D\",\"content\":\"与文件大小相同\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 15:59:33');
INSERT INTO `t_text_content` VALUES (29, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 16:26:28');
INSERT INTO `t_text_content` VALUES (30, '{\"titleContent\":\"<span class=\\\"gapfilling-span 9db017bd-e25a-4e63-9aee-75610842c12c\\\">1</span>\",\"analyze\":\"aaa\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"sss\",\"score\":2}],\"correct\":\"\"}', '2020-03-03 16:36:47');
INSERT INTO `t_text_content` VALUES (31, '{\"titleContent\":\"java程序中程序运行入口方法main的签名正确的有（）\",\"analyze\":\"java程序中程序运行入口方法main的签名可以写成public static void main(String args[])和static public void main(String[] args)\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"public static void main(String args[])\",\"score\":null},{\"prefix\":\"B\",\"content\":\"static public void main(String[] args)\",\"score\":null},{\"prefix\":\"C\",\"content\":\"public void static main(String[] args)\",\"score\":null},{\"prefix\":\"D\",\"content\":\"public void main(String args[])\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 16:50:20');
INSERT INTO `t_text_content` VALUES (32, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">如果将类</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">MyClass声明为public，它的文件名称必须是<span class=\\\"gapfilling-span 80a15171-56c3-43ff-b116-918c359f60c8\\\">1</span>才能正常编译。</span>\",\"analyze\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">如果将类</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">MyClass声明为public，它的文件名称必须是MyClass.java才能正常编译。</span>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">MyClass.java</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-03 17:04:05');
INSERT INTO `t_text_content` VALUES (33, '{\"titleContent\":\"<span style=\\\"font-family: 宋体; font-size: 19px;\\\">简述</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">Java</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">程序的开发过程？</span>\",\"analyze\":\"Java开发过程<p><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">&nbsp; &nbsp;（</span>1<span style=\\\"font-family:宋体\\\">）使用一个文字编辑器，编写源文件。（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-left:47px;text-indent:0\\\"><span style=\\\"font-family:宋体;font-size:19px\\\">（2）</span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">使用</span>java<span style=\\\"font-family:宋体\\\">编译器，编译源文件得到字节码文件。（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-left: 47px; text-indent: 0px;\\\"><span style=\\\"font-family:&#39;Times New Roman&#39;;font-size:19px\\\">（3）</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">运行</span>java<span style=\\\"font-family:宋体\\\">程序，分两种</span><span style=\\\"font-family:Times New Roman\\\">java</span><span style=\\\"font-family:宋体\\\">应用程序必须通过</span><span style=\\\"font-family:Times New Roman\\\">java</span><span style=\\\"font-family:宋体\\\">解释器来解释执行，</span><span style=\\\"font-family:Times New Roman\\\">java</span><span style=\\\"font-family:宋体\\\">小应用程序必须使用解释器和浏览器运行程序。（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<span style=\\\"font-family: 宋体; font-size: 19px;\\\">（</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">1</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">）使用一个文字编辑器，编写源文件。（</span><span style=\\\"font-size: 19px; font-family: &quot;Times New Roman&quot;;\\\">1</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">分）<br/><br/></span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">（2）</span><span style=\\\"font-family: 宋体; font-size: 19px;\\\">使用java编译器，编译源文件得到字节码文件。（<span style=\\\"font-family:Times New Roman\\\">2</span>分）<br/><br/></span><span style=\\\"font-family: &quot;Times New Roman&quot;; font-size: 19px;\\\">（3）</span><span style=\\\"font-family: &quot;Times New Roman&quot;; font-size: 19px;\\\"><span style=\\\"font-family:宋体\\\">运行</span>java<span style=\\\"font-family:宋体\\\">程序，分两种</span>java<span style=\\\"font-family:宋体\\\">应用程序必须通过</span>java<span style=\\\"font-family:宋体\\\">解释器来解释执行，</span>java<span style=\\\"font-family:宋体\\\">小应用程序必须使用解释器和浏览器运行程序。（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span>\"}', '2020-03-03 17:09:17');
INSERT INTO `t_text_content` VALUES (34, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">参考上述</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">java程序的框架，写一个完整的程序使用循环结构计算1+2+3..1000和并输出运算结果。</span>\",\"analyze\":\"<p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public class sum{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public static void main（String args</span><span style=\\\";font-family:宋体;font-size:16px\\\">[]</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span>{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">int s=0；//初始值正确得5</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">for（i-1，i&lt;=1000；it=1）//循环正确得5</span></p><p style=\\\"text-indent: 32px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">System.out.pintin（&quot;sum is&quot;+s）</span><span style=\\\";font-family:宋体;font-size:16px\\\">;}}</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">/程序框架正确得5</span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public class sum{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public static void main（String args</span><span style=\\\";font-family:宋体;font-size:16px\\\">[]</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span>{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">int s=0；//初始值正确得5</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">for（i-1，i&lt;=1000；it=1）//循环正确得5</span></p><p style=\\\"text-indent: 32px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">System.out.pintin（&quot;sum is&quot;+s）</span><span style=\\\";font-family:宋体;font-size:16px\\\">;}}</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">/程序框架正确得5</span></p>\"}', '2020-03-03 17:13:56');
INSERT INTO `t_text_content` VALUES (35, '{\"titleContent\":\"以下属于正确的java注释有()。\",\"analyze\":\"<span style=\\\"color: #333333; font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; background-color: #FFFFFF;\\\">Java中三种类型的注释：</span><br/><span style=\\\"color: #333333; font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; background-color: #FFFFFF;\\\">单行注释：// 注释内容</span><br/><span style=\\\"color: #333333; font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; background-color: #FFFFFF;\\\">多行注释：/*... 注释内容....*/</span><br/><span style=\\\"color: #333333; font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; background-color: #FFFFFF;\\\">文本注释：/**.. 注释内容....*/</span>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"//This is comment\",\"score\":null},{\"prefix\":\"B\",\"content\":\"/*This is comment\",\"score\":null},{\"prefix\":\"C\",\"content\":\"/**This is comment*/&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&nbsp;/*This is comment*/\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:23:22');
INSERT INTO `t_text_content` VALUES (36, '{\"titleContent\":\"以下选项中，哪些属于JDK工具？\",\"analyze\":\"<p>jak工具包括Java编译器、Java运行工具、Java文档生成工具、Java打包工具等</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java编译器\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java运行工具\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java文档生成工具\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java打包工具\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:26:55');
INSERT INTO `t_text_content` VALUES (37, '{\"titleContent\":\"下面关于Java语言说法正确的是\",\"analyze\":\"Java语言是面向对象的、解释执行的网络编程语言。<br/>ava语言具有可移植性，是与平台无关的编程语言。<br/>Java语言编写的程序虽然是&quot;一次编译，到处运行&quot;，但必须要有Java的运行环境。<br/>Java语言可对内存垃圾自动收集。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java语言是面向对象的、解释执行的网络编程语言。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java语言具有可移植性，是与平台无关的编程语言。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java语言可对内存垃圾自动收集。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java语言编写的程序虽然是&quot;一次编译，到处运行&quot;，但必须要有Java的运行环境。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:29:14');
INSERT INTO `t_text_content` VALUES (38, '{\"titleContent\":\"下面哪些说法是正确的？（）\",\"analyze\":\"运行java程序必须需要java运行环境的支持，例如需要java虚拟机JVM.<br/>使用Visual J++在windows下开发的所有java程序可以不加修改的在Unix下运行，这是java程序&quot;一次编写，到处运行&quot;的特点决定的<br/><br/>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java语言是真正的面向对象的语言，任何代码都是类的一部分。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"运行java程序必须需要java运行环境的支持，例如需要java虚拟机JVM.\",\"score\":null},{\"prefix\":\"C\",\"content\":\"使用Visual J++在windows下开发的所有java程序可以不加修改的在Unix下运行，这是java程序&quot;一次编写，到处运行&quot;的特点决定的\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java语言的类加载器可以实现从互联网上加载java程序。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:31:02');
INSERT INTO `t_text_content` VALUES (39, '{\"titleContent\":\"Java VM执行的操作包括\",\"analyze\":\"Java VM执行的操作包括:加载.class文件、执行垃圾回收、管理内存\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"加载.class文件\",\"score\":null},{\"prefix\":\"B\",\"content\":\"将.java文件编译成.class文件\",\"score\":null},{\"prefix\":\"C\",\"content\":\"管理内存\",\"score\":null},{\"prefix\":\"D\",\"content\":\"执行垃圾回收\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:32:59');
INSERT INTO `t_text_content` VALUES (40, '{\"titleContent\":\"下列描述中，哪些符合Java语言的特征\",\"analyze\":\"Java语言支持跨平台（Windows，Linux，Unix等）、GC（自动垃圾回收），提高了代码安全性\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"支持跨平台（Windows，Linux，Unix等）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"GC（自动垃圾回收），提高了代码安全性\",\"score\":null},{\"prefix\":\"C\",\"content\":\"支持类C的指针运算操作\",\"score\":null},{\"prefix\":\"D\",\"content\":\"不支持与其它语言书写的程序进行通讯解答\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:34:48');
INSERT INTO `t_text_content` VALUES (41, '{\"titleContent\":\"以下属于面向对象的特征的是\",\"analyze\":\"面向对象的特征是封装继承和多态\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"重载\",\"score\":null},{\"prefix\":\"B\",\"content\":\"重写\",\"score\":null},{\"prefix\":\"C\",\"content\":\"封装\",\"score\":null},{\"prefix\":\"D\",\"content\":\"继承\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:38:19');
INSERT INTO `t_text_content` VALUES (42, '{\"titleContent\":\"在Java中，所有类的根类是\",\"analyze\":\"在Java中，所有类的根类是java.lang.Object\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.lang.Object\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.applet.Applet\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.lang.Class\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.swing.Jframe\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 17:40:13');
INSERT INTO `t_text_content` VALUES (43, '{\"titleContent\":\"用8位无符号的二进制数能表示的最大十进制数为（）\",\"analyze\":\"用8位无符号的二进制数能表示的最大十进制数为255\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"127\",\"score\":null},{\"prefix\":\"B\",\"content\":\"128\",\"score\":null},{\"prefix\":\"C\",\"content\":\"255\",\"score\":null},{\"prefix\":\"D\",\"content\":\"256\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 17:41:45');
INSERT INTO `t_text_content` VALUES (44, '{\"titleContent\":\"以下能作为char类型的字面值的有\",\"analyze\":\"以下能作为char类型的字面值的有&#39;f&#39;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&quot;c&quot;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&#39;f&#39;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&#39;\\\\ul&#39;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&#39;\\\\n&#39;\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 17:45:49');
INSERT INTO `t_text_content` VALUES (45, '{\"titleContent\":\"假定x和y为double型，则表达式x=2,y=x+3/2的值是\",\"analyze\":\"假定x和y为double型，则表达式x=2,y=x+3/2的值是3.0\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"3.5\",\"score\":null},{\"prefix\":\"B\",\"content\":\"3\",\"score\":null},{\"prefix\":\"C\",\"content\":\"2.00\",\"score\":null},{\"prefix\":\"D\",\"content\":\"3.0\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 17:47:19');
INSERT INTO `t_text_content` VALUES (46, '{\"titleContent\":\"下面的哪些答案可以用以表示八进制值8?\",\"analyze\":\"<p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">一个数如果要指明它采用八进制，必须在它前面</p><p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">上一个0，如：123是十进制，但0123则表示采用八进制。这就是八进制数的表达方法。</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"10\",\"score\":null},{\"prefix\":\"B\",\"content\":\"0x10\",\"score\":null},{\"prefix\":\"C\",\"content\":\"8\",\"score\":null},{\"prefix\":\"D\",\"content\":\"0X8\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 17:51:11');
INSERT INTO `t_text_content` VALUES (47, '{\"titleContent\":\"下面哪些答案可以正确表示十六进制数字10?\",\"analyze\":\"<p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">6进制数必须以&nbsp;&nbsp; 0x开头。比如&nbsp;&nbsp; 0x1表示一个16进制数。而1则表示一个</p><p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">进制。另外如：0xff,0xFF,0X102A,等等。其中的x也也不区分大小写。(注意：0x中的0是数字</p><p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">0，而不是字母O) &nbsp; 。</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"0xA\",\"score\":null},{\"prefix\":\"B\",\"content\":\"0x16\",\"score\":null},{\"prefix\":\"C\",\"content\":\"0A\",\"score\":null},{\"prefix\":\"D\",\"content\":\"16\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 17:53:03');
INSERT INTO `t_text_content` VALUES (48, '{\"titleContent\":\"下面哪些答案可以正确表示十六进制数字10?\",\"analyze\":\"<p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">6进制数必须以&nbsp;&nbsp; 0x开头。比如&nbsp;&nbsp; 0x1表示一个16进制数。而1则表示一个</p><p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">进制。另外如：0xff,0xFF,0X102A,等等。其中的x也也不区分大小写。(注意：0x中的0是数字</p><p style=\\\"margin-top: 17px; margin-bottom: 17px; padding: 0px; line-height: 28px; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Microsoft YaHei&quot;, arial, 宋体, sans-serif, tahoma; white-space: normal; background-color: rgb(255, 255, 255);\\\">0，而不是字母O) &nbsp; 。</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"0xA\",\"score\":null},{\"prefix\":\"B\",\"content\":\"0x16\",\"score\":null},{\"prefix\":\"C\",\"content\":\"0A\",\"score\":null},{\"prefix\":\"D\",\"content\":\"16\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 17:55:28');
INSERT INTO `t_text_content` VALUES (49, '{\"titleContent\":\"下面的哪些赋值语句是错的?\",\"analyze\":\"double d = 5.3E12;是错的\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\" float f = 11.1; \",\"score\":null},{\"prefix\":\"B\",\"content\":\"double d = 5.3E12;\",\"score\":null},{\"prefix\":\"C\",\"content\":\" double d = 3.14159;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"double d = 3.14;\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 18:01:22');
INSERT INTO `t_text_content` VALUES (50, '{\"titleContent\":\"byte变量的取值范围为\",\"analyze\":\"byte变量的取值范围为&#39;-128~127&#39;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&#39;0~65535&#39;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&#39;-128~127&#39;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&#39;-256~255&#39;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&#39;0~32767&#39;\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 18:02:50');
INSERT INTO `t_text_content` VALUES (51, '{\"titleContent\":\"下面哪些不是JAVA的原始数据类型\",\"analyze\":\"<span style=\\\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; background-color: #FEFEF2;\\\">ava的原始数据类型一共就8个，分别是：byte、short、int、long、boolean、char、float、double。注意这些是大小写敏感的</span>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"short\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Boolean\",\"score\":null},{\"prefix\":\"C\",\"content\":\"unit\",\"score\":null},{\"prefix\":\"D\",\"content\":\"float\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 18:04:33');
INSERT INTO `t_text_content` VALUES (52, '{\"titleContent\":\"下面哪些声明是合法的\",\"analyze\":\"long长整型占8个字节\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"long l=49940\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int i=4L\",\"score\":null},{\"prefix\":\"C\",\"content\":\"float f=1.1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"double t=0.9F\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:08:29');
INSERT INTO `t_text_content` VALUES (53, '{\"titleContent\":\"下面哪些声明是合法的\",\"analyze\":\"long长整型占8个字节\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"long l=49940\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int i=4L\",\"score\":null},{\"prefix\":\"C\",\"content\":\"float f=1.1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"double t=0.9F\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:10:24');
INSERT INTO `t_text_content` VALUES (54, '{\"titleContent\":\"Java语言中下面哪个可以用作正确的变量名称\",\"analyze\":\"Java变量不能用Java关键字\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"3D\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p>name</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"extends\",\"score\":null},{\"prefix\":\"D\",\"content\":\"implements\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:15:21');
INSERT INTO `t_text_content` VALUES (55, '{\"titleContent\":\"下面哪个是对字符串String的正确定义\",\"analyze\":\"String s1=null是对字符串String的正确定义\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String s1=null\",\"score\":null},{\"prefix\":\"B\",\"content\":\"String s2=’null’\",\"score\":null},{\"prefix\":\"C\",\"content\":\".String s3=(String)’abc’\",\"score\":null},{\"prefix\":\"D\",\"content\":\"String s4=(String)’\\\\uface’\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:16:55');
INSERT INTO `t_text_content` VALUES (56, '{\"titleContent\":\"下列数据类型中，哪种数据类型转为int类型需要进行强制转换\",\"analyze\":\"float转为int类型需要进行强制转换\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"byte\",\"score\":null},{\"prefix\":\"B\",\"content\":\"short\",\"score\":null},{\"prefix\":\"C\",\"content\":\"char\",\"score\":null},{\"prefix\":\"D\",\"content\":\"float\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 18:18:32');
INSERT INTO `t_text_content` VALUES (57, '{\"titleContent\":\"下面哪种写法可以实现访问数组arr的第1个元素?\",\"analyze\":\"<p>数组的下标从0开始</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"arr[0]\",\"score\":null},{\"prefix\":\"B\",\"content\":\"arr[1]\",\"score\":null},{\"prefix\":\"C\",\"content\":\"arr(0)\",\"score\":null},{\"prefix\":\"D\",\"content\":\"arr(1)\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:20:03');
INSERT INTO `t_text_content` VALUES (58, '{\"titleContent\":\"下面的运算符中，用于执行除法运算是哪个？\",\"analyze\":\"/为除法运算符\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"/\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p>\\\\</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"%\",\"score\":null},{\"prefix\":\"D\",\"content\":\"*\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:21:32');
INSERT INTO `t_text_content` VALUES (59, '{\"titleContent\":\"下列关于数据类型的说法中，错误的是\",\"analyze\":\"浮点数类型变量可以赋予一个整数数值\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java中的数据类型分为基本数据类型和引用数据类型\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int类型数据占4个字节\",\"score\":null},{\"prefix\":\"C\",\"content\":\"浮点数类型变量不能赋予一个整数数值\",\"score\":null},{\"prefix\":\"D\",\"content\":\"布尔类型的变量只有true和false这两个值\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 18:22:48');
INSERT INTO `t_text_content` VALUES (60, '{\"titleContent\":\"下列有关数组中元素位置交换的描述，错误的是\",\"analyze\":\"位置交换后数组的角标顺序没有发生改变\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"位置交换的过程中需要借助一个中间变量\",\"score\":null},{\"prefix\":\"B\",\"content\":\"位置交换的过程至少需要三步\",\"score\":null},{\"prefix\":\"C\",\"content\":\"位置交换后数组的角标顺序发生了改变\",\"score\":null},{\"prefix\":\"D\",\"content\":\"位置交换后数组的角标顺序不会发生改变\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 18:24:15');
INSERT INTO `t_text_content` VALUES (61, '{\"titleContent\":\"下列选项中，关于运算符“^”的描述正确是\",\"analyze\":\"运算符“^”二进制位有相同，则结果为0，不同为1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"二进制位有1，则结果为1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"二进制位有0，则结果为0\",\"score\":null},{\"prefix\":\"C\",\"content\":\"二进制位有相同，则结果为1，不同为0\",\"score\":null},{\"prefix\":\"D\",\"content\":\"二进制位有相同，则结果为0，不同为1\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 18:26:23');
INSERT INTO `t_text_content` VALUES (62, '{\"titleContent\":\"下面代码中，哪一项是正确定义了一个3*4的二维数组\",\"analyze\":\"int[][] arr = new int[3][4]正确定义了一个3*4的二维数组\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"int[][] arr = new int[3][4]\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int[][] arr = new int[3][]\",\"score\":null},{\"prefix\":\"C\",\"content\":\"int[][] arr = new int[][4]\",\"score\":null},{\"prefix\":\"D\",\"content\":\"int[][] arr = {{1,2},{3,4,5},{6}}\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:28:19');
INSERT INTO `t_text_content` VALUES (63, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">请阅读下面的程序。</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">Class WhileDemo5 {</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">public static void main(String[] args) {</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">int n = 5;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">while (n &lt; 10) {</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">System.out.print(n);</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">n++;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"analyze\":\"输出56789\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"无输出\",\"score\":null},{\"prefix\":\"B\",\"content\":\"输出56789\",\"score\":null},{\"prefix\":\"C\",\"content\":\"死循环\",\"score\":null},{\"prefix\":\"D\",\"content\":\"编译错误\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 18:29:48');
INSERT INTO `t_text_content` VALUES (64, '{\"titleContent\":\"下列关于continue语句的说法中，正确的是\",\"analyze\":\"continue语句可以在循环语句中使用\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"continue语句可以在选择语句中使用\",\"score\":null},{\"prefix\":\"B\",\"content\":\"continue语句可以在条件语句中使用\",\"score\":null},{\"prefix\":\"C\",\"content\":\"continue语句可以在循环语句中使用\",\"score\":null},{\"prefix\":\"D\",\"content\":\"continue语句可以在任何语句中使用\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 18:31:11');
INSERT INTO `t_text_content` VALUES (65, '{\"titleContent\":\"当访问无效的数组下标时，会发生\",\"analyze\":\"当访问无效的数组下标时，会发生抛出异常\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"中止程序\",\"score\":null},{\"prefix\":\"B\",\"content\":\"抛出异常\",\"score\":null},{\"prefix\":\"C\",\"content\":\"系统崩溃\",\"score\":null},{\"prefix\":\"D\",\"content\":\"直接跳过\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 18:32:27');
INSERT INTO `t_text_content` VALUES (66, '{\"titleContent\":\"下列语句会造成数组new int[10]越界是\",\"analyze\":\"下列语句会造成数组new int[10]越界是for（int i-0；i&lt;-10；i++）a[i]++\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"a[0]+=9\",\"score\":null},{\"prefix\":\"B\",\"content\":\"a[9]-10\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&#39;-a[9]&#39;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"for（int i-0；i&lt;-10；i++）a[i]++\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 18:33:55');
INSERT INTO `t_text_content` VALUES (67, '{\"titleContent\":\"关于char类型的数组，说法正确的是\",\"analyze\":\"char类型的数组可以存储整型数值\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"其数组的默认值是&#39;A&#39;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"可以仅通过数组名来访问数组\",\"score\":null},{\"prefix\":\"C\",\"content\":\"数组不能转换为字符串\",\"score\":null},{\"prefix\":\"D\",\"content\":\"可以存储整型数值\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 18:35:41');
INSERT INTO `t_text_content` VALUES (68, '{\"titleContent\":\"数组在Java中储存在()中\",\"analyze\":\"数组在Java中储存在堆中\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"栈\",\"score\":null},{\"prefix\":\"B\",\"content\":\"队列\",\"score\":null},{\"prefix\":\"C\",\"content\":\"堆\",\"score\":null},{\"prefix\":\"D\",\"content\":\"链表\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 18:36:38');
INSERT INTO `t_text_content` VALUES (69, '{\"titleContent\":\"关于数组作为方法的参数时，向方法传递的是\",\"analyze\":\"数组作为方法的参数时，向方法传递的是数组的引用\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"数组的引用\",\"score\":null},{\"prefix\":\"B\",\"content\":\"数组的栈地址\",\"score\":null},{\"prefix\":\"C\",\"content\":\"数组自身\",\"score\":null},{\"prefix\":\"D\",\"content\":\"数组的元素\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 18:38:04');
INSERT INTO `t_text_content` VALUES (70, '{\"titleContent\":\"以下能作为char类型的字面值的有\",\"analyze\":\"’\\\\u0012&#39;和&#39;f&#39;能作为char类型的字面值\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&quot;e&quot;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&#39;f&#39;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&#39;\\\\u12&#39;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"’\\\\u0012&#39;\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 18:40:21');
INSERT INTO `t_text_content` VALUES (71, '{\"titleContent\":\"下面集合定义正确的有\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String strs[] = { ‘a’ ‘b’ ‘c’};&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"String[] strs = {“a”, “b”, “c”};\",\"score\":null},{\"prefix\":\"C\",\"content\":\"String[] strs = new String{“a” ”b” ”c”};\",\"score\":null},{\"prefix\":\"D\",\"content\":\"String strs[] = new String[]{“a”, “b”, “c”};\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 18:53:12');
INSERT INTO `t_text_content` VALUES (72, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">定义如下的二维数組b，下面的说法正确的是</p><p class=\\\"ueditor-p\\\">int b[][]={{1，2，3}，{4，5}，{6，7，8}}；</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"length的值是3\",\"score\":null},{\"prefix\":\"B\",\"content\":\"b[1].length的值是3\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">b[1][1]的值是5</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"二维数組b的第一行有3个元素\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 18:57:02');
INSERT INTO `t_text_content` VALUES (73, '{\"titleContent\":\"下列哪些表达式返回的是true？\",\"analyze\":\"&quot;john&quot;==&quot;john&quot;和&quot;john&quot;.equals（&quot;john&quot;）的表达正确\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&quot;john&quot;==&quot;john&quot;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&quot;john&quot;.equals（&quot;john&quot;）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&quot;john&quot;=&quot;john&quot;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&quot;john&quot;.equals（new Button（&quot;john&quot;））\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 18:58:44');
INSERT INTO `t_text_content` VALUES (74, '{\"titleContent\":\"下列选项代码正确的有\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"<p class=\\\"ueditor-p\\\">&nbsp;int i=0；if（i）{</p><p class=\\\"ueditor-p\\\">System.out.println（&quot;OK&quot;）；</p><p class=\\\"ueditor-p\\\">}</p>\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">boolean b=true；</p><p class=\\\"ueditor-p\\\">boolean b2=true；</p><p class=\\\"ueditor-p\\\">if（b==b2）{</p><p class=\\\"ueditor-p\\\">System.out.printin（&quot;OK&quot;）；}</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">&nbsp;int i=1;</p><p class=\\\"ueditor-p\\\">&nbsp;intj=2;</p><p class=\\\"ueditor-p\\\">&nbsp;if(i==1 &amp;1|j==2)</p><p class=\\\"ueditor-p\\\">System.out.println(&quot;OK&quot;);</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p class=\\\"ueditor-p\\\">int i=1;</p><p class=\\\"ueditor-p\\\">int j=2;</p><p class=\\\"ueditor-p\\\">if (i==1||j==2)</p><p class=\\\"ueditor-p\\\">System. out. println(&quot;OK&quot;);</p>\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 18:59:58');
INSERT INTO `t_text_content` VALUES (75, '{\"titleContent\":\"选择Java语言中的基本数据类型\",\"analyze\":\"<p style=\\\"margin: 10px auto; padding: 0px; font-size: 11pt; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\\\">整型：byte, short, int, long</p><p style=\\\"margin: 10px auto; padding: 0px; font-size: 11pt; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\\\">字符型：char</p><p style=\\\"margin: 10px auto; padding: 0px; font-size: 11pt; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\\\">浮点型：float, double</p><p style=\\\"margin: 10px auto; padding: 0px; font-size: 11pt; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\\\">布尔型：boolean</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"byte\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Integer&nbsp;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"String\",\"score\":null},{\"prefix\":\"D\",\"content\":\"char\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:02:17');
INSERT INTO `t_text_content` VALUES (76, '{\"titleContent\":\"下面哪些是合法的变量名？\",\"analyze\":\"J<span style=\\\"color: #333333; font-family: arial; font-size: 14px; background-color: #FFFFFF;\\\">ava变量的基本命名法则: 1、以下划线、字母、美元符开头。 2、后面跟下划线、字母、美元符以及数字。 3、 没有长度限制</span>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;2variable\",\"score\":null},{\"prefix\":\"B\",\"content\":\".variable2\",\"score\":null},{\"prefix\":\"C\",\"content\":\"$anothervar\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&nbsp;SY\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:04:01');
INSERT INTO `t_text_content` VALUES (77, '{\"titleContent\":\"下列（）属于引用数据类型\",\"analyze\":\"<p style=\\\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\\\">java的引用类型只有三种，分别是类(class)、接口(interface)、数组。</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String\",\"score\":null},{\"prefix\":\"B\",\"content\":\"char\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">用户自定义的Student类类型</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p class=\\\"ueditor-p\\\">int</p>\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:17:01');
INSERT INTO `t_text_content` VALUES (78, '{\"titleContent\":\"下列关于注释作用的描述中，正确的是？\",\"analyze\":\"注释的作用为对程序进行说明、帮助调试程序、帮助整理编程思路\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"对程序进行说明\",\"score\":null},{\"prefix\":\"B\",\"content\":\"参与编译\",\"score\":null},{\"prefix\":\"C\",\"content\":\"帮助调试程序\",\"score\":null},{\"prefix\":\"D\",\"content\":\"帮助整理编程思路\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:18:49');
INSERT INTO `t_text_content` VALUES (79, '{\"titleContent\":\"以下关于final的描述中，错误的是：\",\"analyze\":\"final可以用来修饰接口以及抽象类\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"final可以用来修饰接口以及抽象类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"final修饰的变量不允许被再次赋值\",\"score\":null},{\"prefix\":\"C\",\"content\":\"final修饰的类无法被继承\",\"score\":null},{\"prefix\":\"D\",\"content\":\"final修饰的变量需要初始化\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:20:16');
INSERT INTO `t_text_content` VALUES (80, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">下面的代码段执行之后count的值是什么（）</p><p class=\\\"ueditor-p\\\">int count = 1；</p><p class=\\\"ueditor-p\\\">for（int i = 1；</p><p class=\\\"ueditor-p\\\">i &lt;5；i++）{</p><p class=\\\"ueditor-p\\\">count += i；}</p><p class=\\\"ueditor-p\\\">System.out.println（count）；</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"5\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"15\",\"score\":null},{\"prefix\":\"D\",\"content\":\"16\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 19:23:12');
INSERT INTO `t_text_content` VALUES (81, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">下列程序段执行后的结果是（）.</p><p class=\\\"ueditor-p\\\">String s = new String（&quot;abcdefg&quot;）；</p><p class=\\\"ueditor-p\\\">for（int i-0；ics.length（）；i+=2）{</p><p class=\\\"ueditor-p\\\">System.out.print（s.charAt（i））}；</p>\",\"analyze\":\"<p>程序的运行结果为aceg</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"aceg\",\"score\":null},{\"prefix\":\"B\",\"content\":\"ACEG\",\"score\":null},{\"prefix\":\"C\",\"content\":\"abcdefg\",\"score\":null},{\"prefix\":\"D\",\"content\":\"abcd\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 19:24:54');
INSERT INTO `t_text_content` VALUES (82, '{\"titleContent\":\"在JAVA中，（）关键字用来终止循环语句\",\"analyze\":\"在JAVA中，break关键字用来终止循环语句\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"return&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"continue&nbsp;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"break\",\"score\":null},{\"prefix\":\"D\",\"content\":\"exit\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 19:26:09');
INSERT INTO `t_text_content` VALUES (83, '{\"titleContent\":\"在JAVA中，无论测试条件是什么，下列（）循环将至少执行一次。\",\"analyze\":\"在JAVA中，无论测试条件是什么，（do...while）循环将至少执行一次。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"for\",\"score\":null},{\"prefix\":\"B\",\"content\":\"while\",\"score\":null},{\"prefix\":\"C\",\"content\":\"do...while\",\"score\":null},{\"prefix\":\"D\",\"content\":\"while...do\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 19:27:17');
INSERT INTO `t_text_content` VALUES (84, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">给定某java程序的main方法如下，该程序的运行结果是（）。</p><p class=\\\"ueditor-p\\\">public static void main（String[]args）{</p><p class=\\\"ueditor-p\\\">boolean boo=true；</p><p class=\\\"ueditor-p\\\">if（boo=false）{</p><p class=\\\"ueditor-p\\\">system.out.println（&quot;a&quot;）；</p><p class=\\\"ueditor-p\\\">else System.out.println（&quot;b&quot;）；}}</p>\",\"analyze\":\"程序的运行结果为b\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"a\",\"score\":null},{\"prefix\":\"B\",\"content\":\"b\",\"score\":null},{\"prefix\":\"C\",\"content\":\"c\",\"score\":null},{\"prefix\":\"D\",\"content\":\"d\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:31:38');
INSERT INTO `t_text_content` VALUES (85, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">已知如下代码：switch（m）</p><p class=\\\"ueditor-p\\\">{</p><p class=\\\"ueditor-p\\\">case 0：System.out.println（&quot;Condition 0&quot;）；</p><p class=\\\"ueditor-p\\\">case 1：System.out.printIn（&quot;Condition 1&quot;）；</p><p class=\\\"ueditor-p\\\">case 2：System.out.println（&quot;Condition 2&quot;）；</p><p class=\\\"ueditor-p\\\">case 3：System.out.println（&quot;Condition 3&quot;）；break；</p><p class=\\\"ueditor-p\\\">default：System.out.printIn（&quot;Other Condition&quot;）；</p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\">当m的值为什么时不输出&quot;Condition 2&quot;？</p>\",\"analyze\":\"当m的值为3时不输出&quot;Condition 2&quot;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"0\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"2\",\"score\":null},{\"prefix\":\"D\",\"content\":\"3\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 19:32:47');
INSERT INTO `t_text_content` VALUES (86, '{\"titleContent\":\"关于for循环和while循环的说法哪个正确？\",\"analyze\":\"while循环判断条件一般是程序结果，for循环的判断条件一般是非程序结果\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"while循环先判断后执行，for循环先执行后判断。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"while循环判断条件一般是程序结果，for循环的判断条件一般是非程序结果\",\"score\":null},{\"prefix\":\"C\",\"content\":\"两种循环任何时候都不可以替换\",\"score\":null},{\"prefix\":\"D\",\"content\":\"两种循环结构中都必须有循环体，循环体不能为空\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:34:22');
INSERT INTO `t_text_content` VALUES (87, '{\"titleContent\":\"关于选择结构下列哪个说法正确？\",\"analyze\":\"if语句可以没有else语句对应\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"if语句和else语句必须成对出现\",\"score\":null},{\"prefix\":\"B\",\"content\":\"if语句可以没有else语句对应\",\"score\":null},{\"prefix\":\"C\",\"content\":\"switch结构中每个case语句中必须用break语句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"switch结构中必须有default语句\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:36:05');
INSERT INTO `t_text_content` VALUES (88, '{\"titleContent\":\"while循环和do.while 循环的区别是\",\"analyze\":\"do...while看环是先循环后判断，所以循环体至少被执行一次\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"没有区别，这两个结构任何情况下效果一样\",\"score\":null},{\"prefix\":\"B\",\"content\":\"while循环比do...while循环执行效率高\",\"score\":null},{\"prefix\":\"C\",\"content\":\"while循环是先循环后判断，所以循环体至少被执行一次\",\"score\":null},{\"prefix\":\"D\",\"content\":\"do...while看环是先循环后判断，所以循环体至少被执行一次\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 19:37:16');
INSERT INTO `t_text_content` VALUES (89, '{\"titleContent\":\"关于for循环和while循环的说法哪个正确？\",\"analyze\":\"while循环判断条件一般是程序结果，for循环的判断条件一般是非程序结果\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"while循环先判断后执行，for循环先执行后判断。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"方法中可以有多句return\",\"score\":null},{\"prefix\":\"C\",\"content\":\"两种循环任何时候都不可以替换\",\"score\":null},{\"prefix\":\"D\",\"content\":\"两种循环结构中都必须有循环体，循环体不能为空\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:39:17');
INSERT INTO `t_text_content` VALUES (90, '{\"titleContent\":\"return语句\",\"analyze\":\"方法中可以有多句return\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"只能让方法返回数值\",\"score\":null},{\"prefix\":\"B\",\"content\":\"方法中可以有多句return\",\"score\":null},{\"prefix\":\"C\",\"content\":\"方法都必须含有\",\"score\":null},{\"prefix\":\"D\",\"content\":\"不能用来返回对象\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:40:16');
INSERT INTO `t_text_content` VALUES (91, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">以下由for 语句构成的循环执行的次数是（）</p><p class=\\\"ueditor-p\\\">for ( int i = 0; true ; i++) ;</p>\",\"analyze\":\"for ( int i = 0; true ; i++)可以执行无数次\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"有语法错，不能执行\",\"score\":null},{\"prefix\":\"B\",\"content\":\"无限次\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p>执行1次</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"一次都不执行\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:41:59');
INSERT INTO `t_text_content` VALUES (92, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">下列语句序列执行后，i 的值是()</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">int s=1,i=1;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">while( i&lt;=4 ) {</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">s*=i;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">i++;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"analyze\":\"i的值为24\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"6\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p>4</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"24\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p>5</p>\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 19:43:16');
INSERT INTO `t_text_content` VALUES (93, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">以下由do-while语句构成的循环执行的次数是()</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">int m = 8;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">do {</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">++m;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">} while ( m &lt; 8 );</p>\",\"analyze\":\"语句执行一次\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"一次也不执行\",\"score\":null},{\"prefix\":\"B\",\"content\":\"执行1次\",\"score\":null},{\"prefix\":\"C\",\"content\":\"8次\",\"score\":null},{\"prefix\":\"D\",\"content\":\"有语法错，不能执行\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:44:48');
INSERT INTO `t_text_content` VALUES (94, '{\"titleContent\":\"以下switch表达语句正确的有\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"<p class=\\\"ueditor-p\\\">&nbsp;public void switchTest(char c){</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">switch(c){…}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">public void switchTest(long c){</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">switch(c){…}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">&nbsp;public void switchTest(byte c){</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">switch(c){…}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p class=\\\"ueditor-p\\\">&nbsp;public void switchTest(double c){</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">switch(c){…}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p>\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:46:04');
INSERT INTO `t_text_content` VALUES (95, '{\"titleContent\":\"以下选项中，switch语句判断条件可以接收的数据类型有哪些？\",\"analyze\":\"switch语句判断条件可以接收的数据类型有int、short、byte、chat等\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"int\",\"score\":null},{\"prefix\":\"B\",\"content\":\"short\",\"score\":null},{\"prefix\":\"C\",\"content\":\"byte\",\"score\":null},{\"prefix\":\"D\",\"content\":\"char\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:47:48');
INSERT INTO `t_text_content` VALUES (96, '{\"titleContent\":\"下列语句哪些属于循环语句？\",\"analyze\":\"for与while语句属于循环语句\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"for语句\",\"score\":null},{\"prefix\":\"B\",\"content\":\"while语句\",\"score\":null},{\"prefix\":\"C\",\"content\":\"if语句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"switch语句\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:49:20');
INSERT INTO `t_text_content` VALUES (97, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">在下面代码中x为何值时输出结果为&quot;out2&quot;？</p><p class=\\\"ueditor-p\\\">switch（x）{</p><p class=\\\"ueditor-p\\\">case 1：System.out.println（&quot;out1&quot;）；</p><p class=\\\"ueditor-p\\\">break；</p><p class=\\\"ueditor-p\\\">case 2：</p><p class=\\\"ueditor-p\\\">case 3：System.out.println（&quot;out2&quot;）；break；</p><p class=\\\"ueditor-p\\\">default:System.out.println（&quot;end&quot;）；</p><p class=\\\"ueditor-p\\\">}</p>\",\"analyze\":\"x为2、3时输出结果为&quot;out2&quot;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"default\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p>2</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"3\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:50:44');
INSERT INTO `t_text_content` VALUES (98, '{\"titleContent\":\"下面哪些语句能够正确地生成5个空字符串？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"<p class=\\\"ueditor-p\\\">String a[]=new string[5]；</p><p class=\\\"ueditor-p\\\">for(int i=0；i&lt;5；a[i++]=&quot;&quot;）；</p>\",\"score\":null},{\"prefix\":\"B\",\"content\":\"String a={&quot;&quot;，&quot;&quot;，&quot;&quot;，&quot;&quot;，&quot;&quot;}；\",\"score\":null},{\"prefix\":\"C\",\"content\":\"String a[5]\",\"score\":null},{\"prefix\":\"D\",\"content\":\"String[5]a\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:51:53');
INSERT INTO `t_text_content` VALUES (99, '{\"titleContent\":\"下列关于for循环和while循环的说法中哪些是错误的？\",\"analyze\":\"while循环能实现的操作，for循环也都能实现\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"while循环能实现的操作，for循环也都能实现\",\"score\":null},{\"prefix\":\"B\",\"content\":\"while循环判断条件一般是程序结果，fo循环判断条件一般是非程序结果\",\"score\":null},{\"prefix\":\"C\",\"content\":\"两种循环任何时候都可替换\",\"score\":null},{\"prefix\":\"D\",\"content\":\"两种循环结构中都必须有循环体，循环体不能为空\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:53:10');
INSERT INTO `t_text_content` VALUES (100, '{\"titleContent\":\"以下关于中断控制语句的描述，错误的是\",\"analyze\":\"continue停止继续执行下面的语句，直接跳回循环起始位置<br/>break用于强行退出循环，不执行循环中剩余的语句\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"break语句用于中断当前的程序块，如for循环块，if结构块等的执行\",\"score\":null},{\"prefix\":\"B\",\"content\":\"continue停止继续执行下面的语句，直接跳回循环起始位置\",\"score\":null},{\"prefix\":\"C\",\"content\":\"break用于强行退出循环，不执行循环中剩余的语句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"在一个函数中，不管有没有返回值，都需要return语句来推出函数\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:54:32');
INSERT INTO `t_text_content` VALUES (101, '{\"titleContent\":\"对关键词continue和break的理解是正确的是\",\"analyze\":\"执行到continue后，程序的控制流跳转到循环块的迭代部分继续判断<br/>执行break之后，程序的控制流跳转到循环块的之后的语句继续执行//例for循环后面的语句\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;执行到continue后，程序的控制流跳转到循环块的之后之后执行\",\"score\":null},{\"prefix\":\"B\",\"content\":\"执行到continue后，程序的控制流跳转到循环块的迭代部分继续判断\",\"score\":null},{\"prefix\":\"C\",\"content\":\"执行break之后，程序的控制流跳转到循环块的之后的语句继续执行//例for循环后面的语句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"执行break之后，程序的控制流程跳转到循环块的迭代部分继续判断\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:56:21');
INSERT INTO `t_text_content` VALUES (102, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">给出下列代码：</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">switch(x){</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">case 1:System.out.println(&quot;Test 1&quot;);break;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">case 2:</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">case 3:System.out.println(&quot;Test 2&quot;);break;</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">default:System.out.println(&quot;end&quot;);</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\"><br/></p><p class=\\\"ueditor-p\\\">x为什么值时，会输出Test 2 ？</p>\",\"analyze\":\"x为2、3时，会输出Test 2&nbsp;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"0\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"2\",\"score\":null},{\"prefix\":\"D\",\"content\":\"3\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 19:57:26');
INSERT INTO `t_text_content` VALUES (103, '{\"titleContent\":\"下面对方法的作用描述不正确的是\",\"analyze\":\"方法的优点：使程序结构清晰、功能复用、重复代码等\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"使程序结构清晰\",\"score\":null},{\"prefix\":\"B\",\"content\":\"功能复用\",\"score\":null},{\"prefix\":\"C\",\"content\":\"代码简洁\",\"score\":null},{\"prefix\":\"D\",\"content\":\"重复代码\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 19:59:17');
INSERT INTO `t_text_content` VALUES (104, '{\"titleContent\":\"方法的调用\",\"analyze\":\"方法的调用可能是语句，也可能是表达式\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"必须是一条完整的语句\",\"score\":null},{\"prefix\":\"B\",\"content\":\"只能是一个表达式\",\"score\":null},{\"prefix\":\"C\",\"content\":\"可能是语句，也可能是表达式\",\"score\":null},{\"prefix\":\"D\",\"content\":\"必须提供实际参数\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:00:52');
INSERT INTO `t_text_content` VALUES (105, '{\"titleContent\":\"在类的定义中可以有两个同名函数，这种现象称为函数的\",\"analyze\":\"在类的定义中可以有两个同名函数，这种现象称为函数的重载\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"封装\",\"score\":null},{\"prefix\":\"B\",\"content\":\"继承\",\"score\":null},{\"prefix\":\"C\",\"content\":\"覆盖\",\"score\":null},{\"prefix\":\"D\",\"content\":\"重载\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 20:02:26');
INSERT INTO `t_text_content` VALUES (106, '{\"titleContent\":\"在类的定义中构造函数的作用是\",\"analyze\":\"在类的定义中构造函数的作用是初始化成员变量\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"保护成员变量\",\"score\":null},{\"prefix\":\"B\",\"content\":\"读取类的成员变量\",\"score\":null},{\"prefix\":\"C\",\"content\":\"描述类的特征\",\"score\":null},{\"prefix\":\"D\",\"content\":\"初始化成员变量\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 20:03:37');
INSERT INTO `t_text_content` VALUES (107, '{\"titleContent\":\"类与对象的关系是\",\"analyze\":\"类是对象的抽象\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"类是对象的抽象\",\"score\":null},{\"prefix\":\"B\",\"content\":\"对象是类的抽象\",\"score\":null},{\"prefix\":\"C\",\"content\":\"对象是类的子类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"类是对象的具体实例\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 20:04:45');
INSERT INTO `t_text_content` VALUES (108, '{\"titleContent\":\"如果一个类的成员变量只能在所在类中使用，则该成员变量必须使用的修饰是\",\"analyze\":\"如果一个类的成员变量只能在所在类中使用，则该成员变量必须使用的修饰是private\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"public\",\"score\":null},{\"prefix\":\"B\",\"content\":\"protected\",\"score\":null},{\"prefix\":\"C\",\"content\":\"private\",\"score\":null},{\"prefix\":\"D\",\"content\":\"static\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:06:16');
INSERT INTO `t_text_content` VALUES (109, '{\"titleContent\":\"关于抽象方法的说法正确的是\",\"analyze\":\"抽象类中的方法都是抽象方法\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"可以有方法体\",\"score\":null},{\"prefix\":\"B\",\"content\":\"可以出现在非抽象类中\",\"score\":null},{\"prefix\":\"C\",\"content\":\"是没有方法体的方法\",\"score\":null},{\"prefix\":\"D\",\"content\":\"抽象类中的方法都是抽象方法\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 20:07:27');
INSERT INTO `t_text_content` VALUES (110, '{\"titleContent\":\"关于构造函数的说法哪个正确？\",\"analyze\":\"构造函数与类同名\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"一个类只能有一个构造函数\",\"score\":null},{\"prefix\":\"B\",\"content\":\"一个类可以有多个不同名的构造函数\",\"score\":null},{\"prefix\":\"C\",\"content\":\"构造函数与类同名\",\"score\":null},{\"prefix\":\"D\",\"content\":\"构造函数必须自己定义，不能使用父类的构造函数\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:10:10');
INSERT INTO `t_text_content` VALUES (111, '{\"titleContent\":\"在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数的个数、类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序特性称为（）\",\"analyze\":\"在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数的个数、类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序特性称为（重载）\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"隐藏\",\"score\":null},{\"prefix\":\"B\",\"content\":\"重写\",\"score\":null},{\"prefix\":\"C\",\"content\":\"重载\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java不支持此特性\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:11:37');
INSERT INTO `t_text_content` VALUES (112, '{\"titleContent\":\"下列类定义中哪些是合法的抽象类的定义？\",\"analyze\":\"abstract class Animal{abstract void growl（）；}是合法的抽象类的定义\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"abstract Animal{abstract void growl（）；}\",\"score\":null},{\"prefix\":\"B\",\"content\":\"class abstract Animal{abstract void growl（）；}\",\"score\":null},{\"prefix\":\"C\",\"content\":\"abstract class Animal{abstract void growl（）；}\",\"score\":null},{\"prefix\":\"D\",\"content\":\"abstract class Animal{abstract void growl（）{System.out.println(&quot;growl&quot;）;};}；\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:13:29');
INSERT INTO `t_text_content` VALUES (113, '{\"titleContent\":\"Java 中main（）函数的值是什么？\",\"analyze\":\"Java 中main（）函数的值是void\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int\",\"score\":null},{\"prefix\":\"C\",\"content\":\"char\",\"score\":null},{\"prefix\":\"D\",\"content\":\"void\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 20:15:59');
INSERT INTO `t_text_content` VALUES (114, '{\"titleContent\":\"为AB类的一个无形式参数无返回值的方法method书写方法头，使得使用类名AB作为前缀就可以调用它，该方法头的形式为（）.\",\"analyze\":\"<p>略</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"static void method（）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"public void method（）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"final void method（)\",\"score\":null},{\"prefix\":\"D\",\"content\":\"abstract void method（)\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 20:17:47');
INSERT INTO `t_text_content` VALUES (115, '{\"titleContent\":\"下面关于变量及其作用范围的陈述哪个是不对的？\",\"analyze\":\"实例变量是类的成员变量，在方法中定义的局部变量在该方法被执行时创建，局部变量在使用前必须被初始化\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"局部变量在使用前必须被初始化。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"实例变量用关键字static声明。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"在方法中定义的局部变量在该方法被执行时创建\",\"score\":null},{\"prefix\":\"D\",\"content\":\"实例变量是类的成员变量\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 20:24:06');
INSERT INTO `t_text_content` VALUES (116, '{\"titleContent\":\"下列关于构造方法的叙述中，错误的是\",\"analyze\":\"Java语言规定构造方法名与类名必须相同<br/>Java语言规定构造方法没有返回值，但不用void声明<br/>Java语言规定构造方法只能通过new自动调用\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java语言规定构造方法名与类名必须相同\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java语言规定构造方法没有返回值，但不用void声明\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java语言规定构造方法不可以重载\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java语言规定构造方法只能通过new自动调用\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:25:56');
INSERT INTO `t_text_content` VALUES (117, '{\"titleContent\":\"关于被私有访问控制符private修饰的成员变量，以下说法正确的是\",\"analyze\":\"被私有访问控制符private修饰的成员变量只能被该类自身所访问和修改\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"可以被三种类所引用：该类自身、与它在同一个包中的其他类、在其他包中的该类的子类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"可以被两种类访问和引用：该类本身、该类的所有子类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"只能被该类自身所访问和修改\",\"score\":null},{\"prefix\":\"D\",\"content\":\"只能被同一个包中的类访问\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 20:27:26');
INSERT INTO `t_text_content` VALUES (118, '{\"titleContent\":\"下列哪些类声明是错误的？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"class A\",\"score\":null},{\"prefix\":\"B\",\"content\":\"public class A\",\"score\":null},{\"prefix\":\"C\",\"content\":\"protected class A\",\"score\":null},{\"prefix\":\"D\",\"content\":\"private class A\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:28:42');
INSERT INTO `t_text_content` VALUES (119, '{\"titleContent\":\"下面哪些关键字能用来控制对类成员的访问\",\"analyze\":\"public、protected、private能用来控制对类成员的访问\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"public\",\"score\":null},{\"prefix\":\"B\",\"content\":\"protected\",\"score\":null},{\"prefix\":\"C\",\"content\":\"private\",\"score\":null},{\"prefix\":\"D\",\"content\":\"private\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:32:40');
INSERT INTO `t_text_content` VALUES (120, '{\"titleContent\":\"下面有关私有变量和私有方法的声明，哪些叙述是对的？\",\"analyze\":\"用关键字private修饰的成员变量和方法，称为私有变量和私有方法。<br/>私有变量不能通过对象直接访问，只有在本类中创建的自己对象，才能访问自己的私有变量。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"用关键字private修饰的成员变量和方法，称为私有变量和私有方法。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"用关键字protected修饰的成员变量和方法，称为私有变量和私有方法。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"用关键字public修饰的成员变量和方法，称为私有变量和私有方法。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"私有变量不能通过对象直接访问，只有在本类中创建的自己对象，才能访问自己的私有变量。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:34:22');
INSERT INTO `t_text_content` VALUES (121, '{\"titleContent\":\"下面有关变量及其作用域的陈述哪些是对的？\",\"analyze\":\"在方法里面定义的局部变量在方法退出的时候被撤销。<br/>局部变量只在定义它的方法内有效。<br/>在方法外面定义的变量（即实例变量）在对象被构造时创建。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"在方法里面定义的局部变量在方法退出的时候被撤销。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"局部变量只在定义它的方法内有效。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"在方法外面定义的变量（即实例变量）在对象被构造时创建。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"在方法中定义的方法的参变量只要该对象被需要就一直存在。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:36:17');
INSERT INTO `t_text_content` VALUES (122, '{\"titleContent\":\"下面哪几个函数是public void example(){...}的重载函数？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"public void example（int m）{...}\",\"score\":null},{\"prefix\":\"B\",\"content\":\"public int example（){...}\",\"score\":null},{\"prefix\":\"C\",\"content\":\"public void example2(）{...}\",\"score\":null},{\"prefix\":\"D\",\"content\":\"public int example（int m，float f）{...}\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:57:50');
INSERT INTO `t_text_content` VALUES (123, '{\"titleContent\":\"对于构造方法，下列叙述正确的是\",\"analyze\":\"构造方法的方法名必须与类名相同<br/>构造方法可以被程序调用\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"构造方法的方法名必须与类名相同\",\"score\":null},{\"prefix\":\"B\",\"content\":\"构造方法必须用void申明返回类型（没有返回类型）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"构造方法可以被程序调用\",\"score\":null},{\"prefix\":\"D\",\"content\":\"若编程人员没再类中定义构造方法，程序将报错。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 20:59:08');
INSERT INTO `t_text_content` VALUES (124, '{\"titleContent\":\"以下对默认构造说法正确的有\",\"analyze\":\"默认构造无参数、无返回类型\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"默认构造的返回类型是void\",\"score\":null},{\"prefix\":\"B\",\"content\":\"默认构造带有void类型的一个参数\",\"score\":null},{\"prefix\":\"C\",\"content\":\"默认构造无返回类型\",\"score\":null},{\"prefix\":\"D\",\"content\":\"默认构造无参数\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:00:43');
INSERT INTO `t_text_content` VALUES (125, '{\"titleContent\":\"欲构造Arraylist类的一个实例，此类继承了List接口，下列哪个方法是正确的\",\"analyze\":\"欲构造Arraylist类的一个实例，此类继承了List接口ArrayList myList=new List（）\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"ArrayList myList=new Object（）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"List myList=new ArrayList（）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ArrayList myList=new List（）\",\"score\":null},{\"prefix\":\"D\",\"content\":\"List myList=new List（）\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:02:40');
INSERT INTO `t_text_content` VALUES (126, '{\"titleContent\":\"关于继承的说法正确的是：\",\"analyze\":\"<p>继承子类将继承父类的非私有属性和方法。</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"子类将继承父类所有的属性和方法。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"子类将继承父类的非私有属性和方法。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"子类只继承父类public方法和属性\",\"score\":null},{\"prefix\":\"D\",\"content\":\"子类只继承父类的方法，而不继承属性\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:03:54');
INSERT INTO `t_text_content` VALUES (127, '{\"titleContent\":\"this和super：\",\"analyze\":\"this和super：不能用在main（）方法中\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"都可以用在main（）方法中\",\"score\":null},{\"prefix\":\"B\",\"content\":\"都是指一个内存地址\",\"score\":null},{\"prefix\":\"C\",\"content\":\"不能用在main（）方法中\",\"score\":null},{\"prefix\":\"D\",\"content\":\"意义相同\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:05:15');
INSERT INTO `t_text_content` VALUES (128, '{\"titleContent\":\"关于super的说法正确的是\",\"analyze\":\"super是指当前对象的父类\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"是指当前对象的内存地址\",\"score\":null},{\"prefix\":\"B\",\"content\":\"是指当前对象的父类对象的内存地址\",\"score\":null},{\"prefix\":\"C\",\"content\":\"是指当前对象的父类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"可以用在main（）方法中\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:06:34');
INSERT INTO `t_text_content` VALUES (129, '{\"titleContent\":\"在使用interface声明一个接口时，只可以使用()修饰将修饰该接口\",\"analyze\":\"在使用interface声明一个接口时，只可以使用(public)修饰将修饰该接口\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"private\",\"score\":null},{\"prefix\":\"B\",\"content\":\"protected\",\"score\":null},{\"prefix\":\"C\",\"content\":\"private protected\",\"score\":null},{\"prefix\":\"D\",\"content\":\"public\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 21:07:47');
INSERT INTO `t_text_content` VALUES (130, '{\"titleContent\":\"以下关于继承的叙述正确的是\",\"analyze\":\"在Java中类只允许单一继承\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"在Java中类只允许单一继承\",\"score\":null},{\"prefix\":\"B\",\"content\":\"在Java中一个类只能实现一个接口\",\"score\":null},{\"prefix\":\"C\",\"content\":\"在Java中一个类不能同时继承一个类和实现一个接口\",\"score\":null},{\"prefix\":\"D\",\"content\":\"在Java中接口只允许单一继承\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 21:09:02');
INSERT INTO `t_text_content` VALUES (131, '{\"titleContent\":\"以下哪个接口的定义是正确的？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"interface A{void print(）{}；}\",\"score\":null},{\"prefix\":\"B\",\"content\":\"abstract interface A{void print(）；}\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">abstract interface A extends 1I，12/11、12为已定义的接口</p><p class=\\\"ueditor-p\\\">{abstract void print(）{};}</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p class=\\\"ueditor-p\\\">interface A</p><p class=\\\"ueditor-p\\\">{void print（）；}</p>\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 21:10:06');
INSERT INTO `t_text_content` VALUES (132, '{\"titleContent\":\"继承是面向对象的一个重要特性，它可以\",\"analyze\":\"继承是面向对象的一个重要特性，它可以使代码重用，降低程序复杂性\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"优化程序的存储空间\",\"score\":null},{\"prefix\":\"B\",\"content\":\"使代码重用，降低程序复杂性\",\"score\":null},{\"prefix\":\"C\",\"content\":\"保证类和接口的安全\",\"score\":null},{\"prefix\":\"D\",\"content\":\"更容易地实例化类的对象\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:11:25');
INSERT INTO `t_text_content` VALUES (133, '{\"titleContent\":\"如何定义一个不能有子类的类Key\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"class Key{}\",\"score\":null},{\"prefix\":\"B\",\"content\":\"final class Key{}\",\"score\":null},{\"prefix\":\"C\",\"content\":\"public class Key{}\",\"score\":null},{\"prefix\":\"D\",\"content\":\"class Key{final int i;}\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:12:21');
INSERT INTO `t_text_content` VALUES (134, '{\"titleContent\":\"在子类构造方法的哪个地方可以调用超类的构造方法\",\"analyze\":\"在子类构造方法的第一条语句可以调用超类的构造方法\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"任何地方\",\"score\":null},{\"prefix\":\"B\",\"content\":\"构造方法的第一条语句\",\"score\":null},{\"prefix\":\"C\",\"content\":\"构造方法的最后一条语句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"不能在子类构造方法中调用超类的构造方法\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:13:50');
INSERT INTO `t_text_content` VALUES (135, '{\"titleContent\":\"在JAVA中（）。\",\"analyze\":\"在Java中一个子类只可以有一个父类，但一个父类可以有多个子类\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"一个子类可以有多个父类，一个父类也可以有多个子类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"一个子类可以有多个父类，但一个父类只可以有一个子类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"一个子类只可以有一个父类，但一个父类可以有多个子类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"上述说法都不对\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:15:01');
INSERT INTO `t_text_content` VALUES (136, '{\"titleContent\":\"哪个关键词在子类中用来访问与父类中一样的方法\",\"analyze\":\"super关键词在子类中用来访问与父类中一样的方法\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"super\",\"score\":null},{\"prefix\":\"B\",\"content\":\"this\",\"score\":null},{\"prefix\":\"C\",\"content\":\"static\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上没有\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 21:16:38');
INSERT INTO `t_text_content` VALUES (137, '{\"titleContent\":\"什么样的方法不能被重写（）。\",\"analyze\":\"最终方法（final方法）不能被重写\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"私有方法\",\"score\":null},{\"prefix\":\"B\",\"content\":\"最终方法（final方法）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"受保护的方法\",\"score\":null},{\"prefix\":\"D\",\"content\":\"都不对\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:17:56');
INSERT INTO `t_text_content` VALUES (138, '{\"titleContent\":\"如果一个成员变里声明时必须赋给初值，而且不能再发生变化，那么这个成员变里是（）。\",\"analyze\":\"如果一个成员变里声明时必须赋给初值，而且不能再发生变化，那么这个成员变里是最终变量（常量）。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"私有变量\",\"score\":null},{\"prefix\":\"B\",\"content\":\"最终变量\",\"score\":null},{\"prefix\":\"C\",\"content\":\"受保护的变量\",\"score\":null},{\"prefix\":\"D\",\"content\":\"都不对\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:19:43');
INSERT INTO `t_text_content` VALUES (139, '{\"titleContent\":\"以下描述正确的有\",\"analyze\":\"final class不能被继承&nbsp;<br/>final变量不能被修改<br/>final成员变量可以在构造方法中赋值<br/>final方法不能被覆盖(overriden)\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"final class不能被继承&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"final变量不能被修改\",\"score\":null},{\"prefix\":\"C\",\"content\":\"final成员变量可以在构造方法中赋值\",\"score\":null},{\"prefix\":\"D\",\"content\":\"final方法不能被覆盖(overriden)\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:21:48');
INSERT INTO `t_text_content` VALUES (140, '{\"titleContent\":\"&nbsp;以下描述正确的有\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"abstract class一定有abstract method(s)\",\"score\":null},{\"prefix\":\"B\",\"content\":\"abstract class可以没有abstract method(s)\",\"score\":null},{\"prefix\":\"C\",\"content\":\"定义abstract class的目的是为了被继承\",\"score\":null},{\"prefix\":\"D\",\"content\":\"interface中定义的方法全是abstract methods\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:23:24');
INSERT INTO `t_text_content` VALUES (141, '{\"titleContent\":\"关于super关键字以下说法哪些是正确的\",\"analyze\":\"super关键字可以调用父类的构造方法<br/>super关键字可以调用父类的普通方法<br/>super与this不能同时存在于同一个构造方法中\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"super关键字可以调用父类的构造方法\",\"score\":null},{\"prefix\":\"B\",\"content\":\"super关键字可以调用父类的普通方法\",\"score\":null},{\"prefix\":\"C\",\"content\":\"super与this不能同时存在于同一个构造方法中\",\"score\":null},{\"prefix\":\"D\",\"content\":\"super与this可以同时存在于同一个构造方法\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:24:43');
INSERT INTO `t_text_content` VALUES (142, '{\"titleContent\":\"以下说法哪些是正确的\",\"analyze\":\"Java语言中允许一个类实现多个接口<br/>Java语言中不允许一个类继承多个类<br/>Java语言中允许一个类同时继承一个类并实现一个接口<br/>Java语言中允许一个接口继承一个接口\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java语言中允许一个类实现多个接口\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java语言中不允许一个类继承多个类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java语言中允许一个类同时继承一个类并实现一个接口\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Java语言中允许一个接口继承一个接口\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:26:36');
INSERT INTO `t_text_content` VALUES (143, '{\"titleContent\":\"下面说法正确的是（）。\",\"analyze\":\"final可修饰类、属性（变量）、方法。<br/>abstract可修饰类、方法。<br/>抽象方法只有方法头，没有方法体。<br/>关键字final和abstract不能同时使用。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"final可修饰类、属性（变量）、方法。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"abstract可修饰类、方法。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"抽象方法只有方法头，没有方法体。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"关键字final和abstract不能同时使用。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:28:10');
INSERT INTO `t_text_content` VALUES (144, '{\"titleContent\":\"下面说法正确的是\",\"analyze\":\"如果某公共接口被声明在一个源文件中，则接口必须与源文件具有相同名字。<br/><p class=\\\"ueditor-p\\\">如果源文件包含import语句，则该语句必须是除空行和注释行外的第一个语句行。</p><p>如果某源文件包含package语句，则该语句必须是第一个非空、非注释行。<br/>接口中的方法必定是抽象方法，但可以不用关键字abstract修饰。</p><br/>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"如果某公共接口被声明在一个源文件中，则接口必须与源文件具有相同名字。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">如果源文件包含import语句，则该语句必须是除空行和注释行外的第一个语句行。</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"如果某源文件包含package语句，则该语句必须是第一个非空、非注释行。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"接口中的方法必定是抽象方法，但可以不用关键字abstract修饰。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:29:36');
INSERT INTO `t_text_content` VALUES (145, '{\"titleContent\":\"在Java中，关于final关键字的说法正确的是\",\"analyze\":\"如果修饰变量，则一旦赋了值，就等同一个常量。如果修饰方法，则该方法不能在子类中被覆盖。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"如果修饰变量，则一旦赋了值，就等同一个常量。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"如果修饰类，则该类只能被一个子类继承。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"如果修饰方法，则该方法不能在子类中被覆盖。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"如果修饰方法，则该方法所在的类不能被继承。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:30:47');
INSERT INTO `t_text_content` VALUES (146, '{\"titleContent\":\"下面关于继承的叙述哪些是正确的？\",\"analyze\":\"在java中只允许单一继承<br/>java的单一继承使代码更可靠。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"在java中只允许单一继承。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"在java中一个类不能同时继承一个类和实现一个接口。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"在java中一个类只能实现一个接口。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java的单一继承使代码更可靠。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:32:28');
INSERT INTO `t_text_content` VALUES (147, '{\"titleContent\":\"关于接口的定义和实现，以下描述正确的是\",\"analyze\":\"接口定义中的方法都只有定义没有实现<br/>接口定义中的成员变量变量只能是static 和final的\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"接口定义中的方法都只有定义没有实现\",\"score\":null},{\"prefix\":\"B\",\"content\":\"接口定义中的变量都必须写明final和static\",\"score\":null},{\"prefix\":\"C\",\"content\":\"如果一个接口由多个类来实现，则这些类在实现该接口中的方法时应采用统一的代码\",\"score\":null},{\"prefix\":\"D\",\"content\":\"接口定义中的成员变量变量只能是static 和final的\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:34:00');
INSERT INTO `t_text_content` VALUES (148, '{\"titleContent\":\"以下关于继承的叙述，正确的是？\",\"analyze\":\"继承使父类的代码得到了重用，提高了编程效率<br/>Java不支持多重继承\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"继承使父类的代码得到了重用，提高了编程效率\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Java不支持多重继承\",\"score\":null},{\"prefix\":\"C\",\"content\":\"子类可继承父类的所有成员变量和成员方法\",\"score\":null},{\"prefix\":\"D\",\"content\":\"子类不能覆盖父类的成员方法\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 21:35:01');
INSERT INTO `t_text_content` VALUES (149, '{\"titleContent\":\"下列哪个叙述是正确的？\",\"analyze\":\"String类是final类，不可以有子类。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"String类是final类，不可以有子类。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"String类在java.util包中。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&quot;abc&quot;==&quot;abc&quot;的值是false\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&quot;abc&quot;.equals(&quot;ABC&quot;)的值是true\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 21:36:14');
INSERT INTO `t_text_content` VALUES (150, '{\"titleContent\":\"&nbsp;下列哪个表达式是正确的（无编译错误）？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"int m=Float.parseFloat(&quot;567&quot;);\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int m=Short.parseShort(&quot;567&quot;);\",\"score\":null},{\"prefix\":\"C\",\"content\":\"byte m=Integer.parseInt(&quot;2&quot;);\",\"score\":null},{\"prefix\":\"D\",\"content\":\"float m=Float.parseDouble(&quot;2.9&quot;);\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:37:17');
INSERT INTO `t_text_content` VALUES (151, '{\"titleContent\":\"下列哪个叙述是错误的？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&quot;9dog&quot;.matches(&quot;\\\\\\\\ddog&quot;)的值是true\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&quot;12hello567&quot;.repaceAll(&quot;[123456789]+&quot;,&quot;@&quot;)返回的字符串是@hello@.\",\"score\":null},{\"prefix\":\"C\",\"content\":\"new Date(1000)对象含有的时间是公元后1000小时的时间。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&quot;\\\\\\\\hello\\\\n&quot;是正确的字符串常量\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:38:24');
INSERT INTO `t_text_content` VALUES (152, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">对于如下代码，下列哪个叙述是正确的？</p><p class=\\\"ueditor-p\\\">public class E{</p><p class=\\\"ueditor-p\\\">public static void main(String[] args){</p><p class=\\\"ueditor-p\\\">String strOne=&quot;bird&quot;;String strTwo=strOne;strOne=&quot;fly&quot;;System.out.println(strTwo);</p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\">}</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"程序编译出现错误\",\"score\":null},{\"prefix\":\"B\",\"content\":\"程序标注【代码】的输出结果是bird。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"程序标注的【代码】的输出结果是fly。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"程序标注的【代码】的输出结果是null。\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:39:33');
INSERT INTO `t_text_content` VALUES (153, '{\"titleContent\":\"下列String类的（）方法返回指定字符串的一部分\",\"analyze\":\"String类的substring（）方法返回指定字符串的一部分\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"extractstring（）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"substring（）\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Substring （）\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Middlestring（）\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:40:49');
INSERT INTO `t_text_content` VALUES (154, '{\"titleContent\":\"下列哪一个是正确的\",\"analyze\":\"HashTable的关键字和值都允许为null\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"HashTable的关键字和值都允许为null\",\"score\":null},{\"prefix\":\"B\",\"content\":\"HashTable的关键字和值都不允许为null\",\"score\":null},{\"prefix\":\"C\",\"content\":\"HashTable的关键字允许为null，值不允许为null\",\"score\":null},{\"prefix\":\"D\",\"content\":\"HashTable的关键字不允许为null，值允许为null\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 21:41:51');
INSERT INTO `t_text_content` VALUES (155, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">对于下列代码：</p><p class=\\\"ueditor-p\\\">String str1=&quot;java&quot;；</p><p class=\\\"ueditor-p\\\">String str2=&quot;java&quot;；</p><p class=\\\"ueditor-p\\\">String str3=new String（&quot;java&quot;）；</p><p class=\\\"ueditor-p\\\">StringBuffer str4=new StringBuffer（&quot;java&quot;）；</p><p class=\\\"ueditor-p\\\">以下表达式的值为true的是()</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"str1= =str2；\",\"score\":null},{\"prefix\":\"B\",\"content\":\"str2= =str3；\",\"score\":null},{\"prefix\":\"C\",\"content\":\"str1= =str4；\",\"score\":null},{\"prefix\":\"D\",\"content\":\"str3= =str4；\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:43:00');
INSERT INTO `t_text_content` VALUES (156, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">以下程序段输出结果的是()</p><p class=\\\"ueditor-p\\\">public class Test{</p><p class=\\\"ueditor-p\\\">public static void main（String args[]）{</p><p class=\\\"ueditor-p\\\">String str=&quot;ABCDE&quot;</p><p class=\\\"ueditor-p\\\">str.substring（3）；</p><p class=\\\"ueditor-p\\\">str.concat（&quot;XYZ&quot;）；</p><p class=\\\"ueditor-p\\\">System.out.print（str）；}}</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"DE\",\"score\":null},{\"prefix\":\"B\",\"content\":\"DEXYZ\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ABCDE&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"CDEXYZ\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:44:01');
INSERT INTO `t_text_content` VALUES (157, '{\"titleContent\":\"Java编程所必须的默认引用包为\",\"analyze\":\"Java编程所必须的默认引用包为java.lang包\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.sys包\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.lang包\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.new包\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上都不是\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:45:07');
INSERT INTO `t_text_content` VALUES (158, '{\"titleContent\":\"对于import java.util包，以下那种说法是错误的？\",\"analyze\":\"Vector类属于java.util包<br/>Vector类放在…／java/util/目录下<br/>Vector类是Sun公司的产品\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Vector类属于java.util包\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Vector类放在…／java/util/目录下\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Vector类放在java.util文件中\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Vector类是Sun公司的产品\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 21:46:42');
INSERT INTO `t_text_content` VALUES (159, '{\"titleContent\":\"在java中，字符串由java.lang.String和（）定义\",\"analyze\":\"在java中，字符串由java.lang.String和（java.lang.StringBuffer）定义\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.lang.StringChar\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.lang.StringBuffer\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.io.StringChar\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.io.StringBuffer\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:48:00');
INSERT INTO `t_text_content` VALUES (160, '{\"titleContent\":\"&nbsp;在Java中,JDBCAPI定义了一组用于与数据库进行通信的接口和类，它们包括在（）包中。\",\"analyze\":\"&nbsp;在Java中,JDBCAPI定义了一组用于与数据库进行通信的接口和类，它们包括在（java.sql）包中。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.lang\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.sql\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.util\",\"score\":null},{\"prefix\":\"D\",\"content\":\"&nbsp;java.math\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:49:05');
INSERT INTO `t_text_content` VALUES (161, '{\"titleContent\":\"Java中，以下(&nbsp; )接口以键_值对的方式存储对象。\",\"analyze\":\"Java中，以下(&nbsp; java.util.Map)接口以键_值对的方式存储对象。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.util.Collection\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.util.Map\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.util.List\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.util.Set\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 21:50:16');
INSERT INTO `t_text_content` VALUES (162, '{\"titleContent\":\"下列不属于Swing中组件的是\",\"analyze\":\"Swing中组件有JPanel、JTable、JFrame等\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"JPanel\",\"score\":null},{\"prefix\":\"B\",\"content\":\"JTable\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Menu\",\"score\":null},{\"prefix\":\"D\",\"content\":\"JFrame\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:03:18');
INSERT INTO `t_text_content` VALUES (163, '{\"titleContent\":\"以下Swing组件中哪一个不是顶层容器组件\",\"analyze\":\"Swing组件中框架不是顶层容器组件\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"框架\",\"score\":null},{\"prefix\":\"B\",\"content\":\"对话框\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p>面板</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"小程序\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:04:33');
INSERT INTO `t_text_content` VALUES (164, '{\"titleContent\":\"对于Swing基本控件单选框，若要使两个单选框对象之间具有相互排斥的关系，需要（）\",\"analyze\":\"对于Swing基本控件单选框，若要使两个单选框对象之间具有相互排斥的关系，需要定义一个ButtonGroup对象group，将两个单选框对象加到group中\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"创建两个单选框对象时定义相同的对象名\",\"score\":null},{\"prefix\":\"B\",\"content\":\"将两个单选框对象放在同一个面板上\",\"score\":null},{\"prefix\":\"C\",\"content\":\"定义一个ButtonGroup对象group，将两个单选框对象加到group中\",\"score\":null},{\"prefix\":\"D\",\"content\":\"让两个单选框排成一行或一列\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:06:10');
INSERT INTO `t_text_content` VALUES (165, '{\"titleContent\":\"下列哪个类创建的对象可以触发ActionEvent事件\",\"analyze\":\"java.awt.Button类创建的对象可以触发ActionEvent事件\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.awt.Button类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.lang包的子类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"va.util.Date类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.lang.StringBuffer类\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:07:29');
INSERT INTO `t_text_content` VALUES (166, '{\"titleContent\":\"下列叙述中哪个是正确的？\",\"analyze\":\"<p class=\\\"ueditor-p\\\">java.awt.event.MouseAdapter类实现了MouseListener接口</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"不是任何组件都可以触发MouseEvent事件\",\"score\":null},{\"prefix\":\"B\",\"content\":\"处理WindowEvent事件的接口是FocusListener\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.awt.event.MouseAdapter类实现了MouseListener接口\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.awt.event.WindowAdapter是一个接口\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:08:44');
INSERT INTO `t_text_content` VALUES (167, '{\"titleContent\":\"在基于Swing的图形用户界面设计中，面板属于\",\"analyze\":\"在基于Swing的图形用户界面设计中，面板属于中间级容器\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"顶层容器\",\"score\":null},{\"prefix\":\"B\",\"content\":\"中间级容器\",\"score\":null},{\"prefix\":\"C\",\"content\":\"窗格\",\"score\":null},{\"prefix\":\"D\",\"content\":\"原子组件\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 22:09:51');
INSERT INTO `t_text_content` VALUES (168, '{\"titleContent\":\"监听事件和处理事件\",\"analyze\":\"监听事件和处理事件都由相应事件Listener处登记过的构件完成\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"都由Listener完成\",\"score\":null},{\"prefix\":\"B\",\"content\":\"都由相应事件Listener处登记过的构件完成\",\"score\":null},{\"prefix\":\"C\",\"content\":\"由Listener和构件分别完成\",\"score\":null},{\"prefix\":\"D\",\"content\":\"由Listener和窗体分别完成\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 22:10:54');
INSERT INTO `t_text_content` VALUES (169, '{\"titleContent\":\"在Swing中，一下列出的面板的作用中，错误的是\",\"analyze\":\"在Swing中，面板的作用放置并排列组件、显示背景图案、显示面板的边框\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"放置并排列组件\",\"score\":null},{\"prefix\":\"B\",\"content\":\"显示背景图案\",\"score\":null},{\"prefix\":\"C\",\"content\":\"接收事件\",\"score\":null},{\"prefix\":\"D\",\"content\":\"显示面板的边框\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:12:35');
INSERT INTO `t_text_content` VALUES (170, '{\"titleContent\":\"如果容器组件p的布局是Borderlayout，则在p的下边中添加一个按钮b，应该使用的语句是\",\"analyze\":\"如果容器组件p的布局是Borderlayout，则在p的下边中添加一个按钮b，应该使用的语句是p.add（b，&quot;South&quot;）；\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"p.add（b）；\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p>p.add（b，&quot;NORth&quot;）；</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"p.add（b，&quot;South&quot;）；\",\"score\":null},{\"prefix\":\"D\",\"content\":\"b.add（p，&quot;North&quot;）；\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:14:02');
INSERT INTO `t_text_content` VALUES (171, '{\"titleContent\":\"哪一个布局管理器使用的是组件的最佳尺寸？（）\",\"analyze\":\"FlowLayout使用的是组件的最佳尺寸\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FlowLayout\",\"score\":null},{\"prefix\":\"B\",\"content\":\"BorderLayout\",\"score\":null},{\"prefix\":\"C\",\"content\":\"GridLayout\",\"score\":null},{\"prefix\":\"D\",\"content\":\"CardLayout\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:15:25');
INSERT INTO `t_text_content` VALUES (172, '{\"titleContent\":\"列关于菜单和对话框的描述中，错误的是\",\"analyze\":\"<p class=\\\"ueditor-p\\\">对话框内不可以含有菜单条</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"JFrame容器是可以容纳菜单组件的容器\",\"score\":null},{\"prefix\":\"B\",\"content\":\"菜单条中可包含若干个菜单，菜单中又可包含若干菜单项，菜单项中还可包含菜单子项\",\"score\":null},{\"prefix\":\"C\",\"content\":\"对话框内不可以含有菜单条\",\"score\":null},{\"prefix\":\"D\",\"content\":\"对话框与JFrame一样都可作为程序的底层容器\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:16:32');
INSERT INTO `t_text_content` VALUES (173, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">在对下列语句的解释中，错误的是（)</p><p class=\\\"ueditor-p\\\">but.addActionListener（this）；</p>\",\"analyze\":\"ActionListener是动作事件的监听者\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"but是某种事件对象，如按钮事件对象\",\"score\":null},{\"prefix\":\"B\",\"content\":\"this表示当前容器\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ActionListener是动作事件的监听者\",\"score\":null},{\"prefix\":\"D\",\"content\":\"该语句的功能是将but对象注册为this对象的监听者\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:17:38');
INSERT INTO `t_text_content` VALUES (174, '{\"titleContent\":\"下列关于组件类的描述中，错误的是\",\"analyze\":\"组件类中包含了文本组件类（TextComponent）和菜单组件类（MenuComponent）\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"组件类中包含了文本组件类（TextComponent）和菜单组件类（MenuComponent）\",\"score\":null},{\"prefix\":\"B\",\"content\":\"标签（JLabel）和按钮（JButton）是组件类（Component）的子类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"面板（JPanel）和窗口（Window）是容器类（Container）的子类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"文本框（JTextrield）和文本区（JTextArea）是文本组件类（JTextComponent）的子类\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:18:37');
INSERT INTO `t_text_content` VALUES (175, '{\"titleContent\":\"下列各种布局管理器中Window类、JDialog类和JFrame类的默认布局是\",\"analyze\":\"Window类、JDialog类和JFrame类的默认布局是Borderlayout&nbsp;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FlowLayout\",\"score\":null},{\"prefix\":\"B\",\"content\":\"CardLayout\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Borderlayout&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"GridLayout\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:19:46');
INSERT INTO `t_text_content` VALUES (176, '{\"titleContent\":\"能将容器划分为&quot;East&quot;、&quot;South&quot;、&quot;West&quot;、&quot;North&quot;、&quot;Center&quot;五个区域的布局管理器是\",\"analyze\":\"能将容器划分为&quot;East&quot;、&quot;South&quot;、&quot;West&quot;、&quot;North&quot;、&quot;Center&quot;五个区域的布局管理器是BorderLayout\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"BorderLayout\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FlowLayout\",\"score\":null},{\"prefix\":\"C\",\"content\":\"GridLayout\",\"score\":null},{\"prefix\":\"D\",\"content\":\"CardLayout\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:20:54');
INSERT INTO `t_text_content` VALUES (177, '{\"titleContent\":\"如果有一个对象myListener（其中myListener对象实现了ActionListener接口），下列哪条语句使得myListener对象能够接受处理来自于smallButton按钮对象的动作事件？\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"smallButton.add（myListener）；\",\"score\":null},{\"prefix\":\"B\",\"content\":\"smallButton.addListener（myListener）;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"smallButton.addActionListener（myListener）;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"smallButton. addItem(myListener);\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:21:55');
INSERT INTO `t_text_content` VALUES (178, '{\"titleContent\":\"下面关于布局管理器说法正确的是\",\"analyze\":\"布局管理器用来管理组件放置在容器中的位置和大小。<br/>每个容器都有一个布局管理器。<br/>使用布局管理器可以使JAVA生成的图形用户界面具有平台无关性。<br/>布局管理器LayoutManager本身是一个接口，通常使用的是实现了该接口的类。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"布局管理器用来管理组件放置在容器中的位置和大小。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">每个容器都有一个布局管理器。</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">使用布局管理器可以使JAVA生成的图形用户界面具有平台无关性。</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"布局管理器LayoutManager本身是一个接口，通常使用的是实现了该接口的类。\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:23:13');
INSERT INTO `t_text_content` VALUES (179, '{\"titleContent\":\"对于布局管理器解释正确的有\",\"analyze\":\"FlowLayout以由上到下的方式从左到右排列组件<br/>BorderLayout使用”东”、”西”、&quot;南&quot;、”北”，”居中”来指定组件的位置\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FlowLayout以由上到下的方式从左到右排列组件\",\"score\":null},{\"prefix\":\"B\",\"content\":\"BorderLayout使用”东”、”西”、&quot;南&quot;、”北”，”居中”来指定组件的位置\",\"score\":null},{\"prefix\":\"C\",\"content\":\"GridLayout提供了类似于选项卡式的对话框的功能\",\"score\":null},{\"prefix\":\"D\",\"content\":\"CardLayout是最灵活的布局方案参考答案&nbsp;\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:24:18');
INSERT INTO `t_text_content` VALUES (180, '{\"titleContent\":\"下面哪些说法是正确的\",\"analyze\":\"一个控件上可以注册多个监听器<br/>可以从控件上删除事件监听器\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"一个控件上可以注册多个监听器\",\"score\":null},{\"prefix\":\"B\",\"content\":\"一个监听器只能注册到一个控件\",\"score\":null},{\"prefix\":\"C\",\"content\":\"一个类只能实现一个监听器接口\",\"score\":null},{\"prefix\":\"D\",\"content\":\"可以从控件上删除事件监听器\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:25:20');
INSERT INTO `t_text_content` VALUES (181, '{\"titleContent\":\"边界型布局的区域包括几个区？\",\"analyze\":\"边界型布局的区域包括北区，南区，或者称为页首，页尾、中间区\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"菜单区、工具栏区、内容区、状态栏区\",\"score\":null},{\"prefix\":\"B\",\"content\":\"内容区、工具栏区\",\"score\":null},{\"prefix\":\"C\",\"content\":\"北区，南区，或者称为页首，页尾\",\"score\":null},{\"prefix\":\"D\",\"content\":\"中间区\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:26:34');
INSERT INTO `t_text_content` VALUES (182, '{\"titleContent\":\"关于布局管理器，以下说法正确的是？\",\"analyze\":\"Frame默认布局管理器是BorderLayout<br/>Panel默认布局管理器是Flowlayout<br/>Applet默认布局管理器是Flowlayout<br/><br/>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Frame默认布局管理器是BorderLayout\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Panel默认布局管理器是Flowlayout\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Applet默认布局管理器是Flowlayout\",\"score\":null},{\"prefix\":\"D\",\"content\":\"CardLayout会将容器分割成等宽等高的矩形区域\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:27:47');
INSERT INTO `t_text_content` VALUES (183, '{\"titleContent\":\"以下哪几个布局管理器使用的是组件的最佳尺寸？\",\"analyze\":\"&nbsp;FlowLayout、GridBagLayout使用的是组件的最佳尺寸\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;FlowLayout\",\"score\":null},{\"prefix\":\"B\",\"content\":\"BorderLayout\",\"score\":null},{\"prefix\":\"C\",\"content\":\"GridLayout\",\"score\":null},{\"prefix\":\"D\",\"content\":\"GridBagLayout\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:29:09');
INSERT INTO `t_text_content` VALUES (184, '{\"titleContent\":\"以下选项属于容器的有哪些？\",\"analyze\":\"Button不属于容器\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Applet\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Frame\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Panel\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Button\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:30:31');
INSERT INTO `t_text_content` VALUES (185, '{\"titleContent\":\"下列不属于容器的是\",\"analyze\":\"JTextBox属于容器\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"JFrame&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"JTextBox\",\"score\":null},{\"prefix\":\"C\",\"content\":\"JPanel\",\"score\":null},{\"prefix\":\"D\",\"content\":\"JScrollPane\",\"score\":null}],\"correct\":\"D\"}', '2020-03-03 22:31:48');
INSERT INTO `t_text_content` VALUES (186, '{\"titleContent\":\"关于AWT和Swing说法不正确的是\",\"analyze\":\"Swing在不同的操作系统中显示相同的风格\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Swing是AWT的子类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"AWT在不同操作系统中显示相同的风格\",\"score\":null},{\"prefix\":\"C\",\"content\":\"AWT不支持事件模型&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"Swing在不同的操作系统中显示相同的风格\",\"score\":null}],\"correct\":\"\"}', '2020-03-03 22:32:56');
INSERT INTO `t_text_content` VALUES (187, '{\"titleContent\":\"下面关键字中，哪一个不是用于异常处理语句\",\"analyze\":\"break不是用于异常处理语句\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"try\",\"score\":null},{\"prefix\":\"B\",\"content\":\"break\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">catch</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"finally\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 22:34:35');
INSERT INTO `t_text_content` VALUES (188, '{\"titleContent\":\"请问所有的异常类皆继承哪一个类？\",\"analyze\":\"所有的异常类皆继承java.lang.Throwable\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.io.Exception\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.lang.Throwable\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.lang.Exception\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.lang.Error\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 22:35:57');
INSERT INTO `t_text_content` VALUES (189, '{\"titleContent\":\"如要抛出异常，应用下列哪种子句？\",\"analyze\":\"抛出异常用throws&nbsp;\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"catch\",\"score\":null},{\"prefix\":\"B\",\"content\":\"throws&nbsp;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"try\",\"score\":null},{\"prefix\":\"D\",\"content\":\"finally\",\"score\":null}],\"correct\":\"B\"}', '2020-03-03 22:37:13');
INSERT INTO `t_text_content` VALUES (190, '{\"titleContent\":\"异常包含下列哪些内容？\",\"analyze\":\"异常包括程序执行过程中遇到的事先没有预料到的情况\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"程序执行过程中遇到的事先没有预料到的情况\",\"score\":null},{\"prefix\":\"B\",\"content\":\"程序中的语法错误\",\"score\":null},{\"prefix\":\"C\",\"content\":\"程序的编译错误\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上都是\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:38:35');
INSERT INTO `t_text_content` VALUES (191, '{\"titleContent\":\"对于已经被定义过可能抛出异常的语句，在编程时\",\"analyze\":\"对于已经被定义过可能抛出异常的语句，在编程时必须使用try/catch语句处理异常，或用throws将其抛出\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"必须使用try/catch语句处理异常，或用throws将其抛出\",\"score\":null},{\"prefix\":\"B\",\"content\":\"如果程序错误，必须使用try/catch语句处理异常\",\"score\":null},{\"prefix\":\"C\",\"content\":\"可以置之不理\",\"score\":null},{\"prefix\":\"D\",\"content\":\"只能使用try/catch语句处理\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:39:43');
INSERT INTO `t_text_content` VALUES (192, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">有关下列异常处理机制叙述正确的是（）。</p><p class=\\\"ueditor-p\\\">try{</p><p class=\\\"ueditor-p\\\">可能产生异常的语句块；</p><p class=\\\"ueditor-p\\\">}catch（exceptiontypel e）{</p><p class=\\\"ueditor-p\\\">处理异常e的语句块：</p><p class=\\\"ueditor-p\\\">}catch（exceptiontype2 e）{</p><p class=\\\"ueditor-p\\\">处理异常e的语句块；finally{最终处理语句块；}</p>\",\"analyze\":\"如果try子句没有抛出任何异常，则跳过catch子句，转移到finally子句继续执行。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"try子句可能有多个，catch子句可能有多个，finally子句必须有。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"多个catch参数中的异常类可以有父子关系，但父类异常的catch子句应该在子类异常的catch子句前面。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"如果try子句没有抛出任何异常，则跳过catch子句，转移到finally子句继续执行。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"当try子句监视的语句块抛出异常时，运行时系统会根据catch子句的顺序，从第一个开始，逐个查找能够捕获该异常的catch子句并执行catch子句内的语句块以完成对异常的处理，然后继续执行后面的catch子句，最后转移到finally子句，执行该子句中的语句块。\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:41:32');
INSERT INTO `t_text_content` VALUES (193, '{\"titleContent\":\"有关throw和throws的说法中不正确的是\",\"analyze\":\"throws只能声明要产生的自定义异常，也就是后面只能加自定义异常类是错的\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"throw的作用是抛出异常，后面加的是异常类的对象。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"throws的作用是向外抛出异常即声明要产生的若干异常，后面加的是异常类的类名。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"throws只能声明要产生的自定义异常，也就是后面只能加自定义异常类。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上都不对。\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:42:42');
INSERT INTO `t_text_content` VALUES (194, '{\"titleContent\":\"关于异常，下列说法正确的是\",\"analyze\":\"异常是一种对象\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"异常是一种对象\",\"score\":null},{\"prefix\":\"B\",\"content\":\"一旦程序运，异常将被创建\",\"score\":null},{\"prefix\":\"C\",\"content\":\"为了保证程序运行速度，要尽量避免异常控制\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上说法都不对\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:43:51');
INSERT INTO `t_text_content` VALUES (195, '{\"titleContent\":\"java语言中，下列哪一子句是异常处理的出口\",\"analyze\":\"java语言中，finaly{...}子句是异常处理的出口\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"catch{...}子句\",\"score\":null},{\"prefix\":\"B\",\"content\":\"try{...}子句\",\"score\":null},{\"prefix\":\"C\",\"content\":\"finaly{...}子句\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上说法都不对\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:44:56');
INSERT INTO `t_text_content` VALUES (196, '{\"titleContent\":\"当方法遇到异常又不知如何处理时，下列哪种说法是正确的\",\"analyze\":\"当方法遇到异常又不知如何处理时，嵌套异常\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"<p>捕获异常</p>\",\"score\":null},{\"prefix\":\"B\",\"content\":\"抛出异常\",\"score\":null},{\"prefix\":\"C\",\"content\":\"嵌套异常\",\"score\":null},{\"prefix\":\"D\",\"content\":\"处理异常\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:46:44');
INSERT INTO `t_text_content` VALUES (197, '{\"titleContent\":\"一个异常将终止\",\"analyze\":\"一个异常将终止整个程序\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"整个程序\",\"score\":null},{\"prefix\":\"B\",\"content\":\"另终止抛出异常的方法\",\"score\":null},{\"prefix\":\"C\",\"content\":\"产生异常的try块\",\"score\":null},{\"prefix\":\"D\",\"content\":\"以上说的都不对\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:48:09');
INSERT INTO `t_text_content` VALUES (198, '{\"titleContent\":\"请问所有的异常类皆继承哪一个类？\",\"analyze\":\"所有的异常都继承于java.lang.Throwable\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.lang.Throwable\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.lang.Exception\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.lang.Error\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.io.Exception\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:49:34');
INSERT INTO `t_text_content` VALUES (199, '{\"titleContent\":\"自定义异常时，可以通过对下列哪一项进行继承？\",\"analyze\":\"自定义异常时，可以通过对Exception类及其子类进行继承\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Error类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Applet类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Exception类及其子类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"AssertionError类\",\"score\":null}],\"correct\":\"C\"}', '2020-03-03 22:50:56');
INSERT INTO `t_text_content` VALUES (200, '{\"titleContent\":\"对于已经被定义过可能抛出异常的语句，在编程时\",\"analyze\":\"对于已经被定义过可能抛出异常的语句，在编程时必须使用try/catch语句处理异常，或用throw将其抛出。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"必须使用try/catch语句处理异常，或用throw将其抛出。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"如果程序错误，必须使用try/catch语句处理异常。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"可以置之不理。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"只能使用try/catch语句处理。\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:51:58');
INSERT INTO `t_text_content` VALUES (201, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">运行下面程序时，会产生什么异常？（）</p><p class=\\\"ueditor-p\\\">public class X71_41</p><p class=\\\"ueditor-p\\\">public static void main（String0 args）{</p><p class=\\\"ueditor-p\\\">int x = 0；int y = 5/x；int[]z={1，2，3，4}；int p = z[4]；}}</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"ArithmeticException\",\"score\":null},{\"prefix\":\"B\",\"content\":\"NumberFormatException\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ArraylndexOutOfBoundsException&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"IOException\",\"score\":null}],\"correct\":\"A\"}', '2020-03-03 22:53:07');
INSERT INTO `t_text_content` VALUES (202, '{\"titleContent\":\"下面关于Java中异常处理try块的说法正确的是\",\"analyze\":\"try块后通常应有一个catch块，用来处理try块中抛出的异常。可能抛出异常的方法调用应放在try决中。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"try块后通常应有一个catch块，用来处理try块中抛出的异常。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"catch块后必须有finally块。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"可能抛出异常的方法调用应放在try决中。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"对抛出的异常的处理必须放在try块中\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:14:43');
INSERT INTO `t_text_content` VALUES (203, '{\"titleContent\":\"下面选项中属于运行时异常的是\",\"analyze\":\"NullPointerException和InputMismatchException、ArithmeticException和ArrayIndexOutOfBoundsException都属于运行时异常\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Exception和SexException\",\"score\":null},{\"prefix\":\"B\",\"content\":\"NullPointerException和InputMismatchException\",\"score\":null},{\"prefix\":\"C\",\"content\":\"运行时异常\",\"score\":null},{\"prefix\":\"D\",\"content\":\"ClassNotFoundException和ClassCastException\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:16:14');
INSERT INTO `t_text_content` VALUES (204, '{\"titleContent\":\"下面哪几项在编译时候，会出现错误提示？\",\"analyze\":\"int a=（int）&#39;我&#39;；编译时不会出现错误提示\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"int a=Integer.parselnt（abc789）；\",\"score\":null},{\"prefix\":\"B\",\"content\":\"int a=（int）&#39;我&#39;；\",\"score\":null},{\"prefix\":\"C\",\"content\":\"int a=int（&#39;我&#39;）；\",\"score\":null},{\"prefix\":\"D\",\"content\":\"int a=Integer.parselnt（&#39;a&#39;）；\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:17:47');
INSERT INTO `t_text_content` VALUES (205, '{\"titleContent\":\"关于异常（Exception），下列描述正确的是\",\"analyze\":\"异常不可以随便处理\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"异常的基类为Exception，所有异常都必须直接或者间接继承它\",\"score\":null},{\"prefix\":\"B\",\"content\":\"异常可以用try{...}catch（Exception e）{...}来捕获并进行处理\",\"score\":null},{\"prefix\":\"C\",\"content\":\"如果某异常继承RuntimeException，则该异常可以不被声明\",\"score\":null},{\"prefix\":\"D\",\"content\":\"异常可以随便处理，而不是抛给层的程序进行处理解答\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:19:24');
INSERT INTO `t_text_content` VALUES (206, '{\"titleContent\":\"根据下面的代码，String s= null；会抛出Nul1PointerException异常的有\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"if（（s！=nul1）&amp;（s.length（）&gt;0））\",\"score\":null},{\"prefix\":\"B\",\"content\":\"if（（s!=null）&amp;&amp;（s.length()&gt;0））\",\"score\":null},{\"prefix\":\"C\",\"content\":\"if（（s==null）|（s.length（）==0））\",\"score\":null},{\"prefix\":\"D\",\"content\":\"if（（s==null）||（s.length（）==0））\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:20:25');
INSERT INTO `t_text_content` VALUES (207, '{\"titleContent\":\"以下描述正确的有\",\"analyze\":\"catch块和finally块不可以同时省略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"try块不可以省略\",\"score\":null},{\"prefix\":\"B\",\"content\":\"可以使用多重catch块\",\"score\":null},{\"prefix\":\"C\",\"content\":\"finally块可以省略\",\"score\":null},{\"prefix\":\"D\",\"content\":\"catch块和finally块可以同时省略\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:21:29');
INSERT INTO `t_text_content` VALUES (208, '{\"titleContent\":\"在 Java的异常处理语句try-catch-final 中，以下描述不正确的是\",\"analyze\":\"try后面是可能产生异常的代码，catch后面是捕获到某种异常对象时进行处理的代码，final后面是无论是否捕获到异常都必须执行的代码\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;try后面是可能产生异常的代码，catch后面是捕获到某种异常对象时进行处理的代码，final后面是没有捕获到异常时要执行的代码\",\"score\":null},{\"prefix\":\"B\",\"content\":\"try后面是可能产生异常的代码，catch后面是捕获到某种异常对象时进行处理的代码，final后面是无论是否捕获到异常都必须执行的代码\",\"score\":null},{\"prefix\":\"C\",\"content\":\"&nbsp;catch 语句和final语句都可以缺省\",\"score\":null},{\"prefix\":\"D\",\"content\":\"catch 语句用来处理程序运行时的非致命性错误，而final语句用来处理程序运行时的致命性错误\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:22:49');
INSERT INTO `t_text_content` VALUES (209, '{\"titleContent\":\"如果一个程序段中有多个catch，则程序会按如下哪种情况执行？\",\"analyze\":\"如果一个程序段中有多个catch，找到适合的例外类型后就不再执行后面的catch。按顺序找到和catch异常类型匹配的第一个catch块执行，如果final块是必须执行的。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"找到适合的例外类型后继续执行后面的catch。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"找到每个符合条件的catch都执行一次。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"找到适合的例外类型后就不再执行后面的catch。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"按顺序找到和catch异常类型匹配的第一个catch块执行，如果final块是必须执行的。\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:23:52');
INSERT INTO `t_text_content` VALUES (210, '{\"titleContent\":\"下面哪些类型的实例对象可以通过throw语句抛出\",\"analyze\":\"RuntimeException、Throwable类型的实例对象可以通过throw语句抛出\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;Event\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Object\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Throwable\",\"score\":null},{\"prefix\":\"D\",\"content\":\"RuntimeException\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:25:04');
INSERT INTO `t_text_content` VALUES (211, '{\"titleContent\":\"下面哪行代码编译时将发生错误或异常\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;float f = 1.3;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"&nbsp;char c = &quot;a&quot;;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"byte b = 257;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"boolean b = null;\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:26:02');
INSERT INTO `t_text_content` VALUES (212, '{\"titleContent\":\"<p class=\\\"ueditor-p\\\">下列程序执行的结果是（）。</p><p class=\\\"ueditor-p\\\">public class X7_16{</p><p class=\\\"ueditor-p\\\">public static void main（String[]args）{</p><p class=\\\"ueditor-p\\\">try{ return；</p><p class=\\\"ueditor-p\\\">}</p><p class=\\\"ueditor-p\\\">finally {System.out.println（&quot;Finally&quot;）；}}}</p>\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"程序正常运行，但不输出任何结果\",\"score\":null},{\"prefix\":\"B\",\"content\":\"程序正常运行，并输出Finally&nbsp;\",\"score\":null},{\"prefix\":\"C\",\"content\":\"编译通过，但运行时出现异常\",\"score\":null},{\"prefix\":\"D\",\"content\":\"因为没有catch子句，因此不能通过编译\",\"score\":null}],\"correct\":\"B\"}', '2020-03-04 09:27:20');
INSERT INTO `t_text_content` VALUES (213, '{\"titleContent\":\"java.io包的File类是\",\"analyze\":\"java.io包的File类是对象流类\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"字符流类\",\"score\":null},{\"prefix\":\"B\",\"content\":\"对象流类\",\"score\":null},{\"prefix\":\"C\",\"content\":\"字节流类\",\"score\":null},{\"prefix\":\"D\",\"content\":\"非流类\",\"score\":null}],\"correct\":\"B\"}', '2020-03-04 09:28:19');
INSERT INTO `t_text_content` VALUES (214, '{\"titleContent\":\"字符流与字节流的区别在于\",\"analyze\":\"字符流与字节流的区别在于每次读写的字节数不同\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"每次读写的字节数不同\",\"score\":null},{\"prefix\":\"B\",\"content\":\"前者带有缓冲，后者没有\",\"score\":null},{\"prefix\":\"C\",\"content\":\"前者是块读写，后者是字节读写\",\"score\":null},{\"prefix\":\"D\",\"content\":\"二者没有区别，可以互换使用\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:29:37');
INSERT INTO `t_text_content` VALUES (215, '{\"titleContent\":\"下列流中哪个不属于字节流\",\"analyze\":\"InputStreamReader不属于字节流\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FilelnputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"BufferedinputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"FilterinputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"InputStreamReader\",\"score\":null}],\"correct\":\"D\"}', '2020-03-04 09:30:38');
INSERT INTO `t_text_content` VALUES (216, '{\"titleContent\":\"下列数据流中，属于输入流的是\",\"analyze\":\"<p class=\\\"ueditor-p\\\">从键盘流向内存的数据流属于输入流</p>\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"从内存流向硬盘的数据流\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">从键盘流向内存的数据流</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"从键盘流向显示器的数据流&nbsp;\",\"score\":null},{\"prefix\":\"D\",\"content\":\"从网络流向显示器的数据流\",\"score\":null}],\"correct\":\"B\"}', '2020-03-04 09:31:43');
INSERT INTO `t_text_content` VALUES (217, '{\"titleContent\":\"Java语言中提供输入输出流的包是\",\"analyze\":\"Java语言中提供输入输出流的包是java.io\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java.sql&nbsp;\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.util\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.math\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java.io\",\"score\":null}],\"correct\":\"D\"}', '2020-03-04 09:33:05');
INSERT INTO `t_text_content` VALUES (218, '{\"titleContent\":\"下列流中哪一个使用了缓冲区技术？\",\"analyze\":\"BufferedOutputStream使用了缓冲区技术\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"BufferedOutputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileInputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"DataOutputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"FileReader\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:34:16');
INSERT INTO `t_text_content` VALUES (219, '{\"titleContent\":\"下列说法，错误的是\",\"analyze\":\"FileReader不是用文件字节流的读操作\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FileReader是用文件字节流的读操作\",\"score\":null},{\"prefix\":\"B\",\"content\":\"PipedInputStream用于字节流管道流的读操作\",\"score\":null},{\"prefix\":\"C\",\"content\":\"Java的IO流包括字符流和字节流\",\"score\":null},{\"prefix\":\"D\",\"content\":\"DatalnputStream被称为数据输入流\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:35:17');
INSERT INTO `t_text_content` VALUES (220, '{\"titleContent\":\"下列说法错误的是\",\"analyze\":\"打开一个文件时可能产生IOException\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"java的标准输入对象为System.in\",\"score\":null},{\"prefix\":\"B\",\"content\":\"打开一个文件时不可能产生IOException\",\"score\":null},{\"prefix\":\"C\",\"content\":\"使用File对象乐意判断一个文件是否存在\",\"score\":null},{\"prefix\":\"D\",\"content\":\"使用File对象可以判断一个目录是否存在\",\"score\":null}],\"correct\":\"B\"}', '2020-03-04 09:36:27');
INSERT INTO `t_text_content` VALUES (221, '{\"titleContent\":\"下列哪一个import命令可以使我们在程序中创建输入输出流对象\",\"analyze\":\"import java.io.*命令可以使我们在程序中创建输入输出流对象\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"import java.sql.*\",\"score\":null},{\"prefix\":\"B\",\"content\":\"import java.util.*\",\"score\":null},{\"prefix\":\"C\",\"content\":\"import java.io.*\",\"score\":null},{\"prefix\":\"D\",\"content\":\"import java.net.*\",\"score\":null}],\"correct\":\"C\"}', '2020-03-04 09:37:48');
INSERT INTO `t_text_content` VALUES (222, '{\"titleContent\":\"如果需要从文件中读取数据，则可以在程序中创建哪一个类的对象\",\"analyze\":\"如果需要从文件中读取数据，则可以在程序中创建FilelnputStream的对象\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FilelnputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileOutputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"DataOutputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"File Writer\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:39:14');
INSERT INTO `t_text_content` VALUES (223, '{\"titleContent\":\"能够向文件输入逻辑型数据的类是\",\"analyze\":\"能够向文件输入逻辑型数据的类是DataOutputStream\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"DataOutputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileWriter\",\"score\":null},{\"prefix\":\"C\",\"content\":\"OutputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"FileOutputStream\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:40:09');
INSERT INTO `t_text_content` VALUES (224, '{\"titleContent\":\"在Java中，(&nbsp; )类提供定位本地文件系统，对文件或目录及其属性进行基本操作。\",\"analyze\":\"在Java中，(File&nbsp; )类提供定位本地文件系统，对文件或目录及其属性进行基本操作。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;FileInputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileReader\",\"score\":null},{\"prefix\":\"C\",\"content\":\"FileWriter\",\"score\":null},{\"prefix\":\"D\",\"content\":\"File\",\"score\":null}],\"correct\":\"D\"}', '2020-03-04 09:41:17');
INSERT INTO `t_text_content` VALUES (225, '{\"titleContent\":\"下面哪个流类属于面向字符的输入流\",\"analyze\":\"InputStreamReader属于面向字符的输入流\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"BufferedWriter\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileInputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ObjectInputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"InputStreamReader\",\"score\":null}],\"correct\":\"D\"}', '2020-03-04 09:42:28');
INSERT INTO `t_text_content` VALUES (226, '{\"titleContent\":\"要从文件”file.dat”文件中读出第10个字节到变量c中，下列哪个正确\",\"analyze\":\"略\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"<p class=\\\"ueditor-p\\\">FileInputStream in=new FileInputStream(&quot;file.dat&quot;);</p><p class=\\\"ueditor-p\\\">in.skip(9);</p><p class=\\\"ueditor-p\\\">int c=in.read();</p>\",\"score\":null},{\"prefix\":\"B\",\"content\":\"<p class=\\\"ueditor-p\\\">FileInputStream in=new FileInputStream(&quot;file.dat&quot;);</p><p class=\\\"ueditor-p\\\">in.skip(10);</p><p class=\\\"ueditor-p\\\">int c=in.read();</p>\",\"score\":null},{\"prefix\":\"C\",\"content\":\"<p class=\\\"ueditor-p\\\">FileInputStream in=new FileInputStream(&quot;file.dat&quot;);</p><p class=\\\"ueditor-p\\\">int c=in.read();</p>\",\"score\":null},{\"prefix\":\"D\",\"content\":\"<p class=\\\"ueditor-p\\\">RandomAccessFile in=new RandomAccessFile(&quot;file.dat&quot;);</p><p class=\\\"ueditor-p\\\">in.skip(7);</p><p class=\\\"ueditor-p\\\">int c=in.readByte();</p>\",\"score\":null}],\"correct\":\"A\"}', '2020-03-04 09:43:31');
INSERT INTO `t_text_content` VALUES (227, '{\"titleContent\":\"Java类库中，将信息写入内存的类是（）\",\"analyze\":\"Java类库中，将信息写入内存的类是（java.ByteArrayOutputStream）\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"Java.io.FileOutputStream\",\"score\":null},{\"prefix\":\"B\",\"content\":\"java.ByteArrayOutputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"java.io.BufferedOutputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"java,.io.DataOutputStream\",\"score\":null}],\"correct\":\"B\"}', '2020-03-04 09:44:36');
INSERT INTO `t_text_content` VALUES (228, '{\"titleContent\":\"下面关于java中输入/输出流的说法正确的是\",\"analyze\":\"FilelnputStream与File0utputStream类用读、写字节流。Reader与Writer类用来读、写字符流。RandomAccessFile既可以用来读文件，也可以用来写文件。File类用来处理与文件相关的操作。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"FilelnputStream与File0utputStream类用读、写字节流。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"Reader与Writer类用来读、写字符流。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"RandomAccessFile既可以用来读文件，也可以用来写文件。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"File类用来处理与文件相关的操作。\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:48:44');
INSERT INTO `t_text_content` VALUES (229, '{\"titleContent\":\"关于BufferedReader类的readLine()方法，以下说法正确的是\",\"analyze\":\"方法readLine）每次读取一个字节。\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"方法readLine（）每次读取一行数据。\",\"score\":null},{\"prefix\":\"B\",\"content\":\"方法readLine）每次读取一个字节。\",\"score\":null},{\"prefix\":\"C\",\"content\":\"该方法可能抛出10Exception异常，调用该方法时通常应将它放到try块中，并通过catch块处理异常。\",\"score\":null},{\"prefix\":\"D\",\"content\":\"如果读到流的末尾，该方法返回的结果为null.\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:50:13');
INSERT INTO `t_text_content` VALUES (230, '{\"titleContent\":\"新建一个流对象，下面那个选项的代码是正确的？\",\"analyze\":\"new BufferedReader (new FileInputStream(“a.dat”));是错的\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"&nbsp;new BufferedWriter(new FileWriter(“a.txt”));\",\"score\":null},{\"prefix\":\"B\",\"content\":\"new BufferedReader (new FileInputStream(“a.dat”));\",\"score\":null},{\"prefix\":\"C\",\"content\":\"new GZIPOutputStream(new FileOutputStream(“a.zip”));\",\"score\":null},{\"prefix\":\"D\",\"content\":\"new ObjectInputStream(new FileInputStream(“a.dat”));\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:51:33');
INSERT INTO `t_text_content` VALUES (231, '{\"titleContent\":\"下面哪个流类不属于面向字符的输入流\",\"analyze\":\"InputStreamReader不属于面向字符的输入流\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"BufferedWriter\",\"score\":null},{\"prefix\":\"B\",\"content\":\"FileInputStream\",\"score\":null},{\"prefix\":\"C\",\"content\":\"ObjectInputStream\",\"score\":null},{\"prefix\":\"D\",\"content\":\"InputStreamReader\",\"score\":null}],\"correct\":\"\"}', '2020-03-04 09:52:46');
INSERT INTO `t_text_content` VALUES (232, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\">Java<span style=\\\"font-family:宋体\\\">语言的特点：</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\">Java<span style=\\\"font-family:宋体\\\">语言的特点：</span></span></p><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>1<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">简单的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>2<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">面向对象的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>3<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">分布式的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>4<span style=\\\"font-family:宋体\\\">）健壮性的</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>5<span style=\\\"font-family:宋体\\\">）安全的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>6<span style=\\\"font-family:宋体\\\">）体系结构中立的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>7<span style=\\\"font-family:宋体\\\">）可移植的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>8<span style=\\\"font-family:宋体\\\">）解释型的</span></span><br/>答对一个一分<br/></p>\",\"questionItemObjects\":[],\"correct\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>1<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">简单的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>2<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">面向对象的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>3<span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">分布式的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>4<span style=\\\"font-family:宋体\\\">）健壮性的</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>5<span style=\\\"font-family:宋体\\\">）安全的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>6<span style=\\\"font-family:宋体\\\">）体系结构中立的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>7<span style=\\\"font-family:宋体\\\">）可移植的</span></span><span style=\\\";font-family:宋体;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:19px\\\"><span style=\\\"font-family:宋体\\\">（</span>8<span style=\\\"font-family:宋体\\\">）解释型的</span></span><br/><br/>答对一个一分<br/></p>\"}', '2020-03-04 09:58:17');
INSERT INTO `t_text_content` VALUES (233, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">什么是强制类型转换及转换格式？</span></span></p>\",\"analyze\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">当把一种数据类型变量的值赋给另一种数据类型时会用到数据转换。当把在内存中占字节数较少的变量的值赋给占字节较多的变量时，系统自动完成数据类型的转换（</span>2.5分）</span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">格式：（数据类型名）变量名或表达式（</span>2.5分）</span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">当把一种数据类型变量的值赋给另一种数据类型时会用到数据转换。当把在内存中占字节数较少的变量的值赋给占字节较多的变量时，系统自动完成数据类型的转换（</span>2.5分）</span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">格式：（数据类型名）变量名或表达式（</span>2.5分）</span></p>\"}', '2020-03-04 09:59:19');
INSERT INTO `t_text_content` VALUES (234, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中数据类型分别用什么符号来表示的？</span></p>\",\"analyze\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">逻辑型用</span>boolean表示（1分）</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">字符型用</span>char表示（1分） </span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">整型共有</span>4种分别是byte，short，long，int（2 </span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">浮点型共两种</span>float和double（1分）</span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">逻辑型用</span>boolean表示（1分）</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">字符型用</span>char表示（1分） </span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">整型共有</span>4种分别是byte，short，long，int（2 </span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">浮点型共两种</span>float和double（1分）</span></p>\"}', '2020-03-04 09:59:57');
INSERT INTO `t_text_content` VALUES (235, '{\"titleContent\":\"<p><span style=\\\"font-family:宋体;font-size:16px\\\">1、</span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">在一个循环中使用</span>break<span style=\\\"font-family:宋体\\\">和</span><span style=\\\"font-family:Calibri\\\">continue</span><span style=\\\"font-family:宋体\\\">语句有什么不同的效果？</span></span></p>\",\"analyze\":\"<p style=\\\"margin-right:0\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">在循环中使用</span>break<span style=\\\"font-family:宋体\\\">语句，将使循环终止，流程跳转到</span><span style=\\\"font-family:Calibri\\\">break</span><span style=\\\"font-family:宋体\\\">语句所在的循环外面的第一语句继续执行（</span><span style=\\\"font-family:Calibri\\\">2.5</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-right: 0px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">在循环中使用</span>continue<span style=\\\"font-family:宋体\\\">语句，将提前结束本次循环，流程跳转到</span><span style=\\\"font-family:Calibri\\\">continue</span><span style=\\\"font-family:宋体\\\">语句所在循环的第一个语句继续执行（</span><span style=\\\"font-family:Calibri\\\">2.5</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\"margin-right:0\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">在循环中使用</span>break<span style=\\\"font-family:宋体\\\">语句，将使循环终止，流程跳转到</span><span style=\\\"font-family:Calibri\\\">break</span><span style=\\\"font-family:宋体\\\">语句所在的循环外面的第一语句继续执行（</span><span style=\\\"font-family:Calibri\\\">2.5</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-right: 0px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">在循环中使用</span>continue<span style=\\\"font-family:宋体\\\">语句，将提前结束本次循环，流程跳转到</span><span style=\\\"font-family:Calibri\\\">continue</span><span style=\\\"font-family:宋体\\\">语句所在循环的第一个语句继续执行（</span><span style=\\\"font-family:Calibri\\\">2.5</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:00:40');
INSERT INTO `t_text_content` VALUES (236, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:14px\\\">Java<span style=\\\"font-family:宋体\\\">中结构化程序设计有哪三种基本流程，及分别对应</span><span style=\\\"font-family:Times New Roman\\\">java</span><span style=\\\"font-family:宋体\\\">中那些语句？</span></span></p>\",\"analyze\":\"<p>略</p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\"margin-right:0\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">结构化程序设计有顺序、分支、循坏三种基本流程（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-right:0\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">java<span style=\\\"font-family:宋体\\\">中的分支语句包括</span><span style=\\\"font-family:Calibri\\\">if</span><span style=\\\"font-family:宋体\\\">语句、</span><span style=\\\"font-family:Calibri\\\">switch</span><span style=\\\"font-family:宋体\\\">语句；（</span><span style=\\\"font-family:Calibri\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-right:0\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">循环语句包括</span>while<span style=\\\"font-family:宋体\\\">语句、</span><span style=\\\"font-family:Calibri\\\">do-while</span><span style=\\\"font-family:宋体\\\">语句、</span><span style=\\\"font-family:Calibri\\\">for</span><span style=\\\"font-family:宋体\\\">语句；（</span><span style=\\\"font-family:Calibri\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"margin-right: 0px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">其他如对象、变量定义语句、赋值语句、方法调用语句等都是顺序语句。（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:01:17');
INSERT INTO `t_text_content` VALUES (237, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">什么是方法重载？</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">方法重载是指，一个类中可以有多个方法具有相同的名字和类型（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">但这些方法的参数必须不同（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">或者是参数个数不同，或者是参数类型不同（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">方法重载是指，一个类中可以有多个方法具有相同的名字和类型（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">但这些方法的参数必须不同（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">或者是参数个数不同，或者是参数类型不同（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:02:05');
INSERT INTO `t_text_content` VALUES (238, '{\"titleContent\":\"<p style=\\\"margin-left: 0px; text-indent: 0px;\\\"><span style=\\\"font-family:宋体;font-size:16px\\\">1、</span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">什么是构造方法？</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">构造方法是一种特殊方法（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">它的名字必须与它所在的类的名字完全相同（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">并且不返回任何数据类型，即它是</span>void<span style=\\\"font-family:宋体\\\">型（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">构造方法是一种特殊方法（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">它的名字必须与它所在的类的名字完全相同（</span>2<span style=\\\"font-family:宋体\\\">分）</span></span></p><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">并且不返回任何数据类型，即它是</span>void<span style=\\\"font-family:宋体\\\">型（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:02:38');
INSERT INTO `t_text_content` VALUES (239, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">抽象类与接口有何不同？</span></span></p>\",\"analyze\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>1<span style=\\\"font-family:宋体\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">抽象类中可以存在非抽象的方法，</span>&nbsp;<span style=\\\"font-family:宋体\\\">接口中的方法被默认的变成抽象方法；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">实现抽象类的方法时</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">如果方法是抽象的</span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">子类必须重写抽象的方法</span><span style=\\\"font-family:Times New Roman\\\">. </span><span style=\\\"font-family:宋体\\\">如果方法不是抽象的</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">子类可以选择继承，实现了接口就必须实现接口中的所有方法</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">因为接口中的方法默认的全部都是抽象的方法 ；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>3<span style=\\\"font-family:宋体\\\">）抽象类可以有私有的成员变量和成员方法，接口中的方法全都被默认的修饰为</span><span style=\\\"font-family:Times New Roman\\\">: public &nbsp;abstract &nbsp; </span><span style=\\\"font-family:宋体\\\">类型的方法；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>4<span style=\\\"font-family:宋体\\\">）一个类只能继承一个抽象类，一个类可以实现多个接口 </span><span style=\\\"font-family:Times New Roman\\\">&nbsp;,</span><span style=\\\"font-family:宋体\\\">接口可以实现多继承（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>5<span style=\\\"font-family:宋体\\\">）抽象类中的非抽象的方法可以选择继承，接口中的方法必须全部被重写 </span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">并且全部是公有的</span><span style=\\\"font-family:Times New Roman\\\">public </span><span style=\\\"font-family:宋体\\\">方法</span><span style=\\\"font-family:Times New Roman\\\">.</span><span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>1<span style=\\\"font-family:宋体\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">抽象类中可以存在非抽象的方法，</span>&nbsp;<span style=\\\"font-family:宋体\\\">接口中的方法被默认的变成抽象方法；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">）</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">实现抽象类的方法时</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">如果方法是抽象的</span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">子类必须重写抽象的方法</span><span style=\\\"font-family:Times New Roman\\\">. </span><span style=\\\"font-family:宋体\\\">如果方法不是抽象的</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">子类可以选择继承，实现了接口就必须实现接口中的所有方法</span><span style=\\\"font-family:Times New Roman\\\">, </span><span style=\\\"font-family:宋体\\\">因为接口中的方法默认的全部都是抽象的方法 ；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>3<span style=\\\"font-family:宋体\\\">）抽象类可以有私有的成员变量和成员方法，接口中的方法全都被默认的修饰为</span><span style=\\\"font-family:Times New Roman\\\">: public &nbsp;abstract &nbsp; </span><span style=\\\"font-family:宋体\\\">类型的方法；（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>4<span style=\\\"font-family:宋体\\\">）一个类只能继承一个抽象类，一个类可以实现多个接口 </span><span style=\\\"font-family:Times New Roman\\\">&nbsp;,</span><span style=\\\"font-family:宋体\\\">接口可以实现多继承（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span>5<span style=\\\"font-family:宋体\\\">）抽象类中的非抽象的方法可以选择继承，接口中的方法必须全部被重写 </span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">并且全部是公有的</span><span style=\\\"font-family:Times New Roman\\\">public </span><span style=\\\"font-family:宋体\\\">方法</span><span style=\\\"font-family:Times New Roman\\\">.</span><span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">1</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:03:54');
INSERT INTO `t_text_content` VALUES (240, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">简述什么是类继承机制？</span></span></p>\",\"analyze\":\"<p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">继承是一种由已有的类创建新类的机制（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">利用继承可以创建一个共有属性的一般类，根据该一般类再创建具有特殊属性的新类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">新类继承一般类的状态和行为，并根据需要增加它自己的新的状态和行为（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">由继承而得到的类称为子类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"text-indent: 32px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">被继承的类称为父类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">继承是一种由已有的类创建新类的机制（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">利用继承可以创建一个共有属性的一般类，根据该一般类再创建具有特殊属性的新类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">新类继承一般类的状态和行为，并根据需要增加它自己的新的状态和行为（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">由继承而得到的类称为子类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"text-indent: 32px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">被继承的类称为父类（</span>1<span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:04:31');
INSERT INTO `t_text_content` VALUES (241, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">关键字</span>super<span style=\\\"font-family:宋体\\\">如何使用？</span></span></p>\",\"analyze\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">子类继承父类时可能会发生父类的成员变量被隐藏和父类中的成员方法被重写</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">如果在子类中想使用被子类隐藏的父类的成员变量或方法就可以使用关键字</span>super<span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">用</span>super<span style=\\\"font-family:宋体\\\">可以调用父类的构造方法和操作被隐藏的成员变量和方法（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">子类继承父类时可能会发生父类的成员变量被隐藏和父类中的成员方法被重写</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">如果在子类中想使用被子类隐藏的父类的成员变量或方法就可以使用关键字</span>super<span style=\\\"font-family:宋体\\\">（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">用</span>super<span style=\\\"font-family:宋体\\\">可以调用父类的构造方法和操作被隐藏的成员变量和方法（</span><span style=\\\"font-family:Times New Roman\\\">2</span><span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:05:11');
INSERT INTO `t_text_content` VALUES (242, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">事件处理的三要素是什么？</span></span></p>\",\"analyze\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;1) <span style=\\\"font-family:宋体\\\">事件源（</span><span style=\\\"font-family:Times New Roman\\\">Event Source</span><span style=\\\"font-family:宋体\\\">）：即事件发生的场所，就是指各个组件，如按钮等，点击按钮其实就是组件上发生的一个事件；（</span><span style=\\\"font-family:Times New Roman\\\">2</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">2) <span style=\\\"font-family:宋体\\\">事件（</span><span style=\\\"font-family:Times New Roman\\\">Event</span><span style=\\\"font-family:宋体\\\">）：事件封装了组件上发生的事情，比如按钮单击、按钮松开等等；（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">3) <span style=\\\"font-family:宋体\\\">事件监听器（</span><span style=\\\"font-family:Times New Roman\\\">Event Listener</span><span style=\\\"font-family:宋体\\\">）：负责监听事件源上发生的特定类型的事件，当事件到来时还必须负责处理相应的事件；（</span><span style=\\\"font-family:Times New Roman\\\">2</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">分）</span></span></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;1) <span style=\\\"font-family:宋体\\\">事件源（</span><span style=\\\"font-family:Times New Roman\\\">Event Source</span><span style=\\\"font-family:宋体\\\">）：即事件发生的场所，就是指各个组件，如按钮等，点击按钮其实就是组件上发生的一个事件；（</span><span style=\\\"font-family:Times New Roman\\\">2</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">2) <span style=\\\"font-family:宋体\\\">事件（</span><span style=\\\"font-family:Times New Roman\\\">Event</span><span style=\\\"font-family:宋体\\\">）：事件封装了组件上发生的事情，比如按钮单击、按钮松开等等；（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分）</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">3) <span style=\\\"font-family:宋体\\\">事件监听器（</span><span style=\\\"font-family:Times New Roman\\\">Event Listener</span><span style=\\\"font-family:宋体\\\">）：负责监听事件源上发生的特定类型的事件，当事件到来时还必须负责处理相应的事件；（</span><span style=\\\"font-family:Times New Roman\\\">2</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">分）</span></span></p>\"}', '2020-03-04 10:06:47');
INSERT INTO `t_text_content` VALUES (243, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">如何在窗口中增加菜单？</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><font face=\\\"Times New Roman\\\">略</font></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">用</span>MenuBar创建一个对象，表示一个菜单条，使用Fram中的方法SetMenuBar（MenuBar），可在窗口中增加一个菜单条（1分）</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">用</span>Menu创建若干个对象，每一个对象表示菜单条上的一个菜单项（1分）</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过</span>MenuBar的对象add（Menu）将一个菜单加到菜单条上（1分）</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">用</span>MenuItem创建若干对象，每一个对象表示一个具体的菜单项（1分）</span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过</span>Menu对象调用方法add（MenuItem）可将一个菜单项加入到一个菜单中（1分）</span></p>\"}', '2020-03-04 10:07:40');
INSERT INTO `t_text_content` VALUES (244, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">什么是异常？</span>Java中两种异常处理方法是什么？</span></p>\",\"analyze\":\"<p style=\\\"text-indent: 32px; line-height: 27px;\\\"><font face=\\\"Times New Roman\\\">略</font></p>\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常即异常事件，指程序运行过程中出现的影响正常程序流程的事件。</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p><p style=\\\";text-indent:32px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常处理方法</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">一</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">是使用</span>try-catch-finally块结构在程序代码中捕获和处理异常。</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">2<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p><p style=\\\"text-indent: 32px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">二是把异常对象通过向调用层抛出，一层层向上直至交给</span>Java虚拟机处理，这种产生异常和转交异常的过程称为抛出异常。</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">2<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\"}', '2020-03-04 10:08:24');
INSERT INTO `t_text_content` VALUES (245, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">简述读写文本文件的基本步骤</span></span></p>\",\"analyze\":\"<p class=\\\"ueditor-p\\\">略</p>\",\"questionItemObjects\":[],\"correct\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">导入输入</span>/<span style=\\\"font-family:宋体\\\">输出包</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">：</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">2</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">创建文件对象</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">；</span>3<span style=\\\"font-family:宋体\\\">创建读出</span><span style=\\\"font-family:Times New Roman\\\">/</span><span style=\\\"font-family:宋体\\\">写入操作的对象</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">：</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">4</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">数据文件的读</span>/<span style=\\\"font-family:宋体\\\">写操作</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">：</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">5</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">关闭文件</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">1<span style=\\\"font-family:宋体\\\">分</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">。</span></span></p>\"}', '2020-03-04 10:09:42');
INSERT INTO `t_text_content` VALUES (246, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">写出一个类</span>Person，并由该类做基类派生出一个子类Employee，其中Person类具有Name</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Age两个保护成员变量，分别为String类型、整型，且具有公有的getAge成员函数，用于返回Age变量的值。Employee类具有保护成员变量empno.</span></p>\",\"analyze\":\"略\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public class Person</span><span style=\\\";font-family:宋体;font-size:16px\\\">{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;protected String Name;</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;protected int Age; </span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public int getAge()</span><span style=\\\";font-family:宋体;font-size:16px\\\">{</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">return Age;</span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span><span style=\\\";font-family:宋体;font-size:16px\\\">} //person<span style=\\\"font-family:宋体\\\">类的成员变量、方法正确得</span><span style=\\\"font-family:Times New Roman\\\">10</span></span></p><p style=\\\";text-indent:40px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public class Student extends Person{</span></p><p style=\\\"text-indent: 40px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">private String stuno;</span><span style=\\\";font-family:宋体;font-size:16px\\\">} //<span style=\\\"font-family:宋体\\\">派生类正确得</span><span style=\\\"font-family:Times New Roman\\\">5</span></span></p>\"}', '2020-03-04 10:11:41');
INSERT INTO `t_text_content` VALUES (247, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">编写程序，判断从键盘输入的一个数是否是素数</span></span></p>\",\"analyze\":\"略\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public class TestPrime {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public static void main(String[] args) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Scanner input = new Scanner(System.in);</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">System.out.println(&quot;<span style=\\\"font-family:宋体\\\">请输入一个数：</span><span style=\\\"font-family:Times New Roman\\\">&quot;);</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;//<span style=\\\"font-family:宋体\\\">输入一个数得</span><span style=\\\"font-family:Times New Roman\\\">2</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">int n = input.nextInt();</span><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">boolean flag = true;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">if (n == 1)</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">flag = false;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">else {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">for (int i = 2; i &lt; n; i++) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">if (n % i== 0) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">flag = false;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">break;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">if (flag) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">System.out.println(n + &quot;<span style=\\\"font-family:宋体\\\">是素数</span><span style=\\\"font-family:Times New Roman\\\">&quot;);</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">} else {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">System.out.println(n + &quot;<span style=\\\"font-family:宋体\\\">不是素数</span><span style=\\\"font-family:Times New Roman\\\">&quot;);</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span><span style=\\\";font-family:宋体;font-size:16px\\\">//<span style=\\\"font-family:宋体\\\">判断是否为素数</span><span style=\\\"font-family:Times New Roman\\\">8</span><span style=\\\"font-family:宋体\\\">分</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">}</span><span style=\\\";font-family:宋体;font-size:16px\\\">//<span style=\\\"font-family:宋体\\\">程序结构正确得</span><span style=\\\"font-family:Times New Roman\\\">5</span></span></p>\"}', '2020-03-04 10:12:28');
INSERT INTO `t_text_content` VALUES (248, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">定义圆类，它有一个变量</span>radius(<span style=\\\"font-family:宋体\\\">半径</span><span style=\\\"font-family:Times New Roman\\\">)</span><span style=\\\"font-family:宋体\\\">。从键盘输入数据，通过构造方法传递给</span><span style=\\\"font-family:Times New Roman\\\">radius</span><span style=\\\"font-family:宋体\\\">，编程计算并输出圆的周长和面积（确保输入的数据不为负数）。</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;&nbsp;</span><span style=\\\"font-family:宋体\\\">要求：进行测试。</span></span></p>\",\"analyze\":\"略\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">圆的类：</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">public&nbsp;class&nbsp;Circle {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;double&nbsp;radius;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Circle(double&nbsp;dRadius){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.radius = dRadius;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;double&nbsp;getLength(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;2*Math.PI*this.radius;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;double&nbsp;getArea()</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Math.PI*this.radius*this.radius;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">} //<span style=\\\"font-family:宋体\\\">圆的类编写正确得</span><span style=\\\"font-family:Times New Roman\\\">10</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">测试类：</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">package&nbsp;Test2;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">import&nbsp;java.util.Scanner;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">public&nbsp;class&nbsp;Test {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[] args) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;iRadius;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner sc =&nbsp;new&nbsp;Scanner(System.in);</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(&quot;<span style=\\\"font-family:宋体\\\">请输入圆的半径：</span><span style=\\\"font-family:Times New Roman\\\">&quot;);</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iRadius = sc.nextDouble();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(iRadius &lt;&nbsp;0){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">你输入的半径有误</span><span style=\\\"font-family:Times New Roman\\\">!&quot;);</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else{</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Circle oCir =&nbsp;new&nbsp;Circle(iRadius);</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">圆的周长为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;+oCir.getLength());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">圆的面积为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;+oCir.getArea());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\">} //<span style=\\\"font-family:宋体\\\">测试类编写正确得</span><span style=\\\"font-family:Times New Roman\\\">5</span></span></p>\"}', '2020-03-04 10:13:20');
INSERT INTO `t_text_content` VALUES (249, '{\"titleContent\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">试编写</span>Java<span style=\\\"font-family:宋体\\\">代码实现一个计数器类</span><span style=\\\"font-family:Times New Roman\\\">Computer</span><span style=\\\"font-family:宋体\\\">其中包括：</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">域</span>value&nbsp;<span style=\\\"font-family:宋体\\\">：用来保存计数器的当前值；</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">方法</span>increment()<span style=\\\"font-family:宋体\\\">：</span><span style=\\\"font-family:Times New Roman\\\">&nbsp;</span><span style=\\\"font-family:宋体\\\">计数器加一；</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">方法</span>decrement()&nbsp;<span style=\\\"font-family:宋体\\\">：计数器减一；</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">方法</span>reset()<span style=\\\"font-family:宋体\\\">：计数器清零。</span></span></p><p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">请编写并调试程序。</span></span></p><p class=\\\"ueditor-p\\\"><br/></p>\",\"analyze\":\"略\",\"questionItemObjects\":[],\"correct\":\"<p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public&nbsp;class&nbsp;Computer {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;value;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Computer(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value =&nbsp;0;</span></p><p style=\\\";text-indent:16px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">} &nbsp;&nbsp;</span></p><p style=\\\";text-indent:16px;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;increment(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value++;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;decrement(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value--;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;reset(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp; &nbsp;&nbsp;this.value =&nbsp;0;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;getValue(){</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.value;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">} &nbsp;&nbsp;&nbsp;//<span style=\\\"font-family:宋体\\\">计数器类</span><span style=\\\"font-family:Times New Roman\\\">Computer</span><span style=\\\"font-family:宋体\\\">且方法编写正确 </span></span><span style=\\\";font-family:宋体;font-size:16px\\\">10</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">分</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">测试类：</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">package&nbsp;Test8;</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">public&nbsp;class&nbsp;Test {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[] args) {</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computer oCount =&nbsp;new&nbsp;Computer();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">计数器的初始值为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.increment();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">加三后的值为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.decrement();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">减一后的值为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oCount.reset();</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;<span style=\\\"font-family:宋体\\\">初始化后的值为：</span><span style=\\\"font-family:Times New Roman\\\">&quot;&nbsp;+ oCount.getValue());</span></span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\\\";line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<span style=\\\"font-family:宋体\\\">测试类编写正确 &nbsp;</span><span style=\\\"font-family:Times New Roman\\\">5</span><span style=\\\"font-family:宋体\\\">分</span></span></p><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;</span></p>\"}', '2020-03-04 10:14:31');
INSERT INTO `t_text_content` VALUES (250, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java程序中的单行注释符是<span class=\\\"gapfilling-span 77737ddf-cb25-4c22-bb38-4ae50a919aaa\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">，多行注释符是<span class=\\\"gapfilling-span e698dae2-8312-4e05-8065-20c1953d128c\\\">2</span>。</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java程序中的单行注释符是（11），多行注释符是（/**/）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"11\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">/**/</span></p>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:24:50');
INSERT INTO `t_text_content` VALUES (251, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">使用命令行敲入</span>javac命令，其含义是<span class=\\\"gapfilling-span 1d90483a-7b93-47a3-bd0e-e98a0fd68871\\\">1</span>。</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">使用命令行敲入</span>javac命令，其含义是（编译java文件，得到字节码文件）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">编译java文件，得到字节码文件</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:26:00');
INSERT INTO `t_text_content` VALUES (252, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java源程序的扩展名是<span class=\\\"gapfilling-span 6a348f0a-26e4-42bb-a973-4fef8f6fb34a\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">，经过编译后的程序的扩展名是<span class=\\\"gapfilling-span c3c92d69-7d6a-4c52-bbf7-f574c05cd7fc\\\">2</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java源程序的扩展名是（</span><span style=\\\";font-family:宋体;font-size:16px\\\">.</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java），经过编译后的程序的扩展名是（.class）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\".java\",\"score\":1},{\"prefix\":\"2\",\"content\":\".class\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:26:51');
INSERT INTO `t_text_content` VALUES (253, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">如果将类</span>MyClass声明为public，它的文件名称必须是<span class=\\\"gapfilling-span 305ddf16-7ea2-42e3-ba5a-f25d90db90ce\\\">1</span>才能正常编译。</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">如果将类</span>MyClass声明为public，它的文件名称必须是（Myclass.java）才能正常编译。</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Myclass.java</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:28:00');
INSERT INTO `t_text_content` VALUES (254, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">javac.exe和java.exe两个可执行程序存放在JDK安装目录的<span class=\\\"gapfilling-span 560d584d-025c-4c6e-b4ec-86132751e39a\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">目录下</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">javac.exe和java.exe两个可执行程序存放在JDK安装目录的</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">bin</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">目录下</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">bin</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:29:24');
INSERT INTO `t_text_content` VALUES (255, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span aa2fb3be-37ab-4a37-bd32-120501843355\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">环境变量用来存储</span>Java的编译和运行工具所在的路径，而<span class=\\\"gapfilling-span 90ad35c1-478e-4d63-941b-6a659c982090\\\">2</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">环境变量则用</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">来保存保存</span>Java虚拟机要运行的“.class”文件路径。</span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">path</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">环境变量用来存储</span>Java的编译和运行工具所在的路径，而</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">classpath</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">环境变量则用</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">来保存保存</span>Java虚拟机要运行的“.class”文件路径。</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"path\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">classpath</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:30:26');
INSERT INTO `t_text_content` VALUES (256, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通常</span>Applet程序在<span class=\\\"gapfilling-span 38711edb-2356-479a-8a56-9a802994af97\\\">1</span>方法中完成初始化工作。</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通常</span>Applet程序在 （ init（）  ）方法中完成初始化工作。</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\"> init（）  </span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:31:04');
INSERT INTO `t_text_content` VALUES (257, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">要编译一个文件名为</span>Test的Java源程序,需在命令控制台窗口输入编译命令:<span class=\\\"gapfilling-span 83f9f298-a263-4ef6-a4b7-dff82c407ca1\\\">1</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">要编译一个文件名为</span>Test的Java源程序,需在命令控制台窗口输入编译命令: （ javac Test.java）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\"> javac Test.java</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:41:35');
INSERT INTO `t_text_content` VALUES (258, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">应用程序编译后生成字节码文件</span>,由 <span class=\\\"gapfilling-span b1b7294b-e246-427d-9c88-79abe7dd0925\\\">1</span>直接解释执行</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">应用程序编译后生成字节码文件</span>,由 （解释器） 直接解释执行</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">解释器）</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:42:24');
INSERT INTO `t_text_content` VALUES (259, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中布尔类型的常量有两种，它们是<span class=\\\"gapfilling-span 4602ea18-0310-468d-9819-f2d25b15f832\\\">1</span>和<span class=\\\"gapfilling-span 9bcaf23b-4e3c-47e6-b9bf-56a3fbeca540\\\">2</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中布尔类型的常量有两种，它们是（true）和（false）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"true\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">false</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:43:28');
INSERT INTO `t_text_content` VALUES (260, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中用于定义小数的关键字有两个：<span class=\\\"gapfilling-span dd93bc98-af54-438c-b497-f7d7e837bf4b\\\">1</span>和<span class=\\\"gapfilling-span 6b7094ba-b995-4c3a-b789-ca25a807bb3f\\\">2</span>，后者精度高于前者</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中用于定义小数的关键字有两个：（foat）和（double），后者精度高于前者</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"float\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">double</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:44:19');
INSERT INTO `t_text_content` VALUES (261, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java中定义一个字符串类型的变量str的语句是：<span class=\\\"gapfilling-span 57cb3aa9-6e1d-4a5a-b635-4555195e412e\\\">1</span>，定义一个具有10个元素的整型数组a的语句是：<span class=\\\"gapfilling-span d46702e7-b566-4687-9ff8-d7607897e385\\\">2</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java中定义一个字符串类型的变量str的语句是：（String str），定义一个具有10个元素的整型数组a的语句是：（int </span><span style=\\\";font-family:宋体;font-size:16px\\\">[]</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;arr=new int</span><span style=\\\";font-family:宋体;font-size:16px\\\">[10]</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">String str</span></p>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">int&nbsp;</span><span style=\\\"font-family: 宋体;\\\">[]</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">&nbsp;arr=new int</span><span style=\\\"font-family: 宋体;\\\">[10]</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:45:17');
INSERT INTO `t_text_content` VALUES (262, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中的变量可分为两种数据类型，分别是</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 8564573a-6c7e-40de-b22d-47bb86854ea7\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">和<span class=\\\"gapfilling-span 48ba9626-a178-46f8-8494-f8026eeb6b6a\\\">2</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">。</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java中的变量可分为两种数据类型，分别是</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">基本数据类型</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">和</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">引</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">用数据类型</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p>基本数据类型</p>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">引</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">用数据类型</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:46:24');
INSERT INTO `t_text_content` VALUES (263, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span>int a[3][2]={{123,345},{34,56},{34,56}}，则a[2][1]=</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span d829f2c7-a82f-45b7-b56c-04df44ea970e\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span>int a[3][2]={{123,345},{34,56},{34,56}}，则a[2][1]=</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">56</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"56\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:47:18');
INSERT INTO `t_text_content` VALUES (264, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span>x=50，y=100则x&gt;=y的逻辑值是<span class=\\\"gapfilling-span 65264e4c-cb39-4ba9-8a4d-f3039034c816\\\">1</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span>x=50，y=100则x&gt;=y的逻辑值是(       false     )</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"false\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:48:15');
INSERT INTO `t_text_content` VALUES (265, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span> int x=10; float y; y=x;这时y的值为 <span class=\\\"gapfilling-span eb311759-e210-4a5b-9885-bd5feb6decc4\\\">1</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">若</span> int x=10; float y; y=x;这时y的值为 （ 10.0   ）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"10.0\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:48:49');
INSERT INTO `t_text_content` VALUES (266, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java表示逻辑值的基本数据类型,称为<span class=\\\"gapfilling-span 3f4e44ba-8f2b-40ce-9508-ea1abc70a8cc\\\">1</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java表示逻辑值的基本数据类型,称为 （布尔型 ）</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p>布尔型</p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:49:29');
INSERT INTO `t_text_content` VALUES (267, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">变量的数据类型转换分为自动类型转换和<span class=\\\"gapfilling-span 94890f1d-fbff-4fe1-9048-86c0c98ca626\\\">1</span></span><span style=\\\"font-family:Times New Roman\\\">两种</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">变量的数据类型转换分为自动类型转换和（</span> <span style=\\\"font-family:Times New Roman\\\">强制转换）两种</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">强制转换</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:50:06');
INSERT INTO `t_text_content` VALUES (268, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java程序中语句执行有三种基本控制结构：顺序、选择和 </span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span dd896ab1-6e76-4581-b25a-8847f6d0f5fe\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java程序中语句执行有三种基本控制结构：顺序、选择和 </span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"循环\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:50:53');
INSERT INTO `t_text_content` VALUES (269, '{\"titleContent\":\"<p><span style=\\\"font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1、</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">do-while语句与while语句的区别在于先执行循环体中的语句再计算条件表达式，所以do-while语句的循环体至少被执行</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 381f8bf8-708c-4359-8bd5-089cf5221b79\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">次。</span></span></p>\",\"analyze\":\"<p><span style=\\\"font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1、</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">do-while语句与while语句的区别在于先执行循环体中的语句再计算条件表达式，所以do-while语句的循环体至少被执行</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">次。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"1\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:51:22');
INSERT INTO `t_text_content` VALUES (270, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>switch语句中，break语句的作用是：执行完一个</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 0e02efa6-8151-4453-82c4-25f500ab9be7\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">分支后跳出</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span b1e09184-909c-453b-a40f-2f34b60dfc82\\\">2</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句。</span></span></p>\",\"analyze\":\"<p><span style=\\\"font-family:&#39;Times New Roman&#39;;font-size:16px\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>switch语句中，break语句的作用是：执行完一个</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">case</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">分支后跳出</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">switch</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"case\",\"score\":1},{\"prefix\":\"2\",\"content\":\"case\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:52:21');
INSERT INTO `t_text_content` VALUES (271, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环语句的判断部分足一个关系表达式或者<span class=\\\"gapfilling-span 96f74f89-1c34-41fe-8fbb-be3f88985b43\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">表达式</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环语句的判断部分足一个关系表达式或者</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">布尔逻辑</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">表达式</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">布尔逻辑</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:52:55');
INSERT INTO `t_text_content` VALUES (272, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一次</span>for循环首先执行<span class=\\\"gapfilling-span 22b2de44-efc5-4f3e-804b-b0686a3ec533\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">最后执行</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span b59b8c7f-be5f-4040-a0f8-d6533ed9f773\\\">2</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一次</span>for循环首先执行</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">初始化</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">最后执行</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">迭代</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">初始化</span>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<p>迭代</p>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 10:54:03');
INSERT INTO `t_text_content` VALUES (273, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">当一个</span>for循环的初始化、终止和迭代部分都是空语句时，该for循环表示一个</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 9afe825e-cc09-48eb-978a-edfcef078a17\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环。</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">当一个</span>for循环的初始化、终止和迭代部分都是空语句时，该for循环表示一个</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">无限</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）循环。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"无限\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:54:45');
INSERT INTO `t_text_content` VALUES (274, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"><span class=\\\"gapfilling-span e6dd2402-e0d3-40c9-a549-baa6883a6e2e\\\">1</span>语句的功能是退出循环，并从紧接着该循环的语句开始继续执行</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span>break）</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句的功能是退出循环，并从紧接着该循环的语句开始继续执行</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">break</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:55:20');
INSERT INTO `t_text_content` VALUES (275, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"><span class=\\\"gapfilling-span 26a7820a-bc14-46a6-a00e-b129b5ec5bf1\\\">1</span>的基本思想是</span>“自己调用自己&quot;</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">递归</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）的基本思想是</span>“自己调用自己&quot;</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">递归</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:55:57');
INSERT INTO `t_text_content` VALUES (276, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">与</span>C</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">++</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语言不一样，</span>Java语言不通过<span class=\\\"gapfilling-span 5a575a0b-bfe4-42a4-a5e5-f78aee479921\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现跳转</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">与</span>C</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">++</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语言不一样，</span>Java语言不通过</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">goto</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现跳转</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">goto</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:56:33');
INSERT INTO `t_text_content` VALUES (277, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过使用，一个</span>“标签化中断”的语句，break语句就可以退出<span class=\\\"gapfilling-span 7259ccc7-fa86-4f7c-a54f-9c5bf0ab19fe\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环。</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过使用，一个</span>“标签化中断”的语句，break语句就可以退出</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">多重嵌套</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">循环。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">多重嵌套</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:57:10');
INSERT INTO `t_text_content` VALUES (278, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">构造方法是一种特殊的成员方法，构造方法名与<span class=\\\"gapfilling-span 4a03fd02-c552-47b9-abe4-78660c53a6d0\\\">1</span>相同</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">构造方法是一种特殊的成员方法，构造方法名与（类名）相同</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p>类名</p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:58:04');
INSERT INTO `t_text_content` VALUES (279, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">构造方法没有<span class=\\\"gapfilling-span 9679c2e2-d32b-4282-85fc-bc2597132691\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">构造方法没有（返回值）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"返回值\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 10:58:44');
INSERT INTO `t_text_content` VALUES (280, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">面向对象程序设计所具有的基本特征是</span></span></p><span class=\\\"gapfilling-span 67e4d3be-e17a-41bb-902c-d50f043a1802\\\">1</span>\",\"analyze\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">面向对象程序设计所具有的基本特征是：</span><p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抽象性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">封装性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">继承</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">多态性</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抽象性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">封装性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">继承</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">性</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">多态性</span></span></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:00:45');
INSERT INTO `t_text_content` VALUES (281, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"><span class=\\\"gapfilling-span 2e272ba0-73f0-48c9-b1dc-6df4ba821df7\\\">1</span>方法是一种仅有方法头，没有具体方法体和操作实现的方法，该方法必须在抽象类之中定义</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（抽象）方法是一种仅有方法头，没有具体方法体和操作实现的方法，该方法必须在抽象类之中定义</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"抽象\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:01:27');
INSERT INTO `t_text_content` VALUES (282, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"><span class=\\\"gapfilling-span 570cdc3b-1fcb-4660-8c51-9562ac8cadfd\\\">1</span>方法是不能被当前类的子类重新定义的方法</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（final）方法是不能被当前类的子类重新定义的方法</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"final\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:02:10');
INSERT INTO `t_text_content` VALUES (283, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">接口中的成员只有静态常量和<span class=\\\"gapfilling-span 471ffdec-a2bc-4aa0-be7f-19ec7270dd14\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">接口中的成员只有静态常量和（抽象方法）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"抽象方法\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:02:53');
INSERT INTO `t_text_content` VALUES (284, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java程序中，通过类的定义只能实现<span class=\\\"gapfilling-span b233bfe5-5e55-4066-827b-694e58b2a57f\\\">1</span>重继承</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java程序中，通过类的定义只能实现（单）重继承</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"单\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:03:32');
INSERT INTO `t_text_content` VALUES (285, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过接口的定义可以实现<span class=\\\"gapfilling-span 74a2dda2-d216-4bd6-b31f-54086602d74a\\\">1</span>重继承关系</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">通过接口的定义可以实现（多）重继承关系</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"多\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:04:15');
INSERT INTO `t_text_content` VALUES (286, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java源文件中最多只能有一个<span class=\\\"gapfilling-span 20bf1fa4-bb63-4e3a-8d39-e058312c78f8\\\">1</span>类，其它类的个数不限</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java源文件中最多只能有一个（public）类，其它类的个数不限</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"public\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:04:54');
INSERT INTO `t_text_content` VALUES (287, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在子类中使用关键字<span class=\\\"gapfilling-span c80fbb14-17b2-4046-80ae-68f2fb78fc0b\\\">1</span>做前缀可调用被子类覆盖的父类中的方法</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在子类中使用关键字（super）做前缀可调用被子类覆盖的父类中的方法</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"super\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:05:31');
INSERT INTO `t_text_content` VALUES (288, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">被</span>static关键字修饰的成员变量被称为<span class=\\\"gapfilling-span 350e7114-21d6-4730-a047-a6008a5530e5\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，它可以被该类所有的实例对象共享</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">被</span>static关键字修饰的成员变量被称为</span><span style=\\\";font-family:宋体;font-size:16px\\\">(</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">静态变量</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">)</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，它可以被该类所有的实例对象共享</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">静态变量</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:06:14');
INSERT INTO `t_text_content` VALUES (289, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java语言中，允许使用已存在的类作为基础创建新的类，这种技术我们称为<span class=\\\"gapfilling-span 490ca0a8-53f3-4eab-828a-81254f8b63ce\\\">1</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>Java语言中，允许使用已存在的类作为基础创建新的类，这种技术我们称为</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">继承</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">继承</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 11:06:56');
INSERT INTO `t_text_content` VALUES (290, '{\"titleContent\":\"<p style=\\\"margin-left: 0px; text-indent: 0px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一个类如果实现一个接口，那么它就需要实现接口中定义的全部</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span a73c7a44-4e92-4922-b5fa-50ff97cf911b\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，否则该类就必须定义成<span class=\\\"gapfilling-span efbd26ac-5401-4c24-a5a4-aaa64f951f67\\\">2</span></span></span></p>\",\"analyze\":\"<p style=\\\"margin-left: 0px; text-indent: 0px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一个类如果实现一个接口，那么它就需要实现接口中定义的全部</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">方法</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，否则该类就必须定义成</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抽象类</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"方法\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">抽象类</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 11:07:48');
INSERT INTO `t_text_content` VALUES (291, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一个类可以从其它的类派生出来，派生出来的类称为</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 39e46642-9cd4-4b63-8571-0837c9e1bb9c\\\">1</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，用于派生的类称为基类或者<span class=\\\"gapfilling-span 0578fe05-1c92-4765-8d8e-0a23b9bd175d\\\">2</span></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">一个类可以从其它的类派生出来，派生出来的类称为</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">子类</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，用于派生的类称为基类或者</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">父类</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"子类\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">父类</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 11:08:33');
INSERT INTO `t_text_content` VALUES (292, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">如果子类想使用父类中的成员，可以通过关键字<span class=\\\"gapfilling-span 15f9cc7f-2c1e-4f4a-9d69-bc4ba54046e4\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">引用父类的成员</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">如果子类想使用父类中的成员，可以通过关键字</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">super</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">引用父类的成员</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">super</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:56:07');
INSERT INTO `t_text_content` VALUES (293, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">带有</span><span class=\\\"gapfilling-span 753a2b77-5c4b-4abb-be86-98b1c0732888\\\">1</span><span style=\\\"font-family:宋体\\\">修饰符的类称为最终类</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">带有（</span>    <span style=\\\"font-family:Times New Roman\\\">final</span><span style=\\\"font-family:宋体\\\">   ）修饰符的类称为最终类</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\"></span>   <span style=\\\"font-family:Times New Roman\\\">final</span><span style=\\\"font-family:宋体\\\"> </span></span></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:56:46');
INSERT INTO `t_text_content` VALUES (294, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\">Java<span style=\\\"font-family:宋体\\\">程序在</span><span style=\\\"font-family:Times New Roman\\\">extends</span><span style=\\\"font-family:宋体\\\">之后只能有一个父类</span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">即</span><span style=\\\"font-family:Times New Roman\\\">extends</span><span style=\\\"font-family:宋体\\\">只能实现<span class=\\\"gapfilling-span 6eb881e2-2a28-4e25-968c-ffc0ff24d320\\\">1</span></span><span style=\\\"font-family:宋体\\\">继承</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\">Java<span style=\\\"font-family:宋体\\\">程序在</span><span style=\\\"font-family:Times New Roman\\\">extends</span><span style=\\\"font-family:宋体\\\">之后只能有一个父类</span><span style=\\\"font-family:Times New Roman\\\">,</span><span style=\\\"font-family:宋体\\\">即</span><span style=\\\"font-family:Times New Roman\\\">extends</span><span style=\\\"font-family:宋体\\\">只能实现</span><span style=\\\"font-family:Times New Roman\\\">(</span><span style=\\\"font-family:宋体\\\">  单   </span><span style=\\\"font-family:Times New Roman\\\">)</span><span style=\\\"font-family:宋体\\\">继承</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: 宋体;\\\">  单   </span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:57:30');
INSERT INTO `t_text_content` VALUES (295, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\">Java<span style=\\\"font-family:宋体\\\">中子类通过关键字</span><span class=\\\"gapfilling-span 837acfe4-4517-4e32-8ee5-bd5c130283ec\\\">1</span><span style=\\\"font-family:宋体\\\">来实现对父类成员的访问</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\">Java<span style=\\\"font-family:宋体\\\">中子类通过关键字（ </span><span style=\\\"font-family:Times New Roman\\\">super</span><span style=\\\"font-family:宋体\\\"> ）来实现对父类成员的访问</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"super\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:58:07');
INSERT INTO `t_text_content` VALUES (296, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">要在类声明中实现接口，需使用关键字<span class=\\\"gapfilling-span 5854ac66-4146-4c7a-9af0-ec10974ec2e2\\\">1</span></span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">要在类声明中实现接口，需使用关键字（</span>implements<span style=\\\"font-family:宋体\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: 宋体;\\\">implements</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:58:40');
INSERT INTO `t_text_content` VALUES (297, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"><span class=\\\"gapfilling-span a09856f6-4d9a-4afa-bc4c-d6122e406ab8\\\">1</span>方法是一种仅有方法头，没有具体方法体和操作实现的方法，该方法必须在抽象类之中定义</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（抽象）方法是一种仅有方法头，没有具体方法体和操作实现的方法，该方法必须在抽象类之中定义</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">抽象</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:59:16');
INSERT INTO `t_text_content` VALUES (298, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">接口中的成员只有静态常里和<span class=\\\"gapfilling-span 53d73370-bcb0-4f7a-90ce-fc1841d6c052\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">接口中的成员只有静态常里和（抽象方法）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">抽象方法</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 12:59:49');
INSERT INTO `t_text_content` VALUES (299, '{\"titleContent\":\"<span style=\\\"font-family:Arial\\\">DateFormat</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">类可以实现字符串和日期类型之间的格式转换，其中将日期类型转换为指定的字符串格式的方法名是<span class=\\\"gapfilling-span f2d0f385-4d15-47a2-a6cd-fa68ff4bbc11\\\">1</span></span>\",\"analyze\":\"<p><span style=\\\"color: #505050; letter-spacing: 0px; font-size: 16px; background: #FFFFFF;\\\"><font face=\\\"Arial\\\">DateFormat</font><span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">类可以实现字符串和日期类型之间的格式转换，其中将日期类型转换为指定的字符串格式的方法名是</span><font face=\\\"宋体\\\">（format）</font></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: 宋体;\\\">format</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:00:53');
INSERT INTO `t_text_content` VALUES (300, '{\"titleContent\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">StringBuilder<span style=\\\"font-family:Lucida Sans Unicode\\\">类是</span><span style=\\\"font-family:Arial\\\">StringBuffer</span><span style=\\\"font-family:Lucida Sans Unicode\\\">类的替代类，两者的共同点是都是可变长度字符串，其中线程安全的类是<span class=\\\"gapfilling-span 81596ef8-29d6-4162-bdf6-78ee3fddfe4a\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">StringBuilder<span style=\\\"font-family:Lucida Sans Unicode\\\">类是</span><span style=\\\"font-family:Arial\\\">StringBuffer</span><span style=\\\"font-family:Lucida Sans Unicode\\\">类的替代类，两者的共同点是都是可变长度字符串，其中线程安全的类是</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">StringBuffer</span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">StringBuffer</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:01:41');
INSERT INTO `t_text_content` VALUES (301, '{\"titleContent\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\"><span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">在</span>Java<span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">中每个</span>Java<span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">基本类型在</span>java.lang<span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">包中都在一个相应的包装类，把基本类型数据转换为对象，其中包装类</span>Integer<span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">是<span class=\\\"gapfilling-span 44546f06-033a-4595-806b-507e96dc5253\\\">1</span></span></span><span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\"><span style=\\\"font-family: &quot;Lucida Sans Unicode&quot;;\\\">的直接子类</span></span>\",\"analyze\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">在</span>Java<span style=\\\"font-family:Lucida Sans Unicode\\\">中每个</span><span style=\\\"font-family:Arial\\\">Java</span><span style=\\\"font-family:Lucida Sans Unicode\\\">基本类型在</span><span style=\\\"font-family:Arial\\\">java.lang</span><span style=\\\"font-family:Lucida Sans Unicode\\\">包中都在一个相应的包装类，把基本类型数据转换为对象，其中包装类</span><span style=\\\"font-family:Arial\\\">Integer</span><span style=\\\"font-family:Lucida Sans Unicode\\\">是</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">Number</span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">的直接子类</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">Number</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:02:22');
INSERT INTO `t_text_content` VALUES (302, '{\"titleContent\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">包装类</span>Integer<span style=\\\"font-family:Lucida Sans Unicode\\\">的静态方法可以将字符串类型的数字</span><span style=\\\"font-family:Arial\\\">”123”</span><span style=\\\"font-family:Lucida Sans Unicode\\\">转换成基本整型变量</span><span style=\\\"font-family:Arial\\\">n</span><span style=\\\"font-family:Lucida Sans Unicode\\\">，其实现语句是：<span class=\\\"gapfilling-span 4bcf8b66-5026-47e7-a7a8-c8d5076b626d\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">包装类</span>Integer<span style=\\\"font-family:Lucida Sans Unicode\\\">的静态方法可以将字符串类型的数字</span><span style=\\\"font-family:Arial\\\">”123”</span><span style=\\\"font-family:Lucida Sans Unicode\\\">转换成基本整型变量</span><span style=\\\"font-family:Arial\\\">n</span><span style=\\\"font-family:Lucida Sans Unicode\\\">，其实现语句是：</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;</span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;Integer.parseInt(“123”)</span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;&nbsp;</span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">Integer.parseInt(“123”)</span><span style=\\\"letter-spacing: 0px; font-family: 宋体; color: #505050; background: #FFFFFF;\\\">&nbsp;&nbsp;</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:03:01');
INSERT INTO `t_text_content` VALUES (303, '{\"titleContent\":\"<p style=\\\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; text-align: justify;\\\"><span style=\\\"font-family: Helvetica;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Helvetica\\\">在</span>Java中使用java.lang包中的<span class=\\\"gapfilling-span a88a69f9-ff3a-41fd-83e9-d2e6099bf979\\\">1</span></span><span style=\\\"font-family: Helvetica;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;<span style=\\\"font-family:Helvetica\\\">类来创建一个字符串对象，它代表一个字符序列可变的字符串，可以通过相应的方法改变这个字符串对象的字符序列</span></span><span style=\\\"font-family: 宋体;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">。</span></span></p>\",\"analyze\":\"<p style=\\\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; text-align: justify;\\\"><span style=\\\"font-family: Helvetica;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Helvetica\\\">在</span>Java中使用java.lang包中的</span><span style=\\\"font-family: 宋体;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: Helvetica;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">StringBuffer/StringBuilder</span><span style=\\\"font-family: 宋体;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span><span style=\\\"font-family: Helvetica;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;<span style=\\\"font-family:Helvetica\\\">类来创建一个字符串对象，它代表一个字符序列可变的字符串，可以通过相应的方法改变这个字符串对象的字符序列</span></span><span style=\\\"font-family: 宋体;color: #3D464D;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; text-align: justify; font-family: Helvetica; color: #3D464D; background: #FFFFFF;\\\">StringBuffer/StringBuilder</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:03:41');
INSERT INTO `t_text_content` VALUES (304, '{\"titleContent\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">String<span style=\\\"font-family:Lucida Sans Unicode\\\">类的<span class=\\\"gapfilling-span 0c522da3-741b-485f-891b-229fb5afd2bd\\\">1</span></span></span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">方法作用是</span> <span style=\\\"font-family:Lucida Sans Unicode\\\">去除字符串首尾的空格</span></span></p>\",\"analyze\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">trim()</span><span style=\\\"letter-spacing: 0px; font-family: 宋体; color: #505050; background: #FFFFFF;\\\">&nbsp;</span>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">trim()</span></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:05:32');
INSERT INTO `t_text_content` VALUES (305, '{\"titleContent\":\"<span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">使用</span><span style=\\\"color: #505050; font-family: Arial; background-color: #FFFFFF;\\\">Math.random( )</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">返回带正号的&nbsp;</span><span style=\\\"color: #505050; font-family: Arial;\\\">double</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">值，该值大于等于</span><span style=\\\"color: #505050; font-family: Arial;\\\">0.0</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">且小于</span><span style=\\\"color: #505050; font-family: Arial;\\\">1.0</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">。使用该函数生成</span><span style=\\\"color: #505050; font-family: Arial;\\\">[30,60]</span><span style=\\\"color: #505050; font-family: &quot;Lucida Sans Unicode&quot;;\\\">之间的随机整数的语句是<span class=\\\"gapfilling-span 982f2e68-d4fd-4e52-b72d-80b447be5959\\\">1</span></span>\",\"analyze\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:Lucida Sans Unicode\\\">使用</span>Math.random( )<span style=\\\"font-family:Lucida Sans Unicode\\\">返回带正号的 </span><span style=\\\"font-family:Arial\\\">double</span><span style=\\\"font-family:Lucida Sans Unicode\\\">值，该值大于等于</span><span style=\\\"font-family:Arial\\\">0.0</span><span style=\\\"font-family:Lucida Sans Unicode\\\">且小于</span><span style=\\\"font-family:Arial\\\">1.0</span><span style=\\\"font-family:Lucida Sans Unicode\\\">。使用该函数生成</span><span style=\\\"font-family:Arial\\\">[30,60]</span><span style=\\\"font-family:Lucida Sans Unicode\\\">之间的随机整数的语句是</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;&nbsp;</span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">(int)(Math.random()*31)+30&nbsp; </span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">(int)(Math.random()*31)+30&nbsp;&nbsp;</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:06:11');
INSERT INTO `t_text_content` VALUES (306, '{\"titleContent\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&quot;hamburger&quot;.substring(4, 8) <span style=\\\"font-family:Lucida Sans Unicode\\\">返回的结果是<span class=\\\"gapfilling-span 9dc9fbc4-c471-439f-9ccf-ba75b351fb77\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&quot;hamburger&quot;.substring(4, 8) <span style=\\\"font-family:Lucida Sans Unicode\\\">返回的结果是</span></span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">（</span></span><span style=\\\"font-family: Arial;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\">&nbsp;urge </span><span style=\\\"font-family: 宋体;color: #505050;letter-spacing: 0;font-size: 16px;background: #FFFFFF\\\"><span style=\\\"font-family:宋体\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"letter-spacing: 0px; font-family: Arial; color: #505050; background: #FFFFFF;\\\">urge&nbsp;</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:06:53');
INSERT INTO `t_text_content` VALUES (307, '{\"titleContent\":\"<p><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">在需要自定义Swing构件的时候，首先要确定使用那种构件类作为所定制构件的<span class=\\\"gapfilling-span ee260f79-f0c5-41c9-9d59-051e78393589\\\">1</span></span><span style=\\\"font-family: 宋体;\\\">一</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">般继承Ipanel类或更具体的Swing类.</span></p><p class=\\\"ueditor-p\\\"><br/></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在需要自定义</span>Swing构件的时候，首先要确定使用那种构件类作为所定制构件的</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（父类）</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">一</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">般继承</span>Ipanel类或更具体的Swing类.</span></p><p class=\\\"ueditor-p\\\"><br/></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">父类</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:09:09');
INSERT INTO `t_text_content` VALUES (308, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Swing的事件处理机制包括<span class=\\\"gapfilling-span c411c1c9-40c8-4f93-b513-15a649440e63\\\">1</span>、事件和事件处理者</span>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Swing的事件处理机制包括（事件源）、事件和事件处理者</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">事件源</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:10:13');
INSERT INTO `t_text_content` VALUES (309, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Java事件处理包括建立事件源</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">、<span class=\\\"gapfilling-span 6e10c586-2f10-432c-98af-c9889c2f91ae\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">和将事件源注册到监听器</span>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java事件处理包括建立事件源</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">、（建立事件监听器）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">和将事件源注册到监听器</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">建立事件监听器</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:11:05');
INSERT INTO `t_text_content` VALUES (310, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Java的图形界面技术经历了两个发展阶段，分别通过提供AWT开发包和<span class=\\\"gapfilling-span 72668fc0-4e3b-4860-9990-0866809914d8\\\">1</span>开发包来实现</span>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Java的图形界面技术经历了两个发展阶段，分别通过提供AWT开发包和（Swing）开发包来实现</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Swing</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:11:49');
INSERT INTO `t_text_content` VALUES (311, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">抽象窗口工具包<span class=\\\"gapfilling-span 52f0a614-5f4e-4f26-a659-62beb3aa6c95\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">提供用于所有Java applets及应用程序中的基本GU</span><span style=\\\"font-family: 宋体;\\\">I</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">组件</span>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抽象窗口工具包</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">AWT（Abstract Window Toolkit）</span>）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">提供用于所有</span>Java applets及应用程序中的基本GU</span><span style=\\\";font-family:宋体;font-size:16px\\\">I</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">组件。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">AWT（Abstract Window Toolkit）</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:12:41');
INSERT INTO `t_text_content` VALUES (312, '{\"titleContent\":\"<p style=\\\"white-space: normal;\\\"><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Window有两种形式：Frame（框架）和<span class=\\\"gapfilling-span cc4788c7-2899-45ec-b6b4-7aeedaf16aff\\\">1</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Window有两种形式：Frame（框架）和</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Dialog（对话框）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span></p><p><br/></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p style=\\\"white-space: normal;\\\"><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Dialog（对话框）</span></p><p style=\\\"white-space: normal;\\\"><br/></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:13:48');
INSERT INTO `t_text_content` VALUES (313, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">容器里的组件的位置和大小是由<span class=\\\"gapfilling-span 75e12fde-a228-4628-a84c-42b8531d365f\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">决定的。</span>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">容器里的组件的位置和大小是由（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">布局管理器</span>）决定的。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">布局管理器</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:14:33');
INSERT INTO `t_text_content` VALUES (314, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">可以使用</span>setLocation</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">()</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">，</span>setSize</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">()</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">或<span class=\\\"gapfilling-span f3439b49-2baf-4052-b76b-186dc271a9e7\\\">1</span>中的任何一中方法设定组件的大小或位</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">置。</span></span></p>\",\"analyze\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">可以使用setLocation</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">()</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">，setSize</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">()</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">或（setBounds()）中的任何一中方法设定组件的大小或位</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">置。</span>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">setBounds()</span></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:15:34');
INSERT INTO `t_text_content` VALUES (315, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">容器Java.awt.Container是<span class=\\\"gapfilling-span e85368f3-3339-4066-a906-3586e4b52d95\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">类的子类</span>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">容器</span>Java.awt.Container是</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Component</span>）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类的子类</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Component</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:16:28');
INSERT INTO `t_text_content` VALUES (316, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">框架的缺省布局管理器是<span class=\\\"gapfilling-span 8d1ad46a-08b8-4b9b-8409-b05649408de2\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">。</span>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">框架的缺省布局管理器是</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">BorderLayout</span>）。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">BorderLayout</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:17:17');
INSERT INTO `t_text_content` VALUES (317, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常处理是由</span><span class=\\\"gapfilling-span ac96ea16-8fdb-4344-a52c-0c7325181435\\\">1</span>、<span class=\\\"gapfilling-span aa0799fd-b726-4fd0-8984-4cfe8bbeea46\\\">2</span>和finally块三个关键所组成的程序块</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常处理是由（</span>try）、（catch）和finally块三个关键所组成的程序块</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">catch</span>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"try\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 13:18:12');
INSERT INTO `t_text_content` VALUES (318, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">catch子句都带一个参数，该参数是某个异常的类及其变量名，catch用该参数去与<span class=\\\"gapfilling-span 99bc3ec1-3ff5-47f2-b496-79a230cdd4b9\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">对象的类进行匹配</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">catch子句都带一个参数，该参数是某个异常的类及其变量名，catch用该参数去与</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">出现异常</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">对象的类进行匹配</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">出现异常</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:18:53');
INSERT INTO `t_text_content` VALUES (319, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java虚拟机能自动处理<span class=\\\"gapfilling-span 5f8a8d62-7226-42bd-83f2-0734f786a01c\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java虚拟机能自动处理</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">运行异常</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">运行异常</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:19:28');
INSERT INTO `t_text_content` VALUES (320, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">捕获异常要求在程序的方法中预先声明，在调用方法时用</span>try-catch-<span class=\\\"gapfilling-span 9cec3c42-ceaa-431c-b6c1-1f70c196ef05\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句捕获并处理。</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">捕获异常要求在程序的方法中预先声明，在调用方法时用</span>try-catch-</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">fimally</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句捕获并处理。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">fimally</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:20:18');
INSERT INTO `t_text_content` VALUES (321, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java语言认为那些可预料和不可预料的出错称为<span class=\\\"gapfilling-span 1d73bf2d-fba7-410a-a1c5-5da6ba35d4ef\\\">1</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java语言认为那些可预料和不可预料的出错称为</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">异常</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">异常</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:20:52');
INSERT INTO `t_text_content` VALUES (322, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">按异常处理不同可以分为运行异常、捕获异常、声明异常和<span class=\\\"gapfilling-span bc965689-68d0-458b-a976-e010dbbdcd74\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">几种。</span></span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">按异常处理不同可以分为运行异常、捕获异常、声明异常和</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抛出异常</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">几种。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">抛出异常</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:21:39');
INSERT INTO `t_text_content` VALUES (323, '{\"titleContent\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抛出异常的程序代码可以是<span class=\\\"gapfilling-span 6343bbdd-5756-47c9-a56c-98a2971bea6e\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">或者是</span>JDK中的某个类，还可以是J</span><span style=\\\";font-family:宋体;font-size:16px\\\">V</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">M</span></p>\",\"analyze\":\"<p style=\\\"line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抛出异常的程序代码可以是</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">自定义的异常</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">或者是</span>JDK中的某个类，还可以是J</span><span style=\\\";font-family:宋体;font-size:16px\\\">V</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">M</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">自定义的异常</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:22:18');
INSERT INTO `t_text_content` VALUES (324, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抛出异常、生成异常对象都可以通过<span class=\\\"gapfilling-span 7dc6d475-df0c-474c-a17d-201b2ac18fc7\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">抛出异常、生成异常对象都可以通过</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">(</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">throws</span><span style=\\\";font-family:宋体;font-size:16px\\\">)</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">throws</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:22:52');
INSERT INTO `t_text_content` VALUES (325, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">捕获异常的统一出口通过<span class=\\\"gapfilling-span c87d00d6-df90-4a7c-855d-c40933e01c49\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">捕获异常的统一出口通过</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">(</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">finally</span><span style=\\\";font-family:宋体;font-size:16px\\\">)</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">语句实现</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">finally</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:23:28');
INSERT INTO `t_text_content` VALUES (326, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java语言的类库中提供了一个</span><span style=\\\";font-family:宋体;font-size:16px\\\"></span><span class=\\\"gapfilling-span 4b59c5b8-93f9-4c3a-b4f5-a3098ddf4613\\\">1</span><span style=\\\";font-family:宋体;font-size:16px\\\"></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类，所有的异常都必须是它的实例</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java语言的类库中提供了一个</span><span style=\\\";font-family:宋体;font-size:16px\\\">(</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Throwable</span><span style=\\\";font-family:宋体;font-size:16px\\\">)</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类，所有的异常都必须是它的实例</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Throwable</span></p>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:24:14');
INSERT INTO `t_text_content` VALUES (327, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">按照流的处理数据的基本单位，</span><span style=\\\"font-family: 宋体;\\\">io</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">流包括</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\"><span class=\\\"gapfilling-span 19f9dbb6-77db-49c3-ad27-28197b26831b\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">&nbsp;和<span class=\\\"gapfilling-span 30ac5ef7-9e91-4bfd-a664-e27f630e8135\\\">2</span></span>\",\"analyze\":\"<p style=\\\"margin-left: 56px; text-indent: 0px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">按照流的处理数据的基本单位，</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">io</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">流包括</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输入流</span>）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">和</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输出流)</span></span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输出流</span>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<p>输入流</p>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 13:25:36');
INSERT INTO `t_text_content` VALUES (328, '{\"titleContent\":\"<p><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">java中，将用于向java程序输入数据的数据源构造成<span class=\\\"gapfilling-span 28763e5d-c4d5-4f32-900d-012df540fc85\\\">1</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">，</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">java通过<span class=\\\"gapfilling-span c46c577f-aaa3-4a4a-836c-384bd585061b\\\">2</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">向目的地输出数据。</span></p>\",\"analyze\":\"<p style=\\\"margin-left:56px;text-indent:0;line-height:27px\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java中，将用于向java程序输入数据的数据源构造成</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输入流</span>），</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java通过</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输出流</span>）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">向目的地输出数据。</span></span></p><p style=\\\"margin-left: 56px; line-height: 27px;\\\"><br/></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输出流</span>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">输出流</span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 13:26:51');
INSERT INTO `t_text_content` VALUES (329, '{\"titleContent\":\"<p><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">java中，所有的输入流类都是</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Inputstream</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">类或者</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Reader</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">类的子类，它们都继承了</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\"></span><span class=\\\"gapfilling-span 92c51ab5-33fd-4f11-b903-5e2ed4dd3546\\\">1</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">方法用于读取数据。所有输出流类都是</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">Outputstream</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">类或者</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">writer</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">类的子类，它们都继承了</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（<span class=\\\"gapfilling-span 3e3c2c24-0c39-49db-b226-28e234213997\\\">2</span></span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">方法用于写数据。</span></p>\",\"analyze\":\"<p style=\\\"margin-left: 56px; text-indent: 0px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java中，所有的输入流类都是</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Inputstream</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类或者</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Reader</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类的子类，它们都继承了</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">read</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（））</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">方法用于读取数据。所有输出流类都是</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">Outputstream</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类或者</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">writer</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类的子类，它们都继承了</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">write</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">方法用于写数据。</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">read</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（）</span></span></p>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">read</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（）</span></span></p>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 13:28:58');
INSERT INTO `t_text_content` VALUES (330, '{\"titleContent\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">DataoutputStream对象dos的当前位置写入一个保存在变量d中的浮</span><span style=\\\"font-family: 宋体;\\\">点</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">数的方法是<span class=\\\"gapfilling-span 967eec9d-cedf-4fe6-832f-5629ffe8afe8\\\">1</span></span>\",\"analyze\":\"<p style=\\\"margin-left: 56px; text-indent: 0px; line-height: 27px;\\\"><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">DataoutputStream对象dos的当前位置写入一个保存在变量d中的浮</span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">点</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">数的方法是</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">dos.writerDouble</span>）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">dos.writerDouble</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:29:43');
INSERT INTO `t_text_content` VALUES (331, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java的io输入输出流中，FileInputStream和FileReader的主要区别是<span class=\\\"gapfilling-span 735586dc-0670-48e5-a838-ac2017746e7b\\\">1</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><br/></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">java的io输入输出流中，FileInputStream和FileReader的主要区别是</span><span style=\\\";font-family:宋体;font-size:16px\\\">(</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">字节流和字符流</span> </span><span style=\\\";font-family:宋体;font-size:16px\\\">)</span><span style=\\\";font-family:宋体;font-size:16px\\\"><br/></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">字节流和字符流 </span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:30:21');
INSERT INTO `t_text_content` VALUES (332, '{\"titleContent\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">根据流的运行方向，流分为输入流和<span class=\\\"gapfilling-span 1be94c98-97cf-4aef-98bf-5090b09c9cf2\\\">1</span></span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">根据流的运行方向，流分为输入流和</span> <span style=\\\"font-family:宋体\\\">（输出流）</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: 宋体;\\\">输出流</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:30:55');
INSERT INTO `t_text_content` VALUES (333, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>java.io包中有4个基本类：InputStream、OutputStream，Reader及 <span class=\\\"gapfilling-span d39730b8-aa78-4c33-97db-0a8e76252e6f\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>java.io包中有4个基本类：InputStream、OutputStream，Reader及 </span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">writer</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">类</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">writer</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:31:27');
INSERT INTO `t_text_content` VALUES (334, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>i0类库中，<span class=\\\"gapfilling-span dc53e719-e738-4af5-aa30-3b83d16cc23f\\\">1</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">和</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span class=\\\"gapfilling-span 63d09f61-6409-40e3-8b20-cb58d2d48beb\\\">2</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\"></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">是处理字节数据的基本</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">输</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">入</span>/输出类</span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">在</span>i0类库中，</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">IrputStream</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">和</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">OutputStream</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">是处理字节数据的基本</span></span><span style=\\\";font-family:宋体;font-size:16px\\\"><span style=\\\"font-family:宋体\\\">输</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">入</span>/输出类</span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">IrputStream</span>\",\"score\":1},{\"prefix\":\"2\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\"><p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">OutputStream</span></p></span>\",\"score\":1}],\"correct\":\"\"}', '2020-03-04 13:32:38');
INSERT INTO `t_text_content` VALUES (335, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">对于文件输出流，使用<span class=\\\"gapfilling-span 02a46145-66f6-4fb7-92c1-c807079218a7\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">方法把数据发送到输出流通道</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">对于文件输出流，使用</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">write</span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:宋体;font-size:16px\\\">&nbsp;<span style=\\\"font-family:宋体\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">方法把数据发送到输出流通道</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">write</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">（</span><span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">）</span><span style=\\\"font-family: 宋体;\\\">&nbsp;</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:33:17');
INSERT INTO `t_text_content` VALUES (336, '{\"titleContent\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">要实现对数据的<span class=\\\"gapfilling-span 1f99605c-d530-4175-9583-f63fd4620bb1\\\">1</span></span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">操作，需要读方法和写方法来完成</span></span></p>\",\"analyze\":\"<p><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">要实现对数据的</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">（</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">读写</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\"><span style=\\\"font-family:Times New Roman\\\">）</span></span><span style=\\\";font-family:&#39;Times New Roman&#39;;font-size:16px\\\">&nbsp;<span style=\\\"font-family:Times New Roman\\\">操作，需要读方法和写方法来完成</span></span></p>\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"<span style=\\\"font-family: &quot;Times New Roman&quot;;\\\">读写</span>\",\"score\":2}],\"correct\":\"\"}', '2020-03-04 13:33:49');
INSERT INTO `t_text_content` VALUES (337, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":153,\"itemOrder\":1},{\"id\":189,\"itemOrder\":2},{\"id\":101,\"itemOrder\":3},{\"id\":158,\"itemOrder\":4},{\"id\":49,\"itemOrder\":5},{\"id\":73,\"itemOrder\":6},{\"id\":117,\"itemOrder\":7},{\"id\":183,\"itemOrder\":8},{\"id\":213,\"itemOrder\":9},{\"id\":11,\"itemOrder\":10},{\"id\":103,\"itemOrder\":11},{\"id\":141,\"itemOrder\":12},{\"id\":150,\"itemOrder\":13},{\"id\":43,\"itemOrder\":14},{\"id\":38,\"itemOrder\":15},{\"id\":10,\"itemOrder\":16},{\"id\":178,\"itemOrder\":17},{\"id\":203,\"itemOrder\":18},{\"id\":59,\"itemOrder\":19},{\"id\":152,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":65,\"itemOrder\":1},{\"id\":27,\"itemOrder\":2},{\"id\":90,\"itemOrder\":3},{\"id\":173,\"itemOrder\":4},{\"id\":137,\"itemOrder\":5},{\"id\":176,\"itemOrder\":6},{\"id\":61,\"itemOrder\":7},{\"id\":109,\"itemOrder\":8},{\"id\":172,\"itemOrder\":9},{\"id\":112,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":275,\"itemOrder\":1},{\"id\":307,\"itemOrder\":2},{\"id\":286,\"itemOrder\":3},{\"id\":316,\"itemOrder\":4},{\"id\":322,\"itemOrder\":5},{\"id\":303,\"itemOrder\":6},{\"id\":315,\"itemOrder\":7},{\"id\":262,\"itemOrder\":8},{\"id\":304,\"itemOrder\":9},{\"id\":298,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":20,\"questionItems\":[{\"id\":224,\"itemOrder\":1},{\"id\":227,\"itemOrder\":2},{\"id\":233,\"itemOrder\":3},{\"id\":234,\"itemOrder\":4}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":236,\"itemOrder\":1}]}]', '2020-03-04 13:50:15');
INSERT INTO `t_text_content` VALUES (338, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":213,\"itemOrder\":1},{\"id\":107,\"itemOrder\":2},{\"id\":118,\"itemOrder\":3},{\"id\":139,\"itemOrder\":4},{\"id\":6,\"itemOrder\":5},{\"id\":165,\"itemOrder\":6},{\"id\":178,\"itemOrder\":7},{\"id\":184,\"itemOrder\":8},{\"id\":78,\"itemOrder\":9},{\"id\":204,\"itemOrder\":10},{\"id\":15,\"itemOrder\":11},{\"id\":158,\"itemOrder\":12},{\"id\":8,\"itemOrder\":13},{\"id\":121,\"itemOrder\":14},{\"id\":72,\"itemOrder\":15},{\"id\":122,\"itemOrder\":16},{\"id\":156,\"itemOrder\":17},{\"id\":157,\"itemOrder\":18},{\"id\":183,\"itemOrder\":19},{\"id\":115,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":133,\"itemOrder\":21},{\"id\":219,\"itemOrder\":22},{\"id\":137,\"itemOrder\":23},{\"id\":68,\"itemOrder\":24},{\"id\":29,\"itemOrder\":25},{\"id\":67,\"itemOrder\":26},{\"id\":172,\"itemOrder\":27},{\"id\":35,\"itemOrder\":28},{\"id\":201,\"itemOrder\":29},{\"id\":129,\"itemOrder\":30}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":278,\"itemOrder\":31},{\"id\":293,\"itemOrder\":32},{\"id\":295,\"itemOrder\":33},{\"id\":290,\"itemOrder\":34},{\"id\":262,\"itemOrder\":35},{\"id\":244,\"itemOrder\":36},{\"id\":279,\"itemOrder\":37},{\"id\":249,\"itemOrder\":38},{\"id\":294,\"itemOrder\":39},{\"id\":303,\"itemOrder\":40}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":231,\"itemOrder\":41},{\"id\":224,\"itemOrder\":42},{\"id\":230,\"itemOrder\":43},{\"id\":23,\"itemOrder\":44},{\"id\":223,\"itemOrder\":45}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":24,\"itemOrder\":46}]}]', '2020-03-04 13:57:05');
INSERT INTO `t_text_content` VALUES (339, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":207,\"itemOrder\":1},{\"id\":206,\"itemOrder\":2},{\"id\":205,\"itemOrder\":3},{\"id\":204,\"itemOrder\":4},{\"id\":202,\"itemOrder\":5},{\"id\":203,\"itemOrder\":6},{\"id\":191,\"itemOrder\":7},{\"id\":190,\"itemOrder\":8},{\"id\":189,\"itemOrder\":9},{\"id\":188,\"itemOrder\":10},{\"id\":175,\"itemOrder\":11},{\"id\":177,\"itemOrder\":12},{\"id\":165,\"itemOrder\":13},{\"id\":166,\"itemOrder\":14},{\"id\":167,\"itemOrder\":15},{\"id\":164,\"itemOrder\":16},{\"id\":162,\"itemOrder\":17},{\"id\":161,\"itemOrder\":18},{\"id\":163,\"itemOrder\":19},{\"id\":160,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":220,\"itemOrder\":21},{\"id\":221,\"itemOrder\":22},{\"id\":219,\"itemOrder\":23},{\"id\":218,\"itemOrder\":24},{\"id\":200,\"itemOrder\":25},{\"id\":201,\"itemOrder\":26},{\"id\":199,\"itemOrder\":27},{\"id\":198,\"itemOrder\":28},{\"id\":197,\"itemOrder\":29},{\"id\":196,\"itemOrder\":30}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":325,\"itemOrder\":31},{\"id\":326,\"itemOrder\":32},{\"id\":323,\"itemOrder\":33},{\"id\":321,\"itemOrder\":34},{\"id\":322,\"itemOrder\":35},{\"id\":324,\"itemOrder\":36},{\"id\":320,\"itemOrder\":37},{\"id\":319,\"itemOrder\":38},{\"id\":318,\"itemOrder\":39},{\"id\":317,\"itemOrder\":40}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":234,\"itemOrder\":41},{\"id\":235,\"itemOrder\":42},{\"id\":232,\"itemOrder\":43},{\"id\":231,\"itemOrder\":44},{\"id\":233,\"itemOrder\":45}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":239,\"itemOrder\":46}]}]', '2020-03-04 14:08:51');
INSERT INTO `t_text_content` VALUES (340, '[{\"name\":\"一、单选题\",\"totalScore\":22,\"questionItems\":[{\"id\":39,\"itemOrder\":1},{\"id\":124,\"itemOrder\":2},{\"id\":145,\"itemOrder\":3},{\"id\":154,\"itemOrder\":4},{\"id\":50,\"itemOrder\":5},{\"id\":40,\"itemOrder\":6},{\"id\":107,\"itemOrder\":7},{\"id\":185,\"itemOrder\":8},{\"id\":217,\"itemOrder\":9},{\"id\":1,\"itemOrder\":10},{\"id\":59,\"itemOrder\":11},{\"id\":162,\"itemOrder\":12},{\"id\":180,\"itemOrder\":13},{\"id\":127,\"itemOrder\":14},{\"id\":120,\"itemOrder\":15},{\"id\":17,\"itemOrder\":16},{\"id\":191,\"itemOrder\":17},{\"id\":74,\"itemOrder\":18},{\"id\":75,\"itemOrder\":19},{\"id\":206,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":137,\"itemOrder\":1},{\"id\":65,\"itemOrder\":2},{\"id\":114,\"itemOrder\":3},{\"id\":200,\"itemOrder\":4},{\"id\":27,\"itemOrder\":5},{\"id\":195,\"itemOrder\":6},{\"id\":171,\"itemOrder\":7},{\"id\":134,\"itemOrder\":8},{\"id\":168,\"itemOrder\":9},{\"id\":113,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":295,\"itemOrder\":1},{\"id\":281,\"itemOrder\":2},{\"id\":263,\"itemOrder\":3},{\"id\":309,\"itemOrder\":4},{\"id\":260,\"itemOrder\":5},{\"id\":288,\"itemOrder\":6},{\"id\":273,\"itemOrder\":7},{\"id\":251,\"itemOrder\":8},{\"id\":284,\"itemOrder\":9},{\"id\":303,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":0,\"questionItems\":[]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":237,\"itemOrder\":1}]}]', '2020-03-04 14:12:09');
INSERT INTO `t_text_content` VALUES (341, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":166,\"itemOrder\":1},{\"id\":178,\"itemOrder\":2},{\"id\":143,\"itemOrder\":3},{\"id\":101,\"itemOrder\":4},{\"id\":103,\"itemOrder\":5},{\"id\":97,\"itemOrder\":6},{\"id\":167,\"itemOrder\":7},{\"id\":59,\"itemOrder\":8},{\"id\":128,\"itemOrder\":9},{\"id\":106,\"itemOrder\":10},{\"id\":212,\"itemOrder\":11},{\"id\":121,\"itemOrder\":12},{\"id\":48,\"itemOrder\":13},{\"id\":79,\"itemOrder\":14},{\"id\":202,\"itemOrder\":15},{\"id\":186,\"itemOrder\":16},{\"id\":149,\"itemOrder\":17},{\"id\":73,\"itemOrder\":18},{\"id\":208,\"itemOrder\":19},{\"id\":78,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":197,\"itemOrder\":21},{\"id\":168,\"itemOrder\":22},{\"id\":218,\"itemOrder\":23},{\"id\":25,\"itemOrder\":24},{\"id\":114,\"itemOrder\":25},{\"id\":196,\"itemOrder\":26},{\"id\":26,\"itemOrder\":27},{\"id\":170,\"itemOrder\":28},{\"id\":90,\"itemOrder\":29},{\"id\":91,\"itemOrder\":30}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":288,\"itemOrder\":31},{\"id\":323,\"itemOrder\":32},{\"id\":262,\"itemOrder\":33},{\"id\":269,\"itemOrder\":34},{\"id\":284,\"itemOrder\":35},{\"id\":246,\"itemOrder\":36},{\"id\":307,\"itemOrder\":37},{\"id\":295,\"itemOrder\":38},{\"id\":261,\"itemOrder\":39},{\"id\":289,\"itemOrder\":40}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":230,\"itemOrder\":41},{\"id\":229,\"itemOrder\":42},{\"id\":228,\"itemOrder\":43},{\"id\":232,\"itemOrder\":44},{\"id\":222,\"itemOrder\":45}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":236,\"itemOrder\":46}]}]', '2020-03-04 14:14:43');
INSERT INTO `t_text_content` VALUES (342, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-03-15 09:55:39');
INSERT INTO `t_text_content` VALUES (343, '{\"titleContent\":\"a&#39;a&#39;a\",\"analyze\":\"啊啊啊\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"啊啊啊\",\"score\":null},{\"prefix\":\"B\",\"content\":\"啊啊啊\",\"score\":null},{\"prefix\":\"C\",\"content\":\"啊啊啊\",\"score\":null},{\"prefix\":\"D\",\"content\":\"a&#39;a&#39;a\",\"score\":null}],\"correct\":\"A\"}', '2020-03-15 09:59:00');
INSERT INTO `t_text_content` VALUES (344, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":13,\"itemOrder\":1},{\"id\":40,\"itemOrder\":2},{\"id\":191,\"itemOrder\":3},{\"id\":184,\"itemOrder\":4},{\"id\":152,\"itemOrder\":5},{\"id\":122,\"itemOrder\":6},{\"id\":165,\"itemOrder\":7},{\"id\":148,\"itemOrder\":8},{\"id\":115,\"itemOrder\":9},{\"id\":161,\"itemOrder\":10},{\"id\":52,\"itemOrder\":11},{\"id\":157,\"itemOrder\":12},{\"id\":123,\"itemOrder\":13},{\"id\":73,\"itemOrder\":14},{\"id\":206,\"itemOrder\":15},{\"id\":185,\"itemOrder\":16},{\"id\":74,\"itemOrder\":17},{\"id\":150,\"itemOrder\":18},{\"id\":51,\"itemOrder\":19},{\"id\":80,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":135,\"itemOrder\":1},{\"id\":136,\"itemOrder\":2},{\"id\":108,\"itemOrder\":3},{\"id\":91,\"itemOrder\":4},{\"id\":92,\"itemOrder\":5},{\"id\":89,\"itemOrder\":6},{\"id\":109,\"itemOrder\":7},{\"id\":192,\"itemOrder\":8},{\"id\":194,\"itemOrder\":9},{\"id\":28,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":294,\"itemOrder\":1},{\"id\":270,\"itemOrder\":2},{\"id\":297,\"itemOrder\":3},{\"id\":281,\"itemOrder\":4},{\"id\":267,\"itemOrder\":5},{\"id\":260,\"itemOrder\":6},{\"id\":242,\"itemOrder\":7},{\"id\":324,\"itemOrder\":8},{\"id\":243,\"itemOrder\":9},{\"id\":301,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":225,\"itemOrder\":1},{\"id\":227,\"itemOrder\":2},{\"id\":234,\"itemOrder\":3},{\"id\":235,\"itemOrder\":4},{\"id\":224,\"itemOrder\":5}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":237,\"itemOrder\":1}]}]', '2020-03-15 11:26:04');
INSERT INTO `t_text_content` VALUES (345, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"2\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-03-17 18:14:48');
INSERT INTO `t_text_content` VALUES (346, '[{\"name\":\"一、单选题\",\"totalScore\":40,\"questionItems\":[{\"id\":325,\"itemOrder\":1},{\"id\":326,\"itemOrder\":2},{\"id\":322,\"itemOrder\":3},{\"id\":323,\"itemOrder\":4},{\"id\":324,\"itemOrder\":5},{\"id\":321,\"itemOrder\":6},{\"id\":320,\"itemOrder\":7},{\"id\":318,\"itemOrder\":8},{\"id\":319,\"itemOrder\":9},{\"id\":317,\"itemOrder\":10},{\"id\":316,\"itemOrder\":11},{\"id\":315,\"itemOrder\":12},{\"id\":313,\"itemOrder\":13},{\"id\":312,\"itemOrder\":14},{\"id\":314,\"itemOrder\":15},{\"id\":311,\"itemOrder\":16},{\"id\":310,\"itemOrder\":17},{\"id\":309,\"itemOrder\":18},{\"id\":308,\"itemOrder\":19},{\"id\":307,\"itemOrder\":20}]}]', '2020-03-17 18:16:23');
INSERT INTO `t_text_content` VALUES (347, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":10,\"itemOrder\":1},{\"id\":189,\"itemOrder\":2},{\"id\":71,\"itemOrder\":3},{\"id\":82,\"itemOrder\":4},{\"id\":181,\"itemOrder\":5},{\"id\":46,\"itemOrder\":6},{\"id\":158,\"itemOrder\":7},{\"id\":98,\"itemOrder\":8},{\"id\":101,\"itemOrder\":9},{\"id\":102,\"itemOrder\":10},{\"id\":118,\"itemOrder\":11},{\"id\":215,\"itemOrder\":12},{\"id\":105,\"itemOrder\":13},{\"id\":151,\"itemOrder\":14},{\"id\":191,\"itemOrder\":15},{\"id\":44,\"itemOrder\":16},{\"id\":190,\"itemOrder\":17},{\"id\":47,\"itemOrder\":18},{\"id\":124,\"itemOrder\":19},{\"id\":213,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":198,\"itemOrder\":1},{\"id\":174,\"itemOrder\":2},{\"id\":66,\"itemOrder\":3},{\"id\":68,\"itemOrder\":4},{\"id\":138,\"itemOrder\":5},{\"id\":90,\"itemOrder\":6},{\"id\":194,\"itemOrder\":7},{\"id\":4,\"itemOrder\":8},{\"id\":172,\"itemOrder\":9},{\"id\":129,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":325,\"itemOrder\":1},{\"id\":273,\"itemOrder\":2},{\"id\":297,\"itemOrder\":3},{\"id\":293,\"itemOrder\":4},{\"id\":311,\"itemOrder\":5},{\"id\":304,\"itemOrder\":6},{\"id\":244,\"itemOrder\":7},{\"id\":301,\"itemOrder\":8},{\"id\":309,\"itemOrder\":9},{\"id\":253,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":224,\"itemOrder\":1},{\"id\":235,\"itemOrder\":2},{\"id\":228,\"itemOrder\":3},{\"id\":232,\"itemOrder\":4},{\"id\":222,\"itemOrder\":5}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":239,\"itemOrder\":1}]}]', '2020-03-17 18:17:10');
INSERT INTO `t_text_content` VALUES (348, '{\"titleContent\":\"11\",\"analyze\":\"11\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"11\",\"score\":null},{\"prefix\":\"B\",\"content\":\"11\",\"score\":null},{\"prefix\":\"C\",\"content\":\"11\",\"score\":null},{\"prefix\":\"D\",\"content\":\"11\",\"score\":null}],\"correct\":\"A\"}', '2020-03-17 18:24:37');
INSERT INTO `t_text_content` VALUES (349, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":73,\"itemOrder\":1},{\"id\":72,\"itemOrder\":2},{\"id\":59,\"itemOrder\":3},{\"id\":70,\"itemOrder\":4},{\"id\":57,\"itemOrder\":5},{\"id\":71,\"itemOrder\":6},{\"id\":56,\"itemOrder\":7},{\"id\":55,\"itemOrder\":8},{\"id\":50,\"itemOrder\":9},{\"id\":54,\"itemOrder\":10},{\"id\":53,\"itemOrder\":11},{\"id\":52,\"itemOrder\":12},{\"id\":51,\"itemOrder\":13},{\"id\":49,\"itemOrder\":14},{\"id\":48,\"itemOrder\":15},{\"id\":46,\"itemOrder\":16},{\"id\":47,\"itemOrder\":17},{\"id\":45,\"itemOrder\":18},{\"id\":44,\"itemOrder\":19},{\"id\":43,\"itemOrder\":20}]}]', '2020-03-17 18:25:52');
INSERT INTO `t_text_content` VALUES (350, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":162,\"itemOrder\":1},{\"id\":100,\"itemOrder\":2},{\"id\":54,\"itemOrder\":3},{\"id\":190,\"itemOrder\":4},{\"id\":33,\"itemOrder\":5},{\"id\":71,\"itemOrder\":6},{\"id\":189,\"itemOrder\":7},{\"id\":142,\"itemOrder\":8},{\"id\":158,\"itemOrder\":9},{\"id\":115,\"itemOrder\":10},{\"id\":207,\"itemOrder\":11},{\"id\":45,\"itemOrder\":12},{\"id\":152,\"itemOrder\":13},{\"id\":11,\"itemOrder\":14},{\"id\":75,\"itemOrder\":15},{\"id\":83,\"itemOrder\":16},{\"id\":95,\"itemOrder\":17},{\"id\":155,\"itemOrder\":18},{\"id\":16,\"itemOrder\":19},{\"id\":121,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":84,\"itemOrder\":1},{\"id\":221,\"itemOrder\":2},{\"id\":85,\"itemOrder\":3},{\"id\":29,\"itemOrder\":4},{\"id\":64,\"itemOrder\":5},{\"id\":176,\"itemOrder\":6},{\"id\":60,\"itemOrder\":7},{\"id\":173,\"itemOrder\":8},{\"id\":195,\"itemOrder\":9},{\"id\":62,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":308,\"itemOrder\":1},{\"id\":260,\"itemOrder\":2},{\"id\":241,\"itemOrder\":3},{\"id\":269,\"itemOrder\":4},{\"id\":291,\"itemOrder\":5},{\"id\":250,\"itemOrder\":6},{\"id\":292,\"itemOrder\":7},{\"id\":309,\"itemOrder\":8},{\"id\":246,\"itemOrder\":9},{\"id\":240,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":224,\"itemOrder\":1},{\"id\":225,\"itemOrder\":2},{\"id\":235,\"itemOrder\":3},{\"id\":222,\"itemOrder\":4},{\"id\":230,\"itemOrder\":5}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":24,\"itemOrder\":1}]}]', '2020-03-17 18:26:42');
INSERT INTO `t_text_content` VALUES (351, '{\"titleContent\":\"11\",\"analyze\":\"11\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"11\",\"score\":null},{\"prefix\":\"B\",\"content\":\"11\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"11\",\"score\":null}],\"correct\":\"A\"}', '2020-03-18 12:30:50');
INSERT INTO `t_text_content` VALUES (352, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":331,\"itemOrder\":1},{\"id\":214,\"itemOrder\":2},{\"id\":216,\"itemOrder\":3},{\"id\":217,\"itemOrder\":4},{\"id\":215,\"itemOrder\":5},{\"id\":213,\"itemOrder\":6},{\"id\":212,\"itemOrder\":7},{\"id\":211,\"itemOrder\":8},{\"id\":208,\"itemOrder\":9},{\"id\":210,\"itemOrder\":10},{\"id\":207,\"itemOrder\":11},{\"id\":209,\"itemOrder\":12},{\"id\":206,\"itemOrder\":13},{\"id\":202,\"itemOrder\":14},{\"id\":205,\"itemOrder\":15},{\"id\":191,\"itemOrder\":16},{\"id\":203,\"itemOrder\":17},{\"id\":204,\"itemOrder\":18},{\"id\":190,\"itemOrder\":19},{\"id\":189,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":221,\"itemOrder\":21},{\"id\":219,\"itemOrder\":22},{\"id\":201,\"itemOrder\":23},{\"id\":200,\"itemOrder\":24},{\"id\":220,\"itemOrder\":25},{\"id\":218,\"itemOrder\":26},{\"id\":199,\"itemOrder\":27},{\"id\":197,\"itemOrder\":28},{\"id\":198,\"itemOrder\":29},{\"id\":196,\"itemOrder\":30}]}]', '2020-03-18 12:32:06');
INSERT INTO `t_text_content` VALUES (353, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":122,\"itemOrder\":1},{\"id\":54,\"itemOrder\":2},{\"id\":210,\"itemOrder\":3},{\"id\":205,\"itemOrder\":4},{\"id\":121,\"itemOrder\":5},{\"id\":178,\"itemOrder\":6},{\"id\":216,\"itemOrder\":7},{\"id\":96,\"itemOrder\":8},{\"id\":59,\"itemOrder\":9},{\"id\":185,\"itemOrder\":10},{\"id\":181,\"itemOrder\":11},{\"id\":151,\"itemOrder\":12},{\"id\":126,\"itemOrder\":13},{\"id\":142,\"itemOrder\":14},{\"id\":82,\"itemOrder\":15},{\"id\":75,\"itemOrder\":16},{\"id\":43,\"itemOrder\":17},{\"id\":104,\"itemOrder\":18},{\"id\":93,\"itemOrder\":19},{\"id\":39,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":68,\"itemOrder\":21},{\"id\":88,\"itemOrder\":22},{\"id\":194,\"itemOrder\":23},{\"id\":174,\"itemOrder\":24},{\"id\":92,\"itemOrder\":25},{\"id\":109,\"itemOrder\":26},{\"id\":89,\"itemOrder\":27},{\"id\":137,\"itemOrder\":28},{\"id\":219,\"itemOrder\":29},{\"id\":64,\"itemOrder\":30}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":315,\"itemOrder\":31},{\"id\":259,\"itemOrder\":32},{\"id\":287,\"itemOrder\":33},{\"id\":280,\"itemOrder\":34},{\"id\":308,\"itemOrder\":35},{\"id\":291,\"itemOrder\":36},{\"id\":253,\"itemOrder\":37},{\"id\":269,\"itemOrder\":38},{\"id\":279,\"itemOrder\":39},{\"id\":302,\"itemOrder\":40}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":23,\"itemOrder\":41},{\"id\":226,\"itemOrder\":42},{\"id\":231,\"itemOrder\":43},{\"id\":235,\"itemOrder\":44},{\"id\":225,\"itemOrder\":45}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":239,\"itemOrder\":46}]}]', '2020-03-18 12:32:51');
INSERT INTO `t_text_content` VALUES (354, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-03-31 14:20:22');
INSERT INTO `t_text_content` VALUES (355, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-03-31 14:20:45');
INSERT INTO `t_text_content` VALUES (356, '[{\"name\":\"一、单选题\",\"totalScore\":21,\"questionItems\":[{\"id\":117,\"itemOrder\":1},{\"id\":177,\"itemOrder\":2},{\"id\":155,\"itemOrder\":3},{\"id\":115,\"itemOrder\":4},{\"id\":6,\"itemOrder\":5},{\"id\":100,\"itemOrder\":6},{\"id\":190,\"itemOrder\":7},{\"id\":328,\"itemOrder\":8},{\"id\":333,\"itemOrder\":9},{\"id\":160,\"itemOrder\":10},{\"id\":76,\"itemOrder\":11},{\"id\":327,\"itemOrder\":12},{\"id\":209,\"itemOrder\":13},{\"id\":329,\"itemOrder\":14},{\"id\":204,\"itemOrder\":15},{\"id\":128,\"itemOrder\":16},{\"id\":15,\"itemOrder\":17},{\"id\":46,\"itemOrder\":18},{\"id\":116,\"itemOrder\":19},{\"id\":140,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":135,\"itemOrder\":1},{\"id\":219,\"itemOrder\":2},{\"id\":168,\"itemOrder\":3},{\"id\":60,\"itemOrder\":4},{\"id\":66,\"itemOrder\":5},{\"id\":197,\"itemOrder\":6},{\"id\":170,\"itemOrder\":7},{\"id\":69,\"itemOrder\":8},{\"id\":26,\"itemOrder\":9},{\"id\":131,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":325,\"itemOrder\":1},{\"id\":317,\"itemOrder\":2},{\"id\":259,\"itemOrder\":3},{\"id\":262,\"itemOrder\":4},{\"id\":254,\"itemOrder\":5},{\"id\":267,\"itemOrder\":6},{\"id\":311,\"itemOrder\":7},{\"id\":287,\"itemOrder\":8},{\"id\":297,\"itemOrder\":9},{\"id\":281,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":225,\"itemOrder\":1},{\"id\":235,\"itemOrder\":2},{\"id\":234,\"itemOrder\":3},{\"id\":224,\"itemOrder\":4},{\"id\":226,\"itemOrder\":5}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":239,\"itemOrder\":1}]}]', '2020-04-04 20:27:41');
INSERT INTO `t_text_content` VALUES (357, '{\"titleContent\":\"2\",\"analyze\":\"2\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"2\",\"score\":null},{\"prefix\":\"B\",\"content\":\"2\",\"score\":null},{\"prefix\":\"C\",\"content\":\"2\",\"score\":null},{\"prefix\":\"D\",\"content\":\"2\",\"score\":null}],\"correct\":\"A\"}', '2020-04-11 12:16:08');
INSERT INTO `t_text_content` VALUES (358, '{\"titleContent\":\"1\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-04-11 14:06:45');
INSERT INTO `t_text_content` VALUES (367, '{\"titleContent\":\"测试\",\"analyze\":\"暂无\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"B\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"C\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"D\",\"content\":\"测2\",\"score\":null}],\"correct\":\"D\"}', '2020-04-25 17:55:14');
INSERT INTO `t_text_content` VALUES (368, '{\"titleContent\":\"<p>测试</p>\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"A\"}', '2020-04-28 15:14:59');
INSERT INTO `t_text_content` VALUES (369, '{\"titleContent\":\"导入1\",\"analyze\":\"暂无\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"测1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"测1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"测1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"测1\",\"score\":null}],\"correct\":\"D\"}', '2020-04-28 15:15:19');
INSERT INTO `t_text_content` VALUES (370, '{\"titleContent\":\"导入2\",\"analyze\":\"暂无\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"B\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"C\",\"content\":\"测2\",\"score\":null},{\"prefix\":\"D\",\"content\":\"测2\",\"score\":null}],\"correct\":\"D\"}', '2020-04-28 15:15:19');
INSERT INTO `t_text_content` VALUES (371, '[{\"name\":\"一、单选题\",\"totalScore\":46,\"questionItems\":[{\"id\":347,\"itemOrder\":1},{\"id\":346,\"itemOrder\":2},{\"id\":216,\"itemOrder\":3},{\"id\":215,\"itemOrder\":4},{\"id\":345,\"itemOrder\":5},{\"id\":217,\"itemOrder\":6},{\"id\":214,\"itemOrder\":7},{\"id\":213,\"itemOrder\":8}]}]', '2020-04-28 15:16:19');
INSERT INTO `t_text_content` VALUES (372, '[{\"name\":\"一、单选题\",\"totalScore\":20,\"questionItems\":[{\"id\":142,\"itemOrder\":1},{\"id\":118,\"itemOrder\":2},{\"id\":115,\"itemOrder\":3},{\"id\":214,\"itemOrder\":4},{\"id\":216,\"itemOrder\":5},{\"id\":10,\"itemOrder\":6},{\"id\":150,\"itemOrder\":7},{\"id\":43,\"itemOrder\":8},{\"id\":157,\"itemOrder\":9},{\"id\":75,\"itemOrder\":10},{\"id\":55,\"itemOrder\":11},{\"id\":48,\"itemOrder\":12},{\"id\":120,\"itemOrder\":13},{\"id\":40,\"itemOrder\":14},{\"id\":213,\"itemOrder\":15},{\"id\":80,\"itemOrder\":16},{\"id\":59,\"itemOrder\":17},{\"id\":151,\"itemOrder\":18},{\"id\":41,\"itemOrder\":19},{\"id\":44,\"itemOrder\":20}]},{\"name\":\"二、多选题\",\"totalScore\":20,\"questionItems\":[{\"id\":221,\"itemOrder\":1},{\"id\":35,\"itemOrder\":2},{\"id\":87,\"itemOrder\":3},{\"id\":132,\"itemOrder\":4},{\"id\":84,\"itemOrder\":5},{\"id\":169,\"itemOrder\":6},{\"id\":114,\"itemOrder\":7},{\"id\":201,\"itemOrder\":8},{\"id\":113,\"itemOrder\":9},{\"id\":85,\"itemOrder\":10}]},{\"name\":\"三、填空题\",\"totalScore\":20,\"questionItems\":[{\"id\":294,\"itemOrder\":1},{\"id\":245,\"itemOrder\":2},{\"id\":248,\"itemOrder\":3},{\"id\":280,\"itemOrder\":4},{\"id\":300,\"itemOrder\":5},{\"id\":299,\"itemOrder\":6},{\"id\":272,\"itemOrder\":7},{\"id\":277,\"itemOrder\":8},{\"id\":241,\"itemOrder\":9},{\"id\":242,\"itemOrder\":10}]},{\"name\":\"四、简答题\",\"totalScore\":25,\"questionItems\":[{\"id\":228,\"itemOrder\":1},{\"id\":223,\"itemOrder\":2},{\"id\":230,\"itemOrder\":3},{\"id\":234,\"itemOrder\":4},{\"id\":231,\"itemOrder\":5}]},{\"name\":\"五、编程题\",\"totalScore\":15,\"questionItems\":[{\"id\":239,\"itemOrder\":1}]}]', '2020-04-28 15:17:11');
INSERT INTO `t_text_content` VALUES (373, '{\"titleContent\":\"多选题\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"A\",\"content\":\"1\",\"score\":null},{\"prefix\":\"B\",\"content\":\"1\",\"score\":null},{\"prefix\":\"C\",\"content\":\"1\",\"score\":null},{\"prefix\":\"D\",\"content\":\"1\",\"score\":null}],\"correct\":\"\"}', '2020-04-28 15:27:24');
INSERT INTO `t_text_content` VALUES (374, '{\"titleContent\":\"填空题<span class=\\\"gapfilling-span b3dc3be7-63df-4530-aa07-3d2c1587362b\\\">1</span>\",\"analyze\":\"1\",\"questionItemObjects\":[{\"prefix\":\"1\",\"content\":\"11\",\"score\":2}],\"correct\":\"\"}', '2020-04-28 15:27:51');
INSERT INTO `t_text_content` VALUES (375, '{\"titleContent\":\"<p>填空题</p>\",\"analyze\":\"11\",\"questionItemObjects\":[],\"correct\":\"1111\"}', '2020-04-28 15:28:14');
INSERT INTO `t_text_content` VALUES (376, '{\"titleContent\":\"<p>编程题</p>\",\"analyze\":\"a&#39;a\",\"questionItemObjects\":[],\"correct\":\"a&#39;a&#39;a\"}', '2020-04-28 15:28:37');

-- ----------------------------
-- Table structure for t_user
-- ----------------------------
DROP TABLE IF EXISTS `t_user`;
CREATE TABLE `t_user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_uuid` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `user_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '用户名',
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `real_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '真实姓名',
  `age` int(11) NULL DEFAULT NULL,
  `sex` int(11) NULL DEFAULT NULL COMMENT '1.男 2女',
  `birth_day` datetime(0) NULL DEFAULT NULL,
  `user_level` int(11) NULL DEFAULT NULL COMMENT '学生年级(1-12)',
  `phone` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `role` int(11) NULL DEFAULT NULL COMMENT '1.学生 2.老师 3.管理员',
  `status` int(11) NULL DEFAULT NULL COMMENT '1.启用 2禁用',
  `image_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '头像地址',
  `create_time` datetime(0) NULL DEFAULT NULL,
  `modify_time` datetime(0) NULL DEFAULT NULL,
  `last_active_time` datetime(0) NULL DEFAULT NULL,
  `deleted` bit(1) NULL DEFAULT NULL COMMENT '是否删除',
  `wx_open_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '微信openId',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_user
-- ----------------------------
INSERT INTO `t_user` VALUES (1, 'd2d29da2-dcb3-4013-b874-727626236f47', 'student', 'D1AGFL+Gx37t0NPG4d6biYP5Z31cNbwhK5w1lUeiHB2zagqbk8efYfSjYoh1Z/j1dkiRjHU+b0EpwzCh8IGsksJjzD65ci5LsnodQVf4Uj6D3pwoscXGqmkjjpzvSJbx42swwNTA+QoDU8YLo7JhtbUK2X0qCjFGpd+8eJ5BGvk=', '学生', 17, 1, '2019-09-07 18:54:40', 12, '15007133738', 1, 1, NULL, '2019-09-07 18:55:02', NULL, NULL, b'0', 'oaWyB4kWcyKeJ441iQcnJXm14Uhg');
INSERT INTO `t_user` VALUES (2, '52045f5f-a13f-4ccc-93dd-f7ee8270ad4c', 'admin', 'D1AGFL+Gx37t0NPG4d6biYP5Z31cNbwhK5w1lUeiHB2zagqbk8efYfSjYoh1Z/j1dkiRjHU+b0EpwzCh8IGsksJjzD65ci5LsnodQVf4Uj6D3pwoscXGqmkjjpzvSJbx42swwNTA+QoDU8YLo7JhtbUK2X0qCjFGpd+8eJ5BGvk=', '管理员', 29, 1, '2020-04-09 00:00:00', NULL, NULL, 3, 1, NULL, '2019-09-07 18:56:21', '2020-04-11 14:26:37', NULL, b'0', NULL);
INSERT INTO `t_user` VALUES (3, '52379b13-5c01-43f9-a427-899ae57989c0', 'alvis', 'fnanT3ob78rUADLF8Mky+N29gFyP5952C861ONTSn0A9n8VXU414aSqIVghU+YOVc6UHltxMM+AVymdZPssw+zIUiJtbWu4+zYH4iDfpIHyJW1Tb01IVs3nJPId5YMVWd9rMBBkavA73zOjdwkm13HcV98bFMxyhIqoNuuWdCSY=', 'alvis', NULL, NULL, NULL, 1, NULL, 1, 1, NULL, '2019-09-07 06:54:49', NULL, '2019-09-07 06:54:49', b'0', NULL);
INSERT INTO `t_user` VALUES (4, '4e182be9-3ee0-45a4-8329-fd79aee3b8e2', 'teacher', 'D1AGFL+Gx37t0NPG4d6biYP5Z31cNbwhK5w1lUeiHB2zagqbk8efYfSjYoh1Z/j1dkiRjHU+b0EpwzCh8IGsksJjzD65ci5LsnodQVf4Uj6D3pwoscXGqmkjjpzvSJbx42swwNTA+QoDU8YLo7JhtbUK2X0qCjFGpd+8eJ5BGvk=', '32', NULL, NULL, NULL, NULL, NULL, 2, 1, NULL, '2019-09-07 06:56:28', NULL, '2019-09-07 06:56:28', b'0', NULL);
INSERT INTO `t_user` VALUES (5, 'f0cfa3c5-7131-48af-a2be-b8c792018daa', 'bbbvc', 'kc0DETYvKgh9AYyb2oV+b7Z9+DOrcrAbp5F/KMFCtLE5hPyhXy7kHqksNEcCvsPgW2jygkGF6Gfj5iyhRwA/fhacW/LR7+8zOGUQ3hyejPygLW+H2VEkUVnV/LlkD5ge7chqAdBRUkU7uW6MoFGscPL1oTTLusjE5e1hRmHkdWQ=', '2323', NULL, NULL, NULL, NULL, NULL, 3, 1, NULL, '2019-09-07 06:57:16', NULL, '2019-09-07 06:57:16', b'0', NULL);
INSERT INTO `t_user` VALUES (6, 'd47d40cb-30ed-4b94-bcf4-e129e107e8d8', 'shouting', 'cYx92gcfWtBWvL81cK+YFrY3dmzHDzuHQBqzrMOoOcGqeuaUqoCUrsmAdbvm5oTW023nsoZu2kIlkKOhqnpoAH3rITKEVWq9xxJj0QBphZCYUxt2+dI/NDYWV/bTRPqvQ+mv310e45jBYxJOPoedpdWNb1iRYDjUlQXCLfoxMuo=', '张三', 20, 2, '2020-02-29 00:00:00', NULL, '12345678909', 2, 1, NULL, '2020-03-03 14:48:57', '2020-04-26 16:01:19', '2020-03-03 14:48:57', b'0', NULL);
INSERT INTO `t_user` VALUES (7, '4bf9d7eb-8343-4e46-9a70-b3674535a04a', '我是管理员', 'OSUAnRfRpaO3W1fEmjhZfXyL7YheF/OzzYrzupDiJZRFGTrMnQ8xnOG4gixcgBeKAe2nAoZGMsZ3Qr+GW311YvtwmbJ2h7gD9Odfh9zKaqHrEnBbIRSFptl6ptKVZbgg7bE2ISa5/SiuWBCt7S2I89ei2OJ4hhykVV4XvJEHjX8=', '管理员1', 12, 1, '2020-03-23 00:00:00', NULL, '12345678909', 3, 2, NULL, '2020-03-11 14:37:33', '2020-04-10 22:21:49', '2020-03-11 14:37:33', b'0', NULL);
INSERT INTO `t_user` VALUES (8, '43efa598-6fbd-4c4f-b75b-a8e605367c9a', '1', 'U4ijqpWSCfNBL9uHix2vONImRL7iCQSTWWmh4Hrfai2LkJJNNkBzq3/uOcbeJ+zRG9GFzKQeNBDLVYYcKTZBxV23094a5MgWp6mfx6hbqgBw74meNRWCzDqdWlxgA/dVIv7Z8hHVVgrBRQDOn+I4pjQ0Drh8pBlUvoOvbJBz/9Q=', '1', 1, NULL, NULL, NULL, NULL, 2, 1, NULL, '2020-03-31 10:50:44', NULL, '2020-03-31 10:50:44', b'1', NULL);
INSERT INTO `t_user` VALUES (9, '8b025121-f009-4d27-945f-8d49e915565f', '12345', 'eZ14nBULr8OV9oYR4buFOGs1DHCq10N23Ab9wORItMNa2Sl1A2bNYLVNQug6XrS58HMmno7WKaIxvKDaexZs6AV2jucUjClBRFGyS+5yKWtoeIqVHI2wto7b4d8QEYfZbImPguIe/oJKtd13bJbiqA64T900iQkcQuF42NASfbQ=', '1', NULL, NULL, NULL, NULL, NULL, 2, 2, NULL, '2020-03-31 11:19:37', '2020-03-31 12:32:21', '2020-03-31 11:19:37', b'1', NULL);
INSERT INTO `t_user` VALUES (10, 'b78ed3a7-1b0d-4b21-ac8f-7286df5aa823', '54321', 'GkBXOND8qPHtaRFjutHhxR8ol08fHsaohK2mbbDwOySs0ky8LpT9P/VsbOHL1oibozmJ0EzIffo0cM6pdgA/a2vzj5uxVXF8iGw+wyLyeVagKYgP+sEMGWPxYAW/CYUtBfk3ecIbdCMwqjAhguGbGzYYY6t14UKSXbTACrOmsUI=', '1', NULL, NULL, NULL, NULL, NULL, 3, 1, NULL, '2020-03-31 12:53:59', NULL, '2020-03-31 12:53:59', b'1', NULL);
INSERT INTO `t_user` VALUES (11, '04c290bf-5114-4ebc-8d66-33215cac96c7', '22222222', 'kmtHgRZzKmq3aQeryT+wEwzkLoQNkE+kMgR7EDJ5t4MatAnARF1rd6VL2heaFZJioSm067FU/V/uwpJ8iw+bLErIR1cmcPO/eA2d9AHuHfvR/35N59Kz/no34GYIajfpkrnEHAnjMMA3ZX1J0C2GM9w7j14iQCbKuk9V4I0I3lQ=', '22', NULL, NULL, NULL, NULL, NULL, 2, 1, NULL, '2020-04-25 14:22:56', NULL, '2020-04-25 14:22:56', b'0', NULL);
INSERT INTO `t_user` VALUES (12, 'af0d257f-5094-4465-a53b-74071d6d3fb9', 'abcde', 'FqLag82CVbAYj1DFV/ENPJgwJyD25WRxLfBOX3NkouyCfZ0sjkLpgSUxrYL9JF7ADcnSHrFuObsgQeYBnL3aPjrIqKDE/y0ZbpQGLTz2JPzpiUzBoYo0AM5Kt1igIWQZxuGxNvLzmozWX1pFkfTms8CuXqqHCnULChe39u7qwJs=', 'abcde', NULL, NULL, NULL, NULL, NULL, 2, 2, NULL, '2020-04-28 15:12:49', '2020-04-28 15:13:46', '2020-04-28 15:12:49', b'1', NULL);

-- ----------------------------
-- Table structure for t_user_event_log
-- ----------------------------
DROP TABLE IF EXISTS `t_user_event_log`;
CREATE TABLE `t_user_event_log`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NULL DEFAULT NULL COMMENT '用户id',
  `user_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '用户名',
  `real_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '真实姓名',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '内容',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 323 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of t_user_event_log
-- ----------------------------
INSERT INTO `t_user_event_log` VALUES (1, 1, 'student', '学生', 'student 登录了学之思考试系统', '2019-09-07 06:49:23');
INSERT INTO `t_user_event_log` VALUES (2, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2019-09-07 06:51:35');
INSERT INTO `t_user_event_log` VALUES (3, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2019-09-07 07:00:38');
INSERT INTO `t_user_event_log` VALUES (4, 1, 'student', '学生', 'student 登录了学之思考试系统', '2019-09-07 07:00:44');
INSERT INTO `t_user_event_log` VALUES (5, 1, 'student', '学生', 'student 提交试卷：固定试卷 得分：3 耗时：4 秒', '2019-09-07 07:07:09');
INSERT INTO `t_user_event_log` VALUES (6, 1, 'student', '学生', 'student 批改试卷：固定试卷 得分：6', '2019-09-07 07:07:20');
INSERT INTO `t_user_event_log` VALUES (7, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-11 05:32:48');
INSERT INTO `t_user_event_log` VALUES (8, 1, 'student', '学生', 'student 登录了学之思考试系统', '2020-02-11 05:52:41');
INSERT INTO `t_user_event_log` VALUES (9, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-11 05:53:54');
INSERT INTO `t_user_event_log` VALUES (10, 1, 'student', '学生', 'student 登录了学之思考试系统', '2020-02-14 21:23:17');
INSERT INTO `t_user_event_log` VALUES (11, 1, 'student', '学生', 'student 提交试卷：电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷 得分：0.2 耗时：39 秒', '2020-02-14 21:25:12');
INSERT INTO `t_user_event_log` VALUES (12, 1, 'student', '学生', 'student 提交试卷：电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷 得分：0.2 耗时：2分 42秒', '2020-02-14 21:30:08');
INSERT INTO `t_user_event_log` VALUES (13, 1, 'student', '学生', 'student 提交试卷：电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷 得分：2 耗时：11 秒', '2020-02-14 21:37:07');
INSERT INTO `t_user_event_log` VALUES (14, 1, 'student', '学生', 'student 登录了学之思考试系统', '2020-02-15 23:01:27');
INSERT INTO `t_user_event_log` VALUES (15, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-15 23:06:18');
INSERT INTO `t_user_event_log` VALUES (16, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-02-15 23:06:25');
INSERT INTO `t_user_event_log` VALUES (17, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-15 23:06:29');
INSERT INTO `t_user_event_log` VALUES (18, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-02-15 23:22:41');
INSERT INTO `t_user_event_log` VALUES (19, 1, 'student', '学生', 'student 登录了学之思考试系统', '2020-02-15 23:22:55');
INSERT INTO `t_user_event_log` VALUES (20, 4, 'teacher', '32', 'teacher 登录了学之思考试系统', '2020-02-15 23:30:15');
INSERT INTO `t_user_event_log` VALUES (21, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-15 23:30:21');
INSERT INTO `t_user_event_log` VALUES (22, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-02-15 23:30:25');
INSERT INTO `t_user_event_log` VALUES (23, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-15 23:32:30');
INSERT INTO `t_user_event_log` VALUES (24, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-02-15 23:38:22');
INSERT INTO `t_user_event_log` VALUES (25, 4, 'teacher', '32', 'teacher 登录了学之思考试系统', '2020-02-15 23:38:30');
INSERT INTO `t_user_event_log` VALUES (26, 4, 'teacher', '32', 'teacher 登录了学之思考试系统', '2020-02-15 23:46:25');
INSERT INTO `t_user_event_log` VALUES (27, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-16 11:47:11');
INSERT INTO `t_user_event_log` VALUES (28, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-16 15:25:33');
INSERT INTO `t_user_event_log` VALUES (29, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-16 22:10:42');
INSERT INTO `t_user_event_log` VALUES (30, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-17 22:46:29');
INSERT INTO `t_user_event_log` VALUES (31, 1, 'student', '学生', 'student 登录了学之思考试系统', '2020-02-17 22:48:09');
INSERT INTO `t_user_event_log` VALUES (32, 1, 'student', '学生', 'student 提交试卷：电子信息科学学院《数据结构（本科）》课程期中考试试卷 ( A )卷 得分：0 耗时：6 秒', '2020-02-17 23:09:17');
INSERT INTO `t_user_event_log` VALUES (33, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-17 23:16:22');
INSERT INTO `t_user_event_log` VALUES (34, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-17 23:24:20');
INSERT INTO `t_user_event_log` VALUES (35, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-18 16:31:14');
INSERT INTO `t_user_event_log` VALUES (36, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-18 17:55:36');
INSERT INTO `t_user_event_log` VALUES (37, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-18 22:56:36');
INSERT INTO `t_user_event_log` VALUES (38, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-19 09:29:36');
INSERT INTO `t_user_event_log` VALUES (39, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-19 19:54:53');
INSERT INTO `t_user_event_log` VALUES (40, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-20 22:26:22');
INSERT INTO `t_user_event_log` VALUES (41, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-21 00:04:39');
INSERT INTO `t_user_event_log` VALUES (42, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-21 16:01:49');
INSERT INTO `t_user_event_log` VALUES (43, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-21 21:11:12');
INSERT INTO `t_user_event_log` VALUES (44, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-21 22:02:39');
INSERT INTO `t_user_event_log` VALUES (45, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-02-22 15:52:56');
INSERT INTO `t_user_event_log` VALUES (46, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-03 14:47:03');
INSERT INTO `t_user_event_log` VALUES (47, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-03 14:49:10');
INSERT INTO `t_user_event_log` VALUES (48, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-03 14:49:21');
INSERT INTO `t_user_event_log` VALUES (49, 6, 'shouting', '张三', 'shouting 登出了学之思考试系统', '2020-03-03 14:52:04');
INSERT INTO `t_user_event_log` VALUES (50, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-03 14:52:14');
INSERT INTO `t_user_event_log` VALUES (51, 6, 'shouting', '张三', 'shouting 登出了学之思考试系统', '2020-03-03 14:56:23');
INSERT INTO `t_user_event_log` VALUES (52, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-03 14:56:25');
INSERT INTO `t_user_event_log` VALUES (53, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-03 15:43:01');
INSERT INTO `t_user_event_log` VALUES (54, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 09:12:23');
INSERT INTO `t_user_event_log` VALUES (55, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 12:54:15');
INSERT INTO `t_user_event_log` VALUES (56, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 16:09:12');
INSERT INTO `t_user_event_log` VALUES (57, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 16:42:22');
INSERT INTO `t_user_event_log` VALUES (58, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 16:42:26');
INSERT INTO `t_user_event_log` VALUES (59, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 16:56:21');
INSERT INTO `t_user_event_log` VALUES (60, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 16:56:23');
INSERT INTO `t_user_event_log` VALUES (61, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 17:34:16');
INSERT INTO `t_user_event_log` VALUES (62, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:18');
INSERT INTO `t_user_event_log` VALUES (63, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:21');
INSERT INTO `t_user_event_log` VALUES (64, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:30');
INSERT INTO `t_user_event_log` VALUES (65, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:32');
INSERT INTO `t_user_event_log` VALUES (66, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:33');
INSERT INTO `t_user_event_log` VALUES (67, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:34:59');
INSERT INTO `t_user_event_log` VALUES (68, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:35:45');
INSERT INTO `t_user_event_log` VALUES (69, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:35:46');
INSERT INTO `t_user_event_log` VALUES (70, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:36:04');
INSERT INTO `t_user_event_log` VALUES (71, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 17:37:23');
INSERT INTO `t_user_event_log` VALUES (72, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:37:25');
INSERT INTO `t_user_event_log` VALUES (73, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:37:27');
INSERT INTO `t_user_event_log` VALUES (74, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:38:07');
INSERT INTO `t_user_event_log` VALUES (75, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 17:51:10');
INSERT INTO `t_user_event_log` VALUES (76, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:51:12');
INSERT INTO `t_user_event_log` VALUES (77, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 17:55:02');
INSERT INTO `t_user_event_log` VALUES (78, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 17:55:03');
INSERT INTO `t_user_event_log` VALUES (79, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:00:02');
INSERT INTO `t_user_event_log` VALUES (80, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 18:00:21');
INSERT INTO `t_user_event_log` VALUES (81, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:00:27');
INSERT INTO `t_user_event_log` VALUES (82, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:00:28');
INSERT INTO `t_user_event_log` VALUES (83, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:01:04');
INSERT INTO `t_user_event_log` VALUES (84, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 18:01:42');
INSERT INTO `t_user_event_log` VALUES (85, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:01:44');
INSERT INTO `t_user_event_log` VALUES (86, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:01:46');
INSERT INTO `t_user_event_log` VALUES (87, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:01:47');
INSERT INTO `t_user_event_log` VALUES (88, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:01:52');
INSERT INTO `t_user_event_log` VALUES (89, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:02:56');
INSERT INTO `t_user_event_log` VALUES (90, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 18:02:59');
INSERT INTO `t_user_event_log` VALUES (91, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:05:05');
INSERT INTO `t_user_event_log` VALUES (92, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 18:06:22');
INSERT INTO `t_user_event_log` VALUES (93, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:08:03');
INSERT INTO `t_user_event_log` VALUES (94, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-04 18:08:38');
INSERT INTO `t_user_event_log` VALUES (95, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-04 18:08:39');
INSERT INTO `t_user_event_log` VALUES (96, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-05 11:21:59');
INSERT INTO `t_user_event_log` VALUES (97, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-05 12:44:20');
INSERT INTO `t_user_event_log` VALUES (98, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-09 12:58:00');
INSERT INTO `t_user_event_log` VALUES (99, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-09 17:43:04');
INSERT INTO `t_user_event_log` VALUES (100, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-09 17:43:09');
INSERT INTO `t_user_event_log` VALUES (101, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-09 17:43:12');
INSERT INTO `t_user_event_log` VALUES (102, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-10 19:52:55');
INSERT INTO `t_user_event_log` VALUES (103, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-10 20:29:19');
INSERT INTO `t_user_event_log` VALUES (104, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-10 20:29:21');
INSERT INTO `t_user_event_log` VALUES (105, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-11 11:36:54');
INSERT INTO `t_user_event_log` VALUES (106, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-11 12:25:58');
INSERT INTO `t_user_event_log` VALUES (107, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-11 13:14:16');
INSERT INTO `t_user_event_log` VALUES (108, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-11 14:32:05');
INSERT INTO `t_user_event_log` VALUES (109, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 12:31:26');
INSERT INTO `t_user_event_log` VALUES (110, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 14:40:48');
INSERT INTO `t_user_event_log` VALUES (111, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 18:42:19');
INSERT INTO `t_user_event_log` VALUES (112, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-12 18:42:24');
INSERT INTO `t_user_event_log` VALUES (113, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 18:44:07');
INSERT INTO `t_user_event_log` VALUES (114, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 19:39:49');
INSERT INTO `t_user_event_log` VALUES (115, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-12 20:32:24');
INSERT INTO `t_user_event_log` VALUES (116, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 17:22:51');
INSERT INTO `t_user_event_log` VALUES (117, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 18:16:39');
INSERT INTO `t_user_event_log` VALUES (118, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 19:35:32');
INSERT INTO `t_user_event_log` VALUES (119, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-13 20:04:27');
INSERT INTO `t_user_event_log` VALUES (120, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 20:12:30');
INSERT INTO `t_user_event_log` VALUES (121, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 21:14:27');
INSERT INTO `t_user_event_log` VALUES (122, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-13 21:54:17');
INSERT INTO `t_user_event_log` VALUES (123, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 11:54:13');
INSERT INTO `t_user_event_log` VALUES (124, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 12:41:03');
INSERT INTO `t_user_event_log` VALUES (125, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 14:02:16');
INSERT INTO `t_user_event_log` VALUES (126, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 15:08:40');
INSERT INTO `t_user_event_log` VALUES (127, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 17:28:53');
INSERT INTO `t_user_event_log` VALUES (128, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-14 17:59:08');
INSERT INTO `t_user_event_log` VALUES (129, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 08:49:40');
INSERT INTO `t_user_event_log` VALUES (130, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 09:27:50');
INSERT INTO `t_user_event_log` VALUES (131, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 11:24:28');
INSERT INTO `t_user_event_log` VALUES (132, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-15 11:24:31');
INSERT INTO `t_user_event_log` VALUES (133, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-15 11:24:37');
INSERT INTO `t_user_event_log` VALUES (134, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 12:01:28');
INSERT INTO `t_user_event_log` VALUES (135, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 14:09:05');
INSERT INTO `t_user_event_log` VALUES (136, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-15 22:09:53');
INSERT INTO `t_user_event_log` VALUES (137, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-16 09:44:12');
INSERT INTO `t_user_event_log` VALUES (138, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-16 15:41:42');
INSERT INTO `t_user_event_log` VALUES (139, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-16 17:52:48');
INSERT INTO `t_user_event_log` VALUES (140, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-16 19:29:13');
INSERT INTO `t_user_event_log` VALUES (141, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 09:40:15');
INSERT INTO `t_user_event_log` VALUES (142, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 14:53:12');
INSERT INTO `t_user_event_log` VALUES (143, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 16:07:33');
INSERT INTO `t_user_event_log` VALUES (144, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-17 16:26:39');
INSERT INTO `t_user_event_log` VALUES (145, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 16:27:21');
INSERT INTO `t_user_event_log` VALUES (146, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 17:56:04');
INSERT INTO `t_user_event_log` VALUES (147, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-17 18:06:09');
INSERT INTO `t_user_event_log` VALUES (148, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 18:08:12');
INSERT INTO `t_user_event_log` VALUES (149, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-17 18:13:27');
INSERT INTO `t_user_event_log` VALUES (150, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 18:13:59');
INSERT INTO `t_user_event_log` VALUES (151, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-17 18:23:17');
INSERT INTO `t_user_event_log` VALUES (152, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 18:23:32');
INSERT INTO `t_user_event_log` VALUES (153, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-17 18:28:39');
INSERT INTO `t_user_event_log` VALUES (154, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 18:33:13');
INSERT INTO `t_user_event_log` VALUES (155, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 19:23:54');
INSERT INTO `t_user_event_log` VALUES (156, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-17 20:47:56');
INSERT INTO `t_user_event_log` VALUES (157, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 12:28:37');
INSERT INTO `t_user_event_log` VALUES (158, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-18 12:29:31');
INSERT INTO `t_user_event_log` VALUES (159, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 12:29:52');
INSERT INTO `t_user_event_log` VALUES (160, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-18 12:34:41');
INSERT INTO `t_user_event_log` VALUES (161, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 12:40:12');
INSERT INTO `t_user_event_log` VALUES (162, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 16:45:56');
INSERT INTO `t_user_event_log` VALUES (163, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 18:15:26');
INSERT INTO `t_user_event_log` VALUES (164, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 19:44:14');
INSERT INTO `t_user_event_log` VALUES (165, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 21:27:35');
INSERT INTO `t_user_event_log` VALUES (166, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-18 21:35:36');
INSERT INTO `t_user_event_log` VALUES (167, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-18 21:36:12');
INSERT INTO `t_user_event_log` VALUES (168, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-19 13:49:36');
INSERT INTO `t_user_event_log` VALUES (169, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-19 14:29:44');
INSERT INTO `t_user_event_log` VALUES (170, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-19 15:06:36');
INSERT INTO `t_user_event_log` VALUES (171, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-19 17:18:22');
INSERT INTO `t_user_event_log` VALUES (172, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-19 19:42:53');
INSERT INTO `t_user_event_log` VALUES (173, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 15:27:43');
INSERT INTO `t_user_event_log` VALUES (174, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 16:14:06');
INSERT INTO `t_user_event_log` VALUES (175, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 17:21:20');
INSERT INTO `t_user_event_log` VALUES (176, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 19:23:40');
INSERT INTO `t_user_event_log` VALUES (177, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 20:06:07');
INSERT INTO `t_user_event_log` VALUES (178, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-20 21:53:17');
INSERT INTO `t_user_event_log` VALUES (179, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 10:13:00');
INSERT INTO `t_user_event_log` VALUES (180, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 12:29:45');
INSERT INTO `t_user_event_log` VALUES (181, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 14:12:20');
INSERT INTO `t_user_event_log` VALUES (182, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-21 14:26:26');
INSERT INTO `t_user_event_log` VALUES (183, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-21 14:26:29');
INSERT INTO `t_user_event_log` VALUES (184, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 16:15:19');
INSERT INTO `t_user_event_log` VALUES (185, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-21 16:45:16');
INSERT INTO `t_user_event_log` VALUES (186, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 16:45:17');
INSERT INTO `t_user_event_log` VALUES (187, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-21 16:45:25');
INSERT INTO `t_user_event_log` VALUES (188, 6, 'shouting', '张三', 'shouting 登录了学之思考试系统', '2020-03-21 16:45:27');
INSERT INTO `t_user_event_log` VALUES (189, 6, 'shouting', '张三', 'shouting 登出了学之思考试系统', '2020-03-21 16:45:34');
INSERT INTO `t_user_event_log` VALUES (190, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 16:45:37');
INSERT INTO `t_user_event_log` VALUES (191, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-21 20:45:57');
INSERT INTO `t_user_event_log` VALUES (192, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 09:53:25');
INSERT INTO `t_user_event_log` VALUES (193, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 09:57:46');
INSERT INTO `t_user_event_log` VALUES (194, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 10:52:23');
INSERT INTO `t_user_event_log` VALUES (195, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-22 10:52:35');
INSERT INTO `t_user_event_log` VALUES (196, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 10:52:42');
INSERT INTO `t_user_event_log` VALUES (197, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-22 10:54:03');
INSERT INTO `t_user_event_log` VALUES (198, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 10:54:05');
INSERT INTO `t_user_event_log` VALUES (199, 2, 'admin', '管理员', 'admin 登出了学之思考试系统', '2020-03-22 11:13:58');
INSERT INTO `t_user_event_log` VALUES (200, 2, 'admin', '管理员', 'admin 登录了学之思考试系统', '2020-03-22 13:10:43');
INSERT INTO `t_user_event_log` VALUES (201, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-03-22 14:27:12');
INSERT INTO `t_user_event_log` VALUES (202, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 14:27:14');
INSERT INTO `t_user_event_log` VALUES (203, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 15:20:28');
INSERT INTO `t_user_event_log` VALUES (204, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 17:17:41');
INSERT INTO `t_user_event_log` VALUES (205, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 18:14:59');
INSERT INTO `t_user_event_log` VALUES (206, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 20:08:02');
INSERT INTO `t_user_event_log` VALUES (207, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-22 21:52:10');
INSERT INTO `t_user_event_log` VALUES (208, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-23 14:45:31');
INSERT INTO `t_user_event_log` VALUES (209, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-23 19:57:15');
INSERT INTO `t_user_event_log` VALUES (210, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-23 20:36:35');
INSERT INTO `t_user_event_log` VALUES (211, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-24 15:01:04');
INSERT INTO `t_user_event_log` VALUES (212, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-24 18:34:37');
INSERT INTO `t_user_event_log` VALUES (213, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-24 20:14:35');
INSERT INTO `t_user_event_log` VALUES (214, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-25 13:22:14');
INSERT INTO `t_user_event_log` VALUES (215, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-25 13:54:16');
INSERT INTO `t_user_event_log` VALUES (216, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-25 18:18:23');
INSERT INTO `t_user_event_log` VALUES (217, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-25 22:07:57');
INSERT INTO `t_user_event_log` VALUES (218, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 12:37:46');
INSERT INTO `t_user_event_log` VALUES (219, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 14:07:16');
INSERT INTO `t_user_event_log` VALUES (220, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 17:11:35');
INSERT INTO `t_user_event_log` VALUES (221, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 17:31:59');
INSERT INTO `t_user_event_log` VALUES (222, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 17:32:35');
INSERT INTO `t_user_event_log` VALUES (223, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-26 21:25:09');
INSERT INTO `t_user_event_log` VALUES (224, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-27 12:42:21');
INSERT INTO `t_user_event_log` VALUES (225, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-27 13:38:07');
INSERT INTO `t_user_event_log` VALUES (226, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-28 13:33:50');
INSERT INTO `t_user_event_log` VALUES (227, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-28 14:18:31');
INSERT INTO `t_user_event_log` VALUES (228, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-28 15:46:13');
INSERT INTO `t_user_event_log` VALUES (229, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-28 18:19:55');
INSERT INTO `t_user_event_log` VALUES (230, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-28 19:57:42');
INSERT INTO `t_user_event_log` VALUES (231, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-31 10:30:37');
INSERT INTO `t_user_event_log` VALUES (232, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-03-31 10:51:10');
INSERT INTO `t_user_event_log` VALUES (233, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-31 10:51:23');
INSERT INTO `t_user_event_log` VALUES (234, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-03-31 11:03:28');
INSERT INTO `t_user_event_log` VALUES (235, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-31 11:18:48');
INSERT INTO `t_user_event_log` VALUES (236, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-31 12:10:44');
INSERT INTO `t_user_event_log` VALUES (237, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-03-31 13:57:17');
INSERT INTO `t_user_event_log` VALUES (238, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 10:11:48');
INSERT INTO `t_user_event_log` VALUES (239, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 10:54:12');
INSERT INTO `t_user_event_log` VALUES (240, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 12:13:27');
INSERT INTO `t_user_event_log` VALUES (241, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 16:24:40');
INSERT INTO `t_user_event_log` VALUES (242, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 18:14:04');
INSERT INTO `t_user_event_log` VALUES (243, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-04 20:16:44');
INSERT INTO `t_user_event_log` VALUES (244, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-08 15:55:12');
INSERT INTO `t_user_event_log` VALUES (245, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-08 17:17:22');
INSERT INTO `t_user_event_log` VALUES (246, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-08 18:20:54');
INSERT INTO `t_user_event_log` VALUES (247, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-08 21:30:05');
INSERT INTO `t_user_event_log` VALUES (248, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-10 19:35:53');
INSERT INTO `t_user_event_log` VALUES (249, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-10 21:30:27');
INSERT INTO `t_user_event_log` VALUES (250, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-10 22:41:59');
INSERT INTO `t_user_event_log` VALUES (251, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-10 22:42:00');
INSERT INTO `t_user_event_log` VALUES (252, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-10 22:42:26');
INSERT INTO `t_user_event_log` VALUES (253, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-10 22:43:13');
INSERT INTO `t_user_event_log` VALUES (254, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-11 10:14:22');
INSERT INTO `t_user_event_log` VALUES (255, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-11 12:11:20');
INSERT INTO `t_user_event_log` VALUES (256, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-11 14:25:38');
INSERT INTO `t_user_event_log` VALUES (257, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-11 14:25:40');
INSERT INTO `t_user_event_log` VALUES (258, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-11 14:59:03');
INSERT INTO `t_user_event_log` VALUES (259, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-11 16:00:26');
INSERT INTO `t_user_event_log` VALUES (260, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-19 10:36:11');
INSERT INTO `t_user_event_log` VALUES (261, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-20 15:18:51');
INSERT INTO `t_user_event_log` VALUES (262, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-25 13:56:26');
INSERT INTO `t_user_event_log` VALUES (263, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-25 14:12:50');
INSERT INTO `t_user_event_log` VALUES (264, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-25 14:12:58');
INSERT INTO `t_user_event_log` VALUES (265, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-25 17:02:33');
INSERT INTO `t_user_event_log` VALUES (266, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-26 16:00:10');
INSERT INTO `t_user_event_log` VALUES (267, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-26 16:04:17');
INSERT INTO `t_user_event_log` VALUES (268, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-26 16:18:20');
INSERT INTO `t_user_event_log` VALUES (269, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-26 18:18:07');
INSERT INTO `t_user_event_log` VALUES (270, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-26 20:31:50');
INSERT INTO `t_user_event_log` VALUES (271, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:08:05');
INSERT INTO `t_user_event_log` VALUES (272, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:11:47');
INSERT INTO `t_user_event_log` VALUES (273, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:12:11');
INSERT INTO `t_user_event_log` VALUES (274, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:12:56');
INSERT INTO `t_user_event_log` VALUES (275, 12, 'abcde', 'abcde', 'abcde 登录了试卷生成系统', '2020-04-28 15:13:07');
INSERT INTO `t_user_event_log` VALUES (276, 12, 'abcde', 'abcde', 'abcde 退出了试卷生成系统', '2020-04-28 15:13:12');
INSERT INTO `t_user_event_log` VALUES (277, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:13:14');
INSERT INTO `t_user_event_log` VALUES (278, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:13:20');
INSERT INTO `t_user_event_log` VALUES (279, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:13:24');
INSERT INTO `t_user_event_log` VALUES (280, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:13:51');
INSERT INTO `t_user_event_log` VALUES (281, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:14:01');
INSERT INTO `t_user_event_log` VALUES (282, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:24:35');
INSERT INTO `t_user_event_log` VALUES (283, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:24:38');
INSERT INTO `t_user_event_log` VALUES (284, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 15:25:01');
INSERT INTO `t_user_event_log` VALUES (285, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:25:05');
INSERT INTO `t_user_event_log` VALUES (286, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:25:10');
INSERT INTO `t_user_event_log` VALUES (287, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:25:14');
INSERT INTO `t_user_event_log` VALUES (288, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 15:31:22');
INSERT INTO `t_user_event_log` VALUES (289, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:31:24');
INSERT INTO `t_user_event_log` VALUES (290, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:36:13');
INSERT INTO `t_user_event_log` VALUES (291, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:36:15');
INSERT INTO `t_user_event_log` VALUES (292, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:38:20');
INSERT INTO `t_user_event_log` VALUES (293, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:38:23');
INSERT INTO `t_user_event_log` VALUES (294, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 15:41:19');
INSERT INTO `t_user_event_log` VALUES (295, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:41:21');
INSERT INTO `t_user_event_log` VALUES (296, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:41:29');
INSERT INTO `t_user_event_log` VALUES (297, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:41:35');
INSERT INTO `t_user_event_log` VALUES (298, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 15:44:11');
INSERT INTO `t_user_event_log` VALUES (299, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:44:14');
INSERT INTO `t_user_event_log` VALUES (300, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:45:32');
INSERT INTO `t_user_event_log` VALUES (301, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:45:38');
INSERT INTO `t_user_event_log` VALUES (302, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 15:46:21');
INSERT INTO `t_user_event_log` VALUES (303, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:46:23');
INSERT INTO `t_user_event_log` VALUES (304, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:48:01');
INSERT INTO `t_user_event_log` VALUES (305, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:49:11');
INSERT INTO `t_user_event_log` VALUES (306, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:49:19');
INSERT INTO `t_user_event_log` VALUES (307, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 15:49:21');
INSERT INTO `t_user_event_log` VALUES (308, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 15:49:27');
INSERT INTO `t_user_event_log` VALUES (309, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 15:49:31');
INSERT INTO `t_user_event_log` VALUES (310, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 16:38:43');
INSERT INTO `t_user_event_log` VALUES (311, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 16:44:09');
INSERT INTO `t_user_event_log` VALUES (312, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 16:44:16');
INSERT INTO `t_user_event_log` VALUES (313, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 16:44:24');
INSERT INTO `t_user_event_log` VALUES (314, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 16:44:26');
INSERT INTO `t_user_event_log` VALUES (315, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 17:02:57');
INSERT INTO `t_user_event_log` VALUES (316, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 17:02:59');
INSERT INTO `t_user_event_log` VALUES (317, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 17:03:03');
INSERT INTO `t_user_event_log` VALUES (318, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 17:03:23');
INSERT INTO `t_user_event_log` VALUES (319, 6, 'shouting', '张三', 'shouting 退出了试卷生成系统', '2020-04-28 17:03:29');
INSERT INTO `t_user_event_log` VALUES (320, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-04-28 17:03:31');
INSERT INTO `t_user_event_log` VALUES (321, 2, 'admin', '管理员', 'admin 退出了试卷生成系统', '2020-04-28 17:05:27');
INSERT INTO `t_user_event_log` VALUES (322, 6, 'shouting', '张三', 'shouting 登录了试卷生成系统', '2020-04-28 17:05:35');
INSERT INTO `t_user_event_log` VALUES (323, 2, 'admin', '管理员', 'admin 登录了试卷生成系统', '2020-06-12 17:43:59');

SET FOREIGN_KEY_CHECKS = 1;
